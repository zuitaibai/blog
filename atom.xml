<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>…酉</title>
  
  <subtitle>如是考究</subtitle>
  <link href="https://zuitaibai.gitee.io/blog/atom.xml" rel="self"/>
  
  <link href="https://zuitaibai.gitee.io/blog/"/>
  <updated>2021-12-12T00:59:26.533Z</updated>
  <id>https://zuitaibai.gitee.io/blog/</id>
  
  <author>
    <name>zuitaibai</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我的ide快捷键通用设置备忘</title>
    <link href="https://zuitaibai.gitee.io/blog/2021/12/11/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%92%8C%E6%8F%92%E4%BB%B6-IDE-2021-12-11-%E6%88%91%E7%9A%84ide%E5%BF%AB%E6%8D%B7%E9%94%AE%E9%80%9A%E7%94%A8%E8%AE%BE%E7%BD%AE%E5%A4%87%E5%BF%98/"/>
    <id>https://zuitaibai.gitee.io/blog/2021/12/11/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%92%8C%E6%8F%92%E4%BB%B6-IDE-2021-12-11-%E6%88%91%E7%9A%84ide%E5%BF%AB%E6%8D%B7%E9%94%AE%E9%80%9A%E7%94%A8%E8%AE%BE%E7%BD%AE%E5%A4%87%E5%BF%98/</id>
    <published>2021-12-11T02:28:11.000Z</published>
    <updated>2021-12-12T00:59:26.533Z</updated>
    
    <content type="html"><![CDATA[<p>以下以我刚设置好的webstorm快捷键为例（又想从vs code 转回webstorm了，一试，还是那么强大），但以后会把vs code的快捷键也设置统一</p><blockquote><p>跨ide自加快捷键方案：</p><ol><li>尽量利用alt键。此时：与大多数ide的默认快捷键冲突较少，可直接增量设置；手控距离上也方便；alt激活菜单栏功能被舍弃，本身也不怎么用这个功能，用的话直接鼠标了</li><li>alt键自己组合不够时，再多配合一个shift做扩展。shift多半设置为逆操作</li><li>尽量把组合的字母键放在左手区域（键盘左半拉），不必右手抓着鼠标时还得再过来找键，然后再回去抓鼠标（这是达不到vim水平者的最佳方式）</li><li>汇积出镜率高频繁使用的功能。那种半年用一次的功能，就去菜单栏里找就挺好或者现查现用也来得及</li><li>保留和延用大多软件通用的快捷键习惯，如ctrl+f/r, ctrl+c/v, ctrl+z, ctrl+shift+z, ctrl+f4, ctrl+g，ctrl+左右, home, end 等等不做重复设定</li></ol><p>总之：alt自定的 + 通用的 + 该ide一点点个别的</p></blockquote><h1 id="自加的（尽量无破坏增量）"><a href="#自加的（尽量无破坏增量）" class="headerlink" title="自加的（尽量无破坏增量）"></a>自加的（尽量无破坏增量）</h1><p>注：“@”表示此键还没有被设置和占用。以期将来丰富、扩展和调整</p><h4 id="一排区："><a href="#一排区：" class="headerlink" title="一排区："></a>一排区：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">alt+q 行注释　　　　　　　alt+shift+q 块注释</span><br><span class="line">alt+w 扩展选区　　　　　　alt+shift+w 收缩选区</span><br><span class="line">alt+e 查找下一个　　　　　alt+shift+e 查找上一个</span><br><span class="line">alt+r 切换自动换行</span><br><span class="line">alt+t 包裹</span><br><span class="line">@ y</span><br><span class="line">alt+u 转换大小写</span><br><span class="line">@ i o p</span><br><span class="line">alt+[ 从光标选至代码块开始</span><br><span class="line">alt+] 从光标选至代码块结束</span><br><span class="line">@ \</span><br></pre></td></tr></table></figure><h4 id="二排区"><a href="#二排区" class="headerlink" title="二排区"></a>二排区</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">alt+a 缩进　　　　　　　　alt+shift+a 取消缩进</span><br><span class="line">alt+s 复制增加　　　　　　alt+shift+s 删除光标或选区所在的行</span><br><span class="line">alt+d 添加下一个匹配项　　alt+shift+d 取消刚添加的匹配项</span><br><span class="line">alt+f 选择所有匹配项　　　alt+shift+f 高亮所有匹配项</span><br><span class="line">alt+g 格式化代码　　　　　alt+shift+g 格式化文件</span><br><span class="line">@ h j k l ; &#x27;</span><br></pre></td></tr></table></figure><h4 id="三排区"><a href="#三排区" class="headerlink" title="三排区"></a>三排区</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">alt+z 在所选各行末加入光标</span><br><span class="line">alt+x 在下方克隆光标　　　　alt+shift+x 在上方克隆光标</span><br><span class="line">alt+c 代码下移　　　　　　　alt+shift+c 代码上移</span><br><span class="line">alt+v 连接行</span><br><span class="line">alt+b 切换列选择模式 （ctrl+alt+shift+拖选：矩形选区）</span><br><span class="line">alt+n 新建临时文件</span><br><span class="line">alt+m 调出String Manipulation插件对话框（大小写驼峰等转换）（此插件需自己安装）</span><br><span class="line">@ alt+, 查找模式下切换区分大小写 （在webstorm下这个设置不了，其默认为alt+c，不过这在查找模式下用，不与我上述设定冲突）</span><br><span class="line">@ alt+. 查找模式下切换整词匹配 （在webstorm下这个设置不了，其默认为alt+w，不过这在查找模式下用，不与我上述设定冲突）</span><br><span class="line">@ alt+/ 查找模式下切换使用正则 （在webstorm下这个设置不了，其默认为alt+x，不过这在查找模式下用，不与我上述设定冲突）</span><br></pre></td></tr></table></figure><h1 id="原带的"><a href="#原带的" class="headerlink" title="原带的"></a>原带的</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">ctrl+[ 光标移至代码块开始  ctrl+] 光标移至代码块结束</span><br><span class="line"></span><br><span class="line">ctrl+f 查找　　　　　ctrl+shift+f 目录中查找</span><br><span class="line">ctrl+r 替换　　　　　ctrl+shift+r 目录中替换</span><br><span class="line"></span><br><span class="line">Ctrl+空格 代码提示</span><br><span class="line"></span><br><span class="line">alt+点击 增加删除光标</span><br><span class="line">alt+左右 tab间切换</span><br><span class="line">alt+上下 光标跳至同级代码，并视窗滚动</span><br><span class="line">ctrl+上下 视窗滚动(光标不动)</span><br><span class="line">ctrl+左右 光标单词级移动</span><br><span class="line">shift+enter 跳到下一行</span><br><span class="line">alt+1,2,3,4,5,6,7,8,9 各视图窗口</span><br><span class="line">alt+f12 终端窗口</span><br><span class="line">ctrl+滚轮 更改字号(需设置)</span><br><span class="line">ctrl+f4 关闭tab　　　　　　ctrl+shift+f4 重新打开关闭的tab(自已设置的)</span><br><span class="line">ctrl+-+ 折叠展开　　　　　　ctrl+alt+-+ 递归折叠展开 ctrl+shift+-+ 全部折叠展开 （数字键盘的也可以）</span><br><span class="line">ctrl+. 折叠展开选区</span><br><span class="line">f2 重命名(自已设置的)</span><br><span class="line"></span><br><span class="line">shift+shift 随处搜索</span><br><span class="line">ctrl+shift+n 转到文件</span><br><span class="line">ctrl+e 最近的文件</span><br><span class="line">alt+home 导航栏</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;以下以我刚设置好的webstorm快捷键为例（又想从vs code 转回webstorm了，一试，还是那么强大），但以后会把vs code的快捷键也设置统一&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;跨ide自加快捷键方案：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;尽量利用alt键。此时：</summary>
      
    
    
    
    <category term="常用工具和插件" scheme="https://zuitaibai.gitee.io/blog/categories/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%92%8C%E6%8F%92%E4%BB%B6/"/>
    
    <category term="IDE" scheme="https://zuitaibai.gitee.io/blog/categories/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%92%8C%E6%8F%92%E4%BB%B6/IDE/"/>
    
    
    <category term="快捷键" scheme="https://zuitaibai.gitee.io/blog/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>Es各版本新特性一览</title>
    <link href="https://zuitaibai.gitee.io/blog/2019/04/15/Ecmascript-2019-04-15-Es%E5%90%84%E7%89%88%E6%9C%AC%E6%96%B0%E7%89%B9%E6%80%A7%E4%B8%80%E8%A7%88/"/>
    <id>https://zuitaibai.gitee.io/blog/2019/04/15/Ecmascript-2019-04-15-Es%E5%90%84%E7%89%88%E6%9C%AC%E6%96%B0%E7%89%B9%E6%80%A7%E4%B8%80%E8%A7%88/</id>
    <published>2019-04-15T10:36:12.000Z</published>
    <updated>2021-12-11T03:02:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>简单罗列下，便于速查</p><span id="more"></span><style>.wikitable{background-color:#f8f9fa;color:#202122;margin:1em 0;border:1px solid #a2a9b1;border-collapse:collapse }.wikitable th, .wikitable td{border:1px solid #a2a9b1;padding:0.3em 0.4em }.wikitable th{background-color:#eaecf0;text-align:center; white-space: nowrap;padding-top:0.6em;padding-bottom:0.6em; }.wikitable tbody tr:nth-child(n+7) td:nth-child(-n+3){font-weight:bold;}.article-entry li:not(.toc-item){font-size:17px;line-height:1.8;color:#ff832b;}</style><table class="wikitable">    <thead>    <tr>        <th width="50">土名</th>        <th width="40">版本</th>        <th width="70">年版</th>        <th width="70">发表日期</th>        <th>与前版本的差异</th>    </tr>    </thead>    <tbody>    <tr>        <td></td>        <td>1</td>        <td></td>        <td>1997.6</td>        <td>首版</td>    </tr>    <tr>        <td></td>        <td>2</td>        <td></td>        <td>1998.6</td>        <td>格式修正，以使得其形式与ISO/IEC16262国际标准一致</td>    </tr>    <tr>        <td></td>        <td>3</td>        <td></td>        <td>1999.12</td>        <td>强大的正则表达式，更好的词法作用域链处理，新的控制指令，异常处理，错误定义更加明确，数据输出的格式化及其它改变</td>    </tr>    <tr>        <td></td>        <td>4</td>        <td></td>        <td>放弃</td>        <td>由于关于语言的复杂性出现分歧，第4版本被放弃，其中的部分成为了第5版本及Harmony的基础</td>    </tr>    <tr>        <td></td>        <td>5</td>        <td></td>        <td>2009.12</td>        <td>新增“严格模式（strict mode）”，一个子集用作提供更彻底的错误检查,以避免结构出错。澄清了许多第3版本的模糊规范，并适应了与规范不一致的真实世界实现的行为。增加了部分新功能，如getters及setters，支持<a href="https://zh.wikipedia.org/wiki/JSON" target="_blank">JSON</a>以及在对象属性上更完整的<a href="http://localhost:4000/wiki/%E5%8F%8D%E5%B0%84%E5%BC%8F%E7%BC%96%E7%A8%8B"  target="_blank">反射</a></td>    </tr>    <tr>        <td></td>        <td style="font-weight:bold">5.1</td>        <td></td>        <td>2011.6</td>        <td>ECMAScript标5.1版形式上完全一致于国际标准ISO/IEC 16262:2011。</td>    </tr>    <tr>        <td>Es 6</td>        <td>6</td>        <td>ES2015</td>        <td>2015.6</td>        <td>第 6 版，最早被称作是 ECMAScript 6（ES6），添加了类和模块的语法，其他特性包括迭代器，Python风格的生成器和生成器表达式，箭头函数，二进制数据，静态类型数组，集合（maps，sets 和 weak maps），promise，reflection 和 proxies。作为最早的 ECMAScript Harmony 版本，也被叫做ES6 Harmony。</td>    </tr>    <tr>        <td>Es 7</td>        <td>7</td>        <td>ES2016</td>        <td>2016.6</td>        <td>第 7 版，多个新的概念和语言特性<sup id="cite_ref-ES2016_9-0" class="reference"><a href="#cite_note-ES2016-9">[9]</a></sup></td>    </tr>    <tr>        <td>Es 8</td>        <td>8</td>        <td>ES2017</td>        <td>2017.6</td>        <td>第 8 版，多个新的概念和语言特性<sup id="cite_ref-:0_10-0" class="reference"><a href="#cite_note-:0-10">[10]</a></sup></td>    </tr>    <tr>        <td>Es 9</td>        <td>9</td>        <td>ES2018</td>        <td>2018.6</td>        <td>第 9 版，包含了异步循环，生成器，新的正则表达式特性和 rest/spread 语法。</td>    </tr>    <tr>        <td>Es10</td>        <td>10</td>        <td>ES2019</td>        <td>2019.6</td>        <td>第 10 版</td>    </tr>    <tr>        <td>Es11</td>        <td>11</td>        <td>ES2020</td>        <td>2020.6</td>        <td>第 11 版</td>    </tr>    <tr>        <td>Es12</td>        <td>12</td>        <td>ES2021</td>        <td>2021.6</td>        <td>第 12 版</td>    </tr>    <tr>        <td>Es13</td>        <td>13</td>        <td>ES2022</td>        <td>预2022.6</td>        <td>第 13 版</td>    </tr>    </tbody></table><h1 id="Es6-（2015）"><a href="#Es6-（2015）" class="headerlink" title="Es6 （2015）"></a>Es6 （2015）</h1><ul><li>类（class）</li><li>模块化(ES Module)</li><li>箭头（Arrow）函数</li><li>函数参数默认值</li><li>模板字符串</li><li>解构赋值</li><li>延展操作符</li><li>对象属性简写</li><li>Promise</li><li>let和const</li><li>for…of</li><li>Symbol</li><li>迭代器（Iterator）/ 生成器（Generator）</li><li>Set / WeakSet</li><li>Map / WeakMap</li><li>Proxy / Reflect</li><li>Regex对象的扩展 (u、y修饰符, .flags)</li><li>Array.from、Array.of、[].copyWithin、[].find、[].findIndex、[].fill、[].entries、[].keys、[].values</li></ul><h1 id="ES7（2016）"><a href="#ES7（2016）" class="headerlink" title="ES7（2016）"></a>ES7（2016）</h1><ul><li>Array.prototype.includes()</li><li>指数操作符 **</li><li>带标签的模版字面量转义序列的规则</li></ul><h1 id="ES8（2017）"><a href="#ES8（2017）" class="headerlink" title="ES8（2017）"></a>ES8（2017）</h1><ul><li>async/await</li><li>Object.values()</li><li>Object.entries()</li><li>String padding (padStart, padEnd)</li><li>函数参数列表结尾允许逗号</li><li>Object.getOwnPropertyDescriptors() (获取一个对象的所有自身属性的描述符,如果没有任何自身属性，则返回空对象。)</li><li>SharedArrayBuffer对象 (用来表示一个通用的，固定长度的原始二进制数据缓冲区)</li><li>Atomics对象 (提供了一组静态方法用来对 SharedArrayBuffer 对象进行原子操作)</li></ul><h1 id="ES9（2018）"><a href="#ES9（2018）" class="headerlink" title="ES9（2018）"></a>ES9（2018）</h1><ul><li>异步迭代 (await可以和for…of循环一起使用，以串行的方式运行异步操作) for await (num of asyncGenerator()) {}</li><li>模板字符串允许嵌套支持常见转义序列，移除对 ECMAScript 在带标签的模版字符串中转义序列的语法限制</li><li>Promise.finally()</li><li>Rest/Spread 属性</li><li>正则表达式 Unicode 转义</li><li>正则表达式命名捕获组</li><li>正则表达式反向断言</li><li>正则表达式dotAll模式</li></ul><h1 id="ES10（2019）"><a href="#ES10（2019）" class="headerlink" title="ES10（2019）"></a>ES10（2019）</h1><ul><li>Array.flat()和Array.flatMap()</li><li>String.trimStart()和String.trimEnd()</li><li>String.prototype.matchAll</li><li>Symbol.prototype.description</li><li>Object.fromEntries()</li><li>可选 Catch (catch 的参数可省略)</li><li>Function.prototype.toString() (现在返回精确字符，包括空格和注释)</li></ul><h1 id="ES11（2020）"><a href="#ES11（2020）" class="headerlink" title="ES11（2020）"></a>ES11（2020）</h1><ul><li>Nullish coalescing Operator (空值处理) let a = user.u ?? ‘bbb’;</li><li>Optional chaining（可选链） let u1 = user.childer?.name;</li><li>Promise.allSettled (返回一个在所有给定的promise已被决议或被拒绝后决议的promise，并带有一个对象数组，每个对象表示对应的promise结果)</li><li>动态import</li><li>export * as XX from ‘module’ 和 import * as XX from ‘module’</li><li>新基本数据类型BigInt</li><li>globalThis</li></ul><h1 id="ES12（2021）"><a href="#ES12（2021）" class="headerlink" title="ES12（2021）"></a>ES12（2021）</h1><ul><li>String.prototype.replaceAll</li><li>Promise.any</li><li>WeakRefs</li><li>FinalizationRegistry</li><li>逻辑运算符和赋值表达式 a ||= b, a &amp;&amp;= b, a ??= b</li><li>数字分隔符 const money = 1_000_000_000;</li></ul><h1 id="预-ES13（2022）"><a href="#预-ES13（2022）" class="headerlink" title="(预)ES13（2022）"></a>(预)ES13（2022）</h1><ul><li>声明类的字段: 到目前为止，在ES规范中，类的字段定义和初始化是在类的构造函数中完成的。但是在新的提案中，类字段可以在类的顶层被定义和初始化</li><li>私有方法和字段: 用#前缀来定义类的私有方法和字段</li><li>类的静态公共方法和字段: 类增加了静态公共字段、静态私有方法和静态私有字段的特性</li><li>正则匹配索引: 该提案提供了一个新的/dflag，以获得关于输入字符串中每个匹配的开始和索引位置结束的额外信息</li><li>Top-level await: 顶层的await允许在异步函数之外使用await关键字。这个提案允许模块当做大型异步函数，所以这些ECMAScript模块可以等待资源加载，这样其他导入这些模块的模块在开始执行自己的代码之前也要等待资源加载完再去执行</li><li>检测私有字段</li><li>在所有内置的可索引数据上新增.at()方法: 新增一个新的数组方法，通过给定的索引来获取一个元素。当给定的索引为正数时，这个新方法的行为与使用括号符号的访问相同，但是当我们给定一个负整数的索引时，它就像python的 “负数索引 “一样工作，这意味着at()方法以负整数为索引，从数组的最后一项往后数。所以该方法可以被执行为array.at(-1)，它的行为与array[array.length-1]相同</li><li>Object.hasOwn(object, property): 简单讲就是使用Object.hasOwn来替代Object.prototype.hasOwnProperty.call(太长了，不好看)</li><li>ECMAScript类静态初始化块: 类静态块提议提供了一种优雅的方式，在类声明/定义期间评估静态初始化代码块，可以访问类的私有字段</li></ul><hr><p>参考资料</p><blockquote><p><a href="https://github.com/tc39/proposals/blob/master/finished-proposals.md">esmacript finished github</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;简单罗列下，便于速查&lt;/p&gt;</summary>
    
    
    
    <category term="Ecmascript" scheme="https://zuitaibai.gitee.io/blog/categories/Ecmascript/"/>
    
    
    <category term="新特性" scheme="https://zuitaibai.gitee.io/blog/tags/%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
    <category term="Ecmascript" scheme="https://zuitaibai.gitee.io/blog/tags/Ecmascript/"/>
    
    <category term="Es6" scheme="https://zuitaibai.gitee.io/blog/tags/Es6/"/>
    
    <category term="Es7" scheme="https://zuitaibai.gitee.io/blog/tags/Es7/"/>
    
    <category term="Es8" scheme="https://zuitaibai.gitee.io/blog/tags/Es8/"/>
    
    <category term="Es9" scheme="https://zuitaibai.gitee.io/blog/tags/Es9/"/>
    
    <category term="Es10" scheme="https://zuitaibai.gitee.io/blog/tags/Es10/"/>
    
    <category term="Es11" scheme="https://zuitaibai.gitee.io/blog/tags/Es11/"/>
    
    <category term="Es12" scheme="https://zuitaibai.gitee.io/blog/tags/Es12/"/>
    
    <category term="Es13" scheme="https://zuitaibai.gitee.io/blog/tags/Es13/"/>
    
  </entry>
  
  <entry>
    <title>ng实现计算器-绑定键盘</title>
    <link href="https://zuitaibai.gitee.io/blog/2019/04/11/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-angular-2019-4-11-ng%E5%AE%9E%E7%8E%B0%E8%AE%A1%E7%AE%97%E5%99%A8-%E7%BB%91%E5%AE%9A%E9%94%AE%E7%9B%98/"/>
    <id>https://zuitaibai.gitee.io/blog/2019/04/11/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-angular-2019-4-11-ng%E5%AE%9E%E7%8E%B0%E8%AE%A1%E7%AE%97%E5%99%A8-%E7%BB%91%E5%AE%9A%E9%94%AE%E7%9B%98/</id>
    <published>2019-04-11T02:20:01.000Z</published>
    <updated>2019-04-11T02:21:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>在此记录一个简单的计算器实现 github action try12。</p><span id="more"></span><h1 id="样式：calculator-component-css"><a href="#样式：calculator-component-css" class="headerlink" title="样式：calculator.component.css"></a>样式：calculator.component.css</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.calc&#123; position: fixed; right: 0; bottom: 0; z-index: 999; &#125;</span><br><span class="line">.chacha&#123; cursor: pointer; color:<span class="comment">#fff; position:absolute;text-decoration:none; font-weight: 600;right:0;top:-17px;text-decoration:none;font-weight: 600;background: #555;padding: 0 2px; &#125;</span></span><br><span class="line">.calc td &#123; user-select: none; cursor: pointer;border-bottom:1px solid <span class="comment">#fff; background-color:#303133; width: 70px; height: 44px; color: white; text-align: center; font-size: 20px; padding:0!important; &#125;</span></span><br><span class="line">.calc td ~ td&#123;border-left:1px solid <span class="comment">#fff;&#125;</span></span><br><span class="line"></span><br><span class="line">.calc .td_orange &#123; background-color: <span class="comment">#FA6F14; &#125;</span></span><br><span class="line">.calc .td_content_calc&#123;</span><br><span class="line">    font-weight:normal;border-bottom:1px solid <span class="comment">#fff;</span></span><br><span class="line">    height: 44px; color: white; text-align: center; font-size: 20px; padding:0!important;</span><br><span class="line">&#125;</span><br><span class="line">.calc .td_content_calc:empty:before&#123; content: attr(placeholder); color:<span class="comment">#8c8888; font-size:14px; &#125;</span></span><br><span class="line">.calc .td_content_calc:focus:before&#123; content:none; &#125;</span><br><span class="line">.calc td.active,.calc td:active&#123;background: blue;color:red;font-weight:bold;&#125;</span><br><span class="line">.bsbio&#123;background:<span class="comment">#555;font-size:13px;font-weight:normal;height:30px;color:#eee;&#125;</span></span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="模板：calculator-component-html"><a href="#模板：calculator-component-html" class="headerlink" title="模板：calculator.component.html"></a>模板：calculator.component.html</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;calc&quot;</span> tabindex=<span class="string">&quot;-1&quot;</span> [hidden]=<span class="string">&quot;!calcShow&quot;</span>&gt;</span><br><span class="line">    &lt;span class=<span class="string">&quot;chacha&quot;</span> (click)=<span class="string">&quot;evClose(false)&quot;</span>&gt;×&lt;/span&gt;</span><br><span class="line">    &lt;table align=<span class="string">&quot;center&quot;</span> (click)=<span class="string">&quot;clickCalc(<span class="variable">$event</span>)&quot;</span> &gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th class=<span class="string">&quot;td_orange td_content_calc&quot;</span> colspan=<span class="string">&quot;5&quot;</span> placeholder=<span class="string">&quot;支持键盘操作&quot;</span> contenteditable=<span class="string">&quot;true&quot;</span>&gt;&#123;&#123;calcStatus&#125;&#125;&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.if7&quot;</span> data-s=<span class="string">&quot;7&quot;</span>&gt;7&lt;/td&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.if8&quot;</span> data-s=<span class="string">&quot;8&quot;</span>&gt;8&lt;/td&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.if9&quot;</span> data-s=<span class="string">&quot;9&quot;</span>&gt;9&lt;/td&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.ifA&quot;</span> data-s=<span class="string">&quot;+&quot;</span>&gt;+&lt;/td&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.ifB&quot;</span> data-s=<span class="string">&quot;-&quot;</span>&gt;-&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.if4&quot;</span> data-s=<span class="string">&quot;4&quot;</span>&gt;4&lt;/td&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.if5&quot;</span> data-s=<span class="string">&quot;5&quot;</span>&gt;5&lt;/td&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.if6&quot;</span> data-s=<span class="string">&quot;6&quot;</span>&gt;6&lt;/td&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.ifC&quot;</span> data-s=<span class="string">&quot;*&quot;</span>&gt;×&lt;/td&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.ifD&quot;</span> data-s=<span class="string">&quot;/&quot;</span>&gt;÷&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.if1&quot;</span> data-s=<span class="string">&quot;1&quot;</span>&gt;1&lt;/td&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.if2&quot;</span> data-s=<span class="string">&quot;2&quot;</span>&gt;2&lt;/td&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.if3&quot;</span> data-s=<span class="string">&quot;3&quot;</span>&gt;3&lt;/td&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.ifE&quot;</span> data-s=<span class="string">&quot;(&quot;</span>&gt;(&lt;/td&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.ifF&quot;</span> data-s=<span class="string">&quot;)&quot;</span>&gt;)&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.if0&quot;</span> data-s=<span class="string">&quot;0&quot;</span>&gt;0&lt;/td&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.ifG&quot;</span> data-s=<span class="string">&quot;.&quot;</span>&gt;.&lt;/td&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.ifH&quot;</span> data-s=<span class="string">&quot;Backspace&quot;</span>&gt;←&lt;/td&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.ifI&quot;</span> data-s=<span class="string">&quot;Delete&quot;</span> class=<span class="string">&quot;td_orange&quot;</span>&gt;dels&lt;/td&gt;</span><br><span class="line">            &lt;td [class.active]=<span class="string">&quot;viewActObj.ifJ&quot;</span> data-s=<span class="string">&quot;Enter&quot;</span> class=<span class="string">&quot;td_orange&quot;</span>&gt;=&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th class=<span class="string">&quot;bsbio&quot;</span> colspan=<span class="string">&quot;5&quot;</span>&gt;&#123;&#123;calcInfo&#125;&#125;&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="TS：calculator-component-ts"><a href="#TS：calculator-component-ts" class="headerlink" title="TS：calculator.component.ts"></a>TS：calculator.component.ts</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Component, OnInit, HostListener, Input, Output, EventEmitter &#125; from <span class="string">&#x27;@angular/core&#x27;</span>;</span><br><span class="line">import &#123; Calc &#125; from <span class="string">&#x27;./calc&#x27;</span>;</span><br><span class="line"></span><br><span class="line">@Component(&#123;</span><br><span class="line">    selector: <span class="string">&#x27;app-calculator&#x27;</span>,</span><br><span class="line">    templateUrl: <span class="string">&#x27;./calculator.component.html&#x27;</span>,</span><br><span class="line">    styleUrls: [<span class="string">&#x27;./calculator.component.css&#x27;</span>]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">export</span> class CalculatorComponent implements OnInit &#123;</span><br><span class="line"></span><br><span class="line">    // tslint:disable-next-line:no-input-rename</span><br><span class="line">    @Input(<span class="string">&#x27;show&#x27;</span>) calcShow = <span class="literal">false</span>;</span><br><span class="line">    // tslint:disable-next-line:no-output-on-prefix</span><br><span class="line">    @Output() onClose: EventEmitter&lt;boolean&gt; = new EventEmitter();</span><br><span class="line">    calcStatus = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    calcInfo = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    timer: any;</span><br><span class="line">    calcc: Calc;</span><br><span class="line">    viewActObj = &#123; if7: <span class="literal">false</span>, if8: <span class="literal">false</span>, if9: <span class="literal">false</span>, ifA: <span class="literal">false</span>, ifB: <span class="literal">false</span>, if4: <span class="literal">false</span>, if5: <span class="literal">false</span>, if6: <span class="literal">false</span>, ifC: <span class="literal">false</span>, ifD: <span class="literal">false</span>, if1: <span class="literal">false</span>, if2: <span class="literal">false</span>, if3: <span class="literal">false</span>, ifE: <span class="literal">false</span>, ifF: <span class="literal">false</span>, if0: <span class="literal">false</span>, ifG: <span class="literal">false</span>, ifH: <span class="literal">false</span>, ifI: <span class="literal">false</span>, ifJ: <span class="literal">false</span> &#125;;</span><br><span class="line">    keysMap = &#123;</span><br><span class="line">        1: <span class="string">&#x27;1&#x27;</span>, 2: <span class="string">&#x27;2&#x27;</span>, 3: <span class="string">&#x27;3&#x27;</span>, 4: <span class="string">&#x27;4&#x27;</span>, 5: <span class="string">&#x27;5&#x27;</span>, 6: <span class="string">&#x27;6&#x27;</span>, 7: <span class="string">&#x27;7&#x27;</span>, 8: <span class="string">&#x27;8&#x27;</span>, 9: <span class="string">&#x27;9&#x27;</span>, 0: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;+&#x27;</span>: <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;-&#x27;</span>: <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;*&#x27;</span>: <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;/&#x27;</span>: <span class="string">&#x27;D&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;(&#x27;</span>: <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;)&#x27;</span>: <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;.&#x27;</span>: <span class="string">&#x27;G&#x27;</span>, Backspace: <span class="string">&#x27;H&#x27;</span>, Delete: <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;=&#x27;</span>: <span class="string">&#x27;J&#x27;</span>, Enter: <span class="string">&#x27;J&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line">    keys = [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;.&#x27;</span>];</span><br><span class="line">    keysAll = [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;Backspace&#x27;</span>, <span class="string">&#x27;Delete&#x27;</span>, <span class="string">&#x27;Enter&#x27;</span>];</span><br><span class="line">    <span class="function"><span class="title">constructor</span></span>() &#123;</span><br><span class="line">        this.calcc = new Calc();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">ngOnInit</span></span>() &#123; &#125;</span><br><span class="line"></span><br><span class="line">    @HostListener(<span class="string">&#x27;document:keyup&#x27;</span>, [<span class="string">&#x27;$event&#x27;</span>])</span><br><span class="line">    writeInput(event: KeyboardEvent): void &#123;</span><br><span class="line">        <span class="keyword">if</span> (event.key === <span class="string">&#x27;J&#x27;</span> &amp;&amp; event.shiftKey) &#123;</span><br><span class="line">            this.evClose(this.calcShow = !this.calcShow);</span><br><span class="line">            <span class="built_in">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!this.calcShow) &#123; <span class="built_in">return</span>; &#125;</span><br><span class="line">        <span class="keyword">if</span> (this.keysAll.find((v: string) =&gt; v === event.key)) &#123;</span><br><span class="line">            this.calcViewAct(event.key);</span><br><span class="line">            this.goCalc(event.key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    goCalc(eventName: string) &#123;</span><br><span class="line">        <span class="keyword">if</span> (this.keys.find((v: string) =&gt; v === eventName)) &#123;</span><br><span class="line">            <span class="built_in">let</span> wd = eventName;</span><br><span class="line">            <span class="keyword">if</span> (wd === <span class="string">&#x27;*&#x27;</span>) &#123; wd = <span class="string">&#x27;×&#x27;</span>; &#125;</span><br><span class="line">            <span class="keyword">if</span> (wd === <span class="string">&#x27;/&#x27;</span>) &#123; wd = <span class="string">&#x27;÷&#x27;</span>; &#125;</span><br><span class="line">            this.calcStatus += wd;</span><br><span class="line">            <span class="built_in">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        switch (eventName) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;Backspace&#x27;</span>: &#123;</span><br><span class="line">                const len = this.calcStatus.length;</span><br><span class="line">                <span class="keyword">if</span> (len &gt;= 1) &#123; this.calcStatus = this.calcStatus.substring(0, len - 1); &#125;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;Delete&#x27;</span>: this.calcStatus = <span class="string">&#x27;&#x27;</span>; <span class="built_in">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;Enter&#x27;</span> : &#123;</span><br><span class="line">                <span class="keyword">if</span> (this.calcStatus === <span class="string">&#x27;&#x27;</span>) &#123; <span class="built_in">return</span>; &#125;</span><br><span class="line">                const pre = this.calcStatus;</span><br><span class="line">                this.calcStatus = <span class="string">&#x27;&#x27;</span> + this.calcc.parse(pre);</span><br><span class="line">                this.calcInfo = pre + <span class="string">&#x27;=&#x27;</span> + this.calcStatus;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    calcViewAct(str: string) &#123;</span><br><span class="line">        clearTimeout(this.timer);</span><br><span class="line">        <span class="keyword">for</span> (const item of Object.keys(this.viewActObj)) &#123;</span><br><span class="line">            this.viewActObj[item] = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        const key = `<span class="keyword">if</span><span class="variable">$&#123;this.keysMap[str]&#125;</span>`;</span><br><span class="line">        this.viewActObj[key] = <span class="literal">true</span>;</span><br><span class="line">        this.timer = setTimeout(() =&gt; this.viewActObj[key] = <span class="literal">false</span>, 80);</span><br><span class="line">    &#125;</span><br><span class="line">    clickCalc(event: any) &#123;</span><br><span class="line">        <span class="keyword">if</span> (event.target.tagName.toLowerCase() === <span class="string">&#x27;td&#x27;</span>) &#123;</span><br><span class="line">            const str = event.target.getAttribute(<span class="string">&#x27;data-s&#x27;</span>);</span><br><span class="line">            this.goCalc(str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    evClose(blean: boolean) &#123;</span><br><span class="line">        this.onClose.emit(this.calcShow = blean);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="TS：calc-ts"><a href="#TS：calc-ts" class="headerlink" title="TS：calc.ts"></a>TS：calc.ts</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> class Calc &#123;</span><br><span class="line">    parse(content: string) &#123;</span><br><span class="line">        <span class="built_in">let</span> index = content.lastIndexOf(<span class="string">&#x27;(&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (index &gt; -1) &#123;</span><br><span class="line">            const endIndex = content.indexOf(<span class="string">&#x27;)&#x27;</span>, index);</span><br><span class="line">            <span class="keyword">if</span> (endIndex &gt; -1) &#123;</span><br><span class="line">                const result = this.parse(content.substring(index + 1, endIndex));</span><br><span class="line">                <span class="built_in">return</span> this.parse(content.substring(0, index) + (<span class="string">&#x27;&#x27;</span> + result) + content.substring(endIndex + 1));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">let</span> x: string | number;</span><br><span class="line">        <span class="built_in">let</span> y: string | number;</span><br><span class="line">        index = content.indexOf(<span class="string">&#x27;+&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (index &gt; -1) &#123;</span><br><span class="line">            x = content.substring(0, index);</span><br><span class="line">            y = content.substring(index + 1);</span><br><span class="line">            <span class="keyword">if</span> (typeof x !== <span class="string">&#x27;number&#x27;</span>) &#123; x = this.parse(x); &#125;</span><br><span class="line">            <span class="keyword">if</span> (typeof y !== <span class="string">&#x27;number&#x27;</span>) &#123; y = this.parse(y); &#125;</span><br><span class="line">            <span class="built_in">return</span> this.floatAdd(x as number, y as number);</span><br><span class="line">        &#125;</span><br><span class="line">        index = content.lastIndexOf(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (index &gt; -1) &#123;</span><br><span class="line">            x = content.substring(0, index);</span><br><span class="line">            y = content.substring(index + 1);</span><br><span class="line">            <span class="keyword">if</span> (typeof x !== <span class="string">&#x27;number&#x27;</span>) &#123; x = this.parse(x); &#125;</span><br><span class="line">            <span class="keyword">if</span> (typeof y !== <span class="string">&#x27;number&#x27;</span>) &#123; y = this.parse(y); &#125;</span><br><span class="line">            <span class="built_in">return</span> this.floatSub(x as number, y as number);</span><br><span class="line">        &#125;</span><br><span class="line">        index = content.lastIndexOf(<span class="string">&#x27;×&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (index &gt; -1) &#123;</span><br><span class="line">            x = content.substring(0, index);</span><br><span class="line">            y = content.substring(index + 1);</span><br><span class="line">            <span class="keyword">if</span> (typeof x !== <span class="string">&#x27;number&#x27;</span>) &#123; x = this.parse(x); &#125;</span><br><span class="line">            <span class="keyword">if</span> (typeof y !== <span class="string">&#x27;number&#x27;</span>) &#123; y = this.parse(y); &#125;</span><br><span class="line">            <span class="built_in">return</span> this.floatMul(x as number, y as number);</span><br><span class="line">        &#125;</span><br><span class="line">        index = content.lastIndexOf(<span class="string">&#x27;÷&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (index &gt; -1) &#123;</span><br><span class="line">            x = content.substring(0, index);</span><br><span class="line">            y = content.substring(index + 1);</span><br><span class="line">            <span class="keyword">if</span> (typeof x !== <span class="string">&#x27;number&#x27;</span>) &#123; x = this.parse(x); &#125;</span><br><span class="line">            <span class="keyword">if</span> (typeof y !== <span class="string">&#x27;number&#x27;</span>) &#123; y = this.parse(y); &#125;</span><br><span class="line">            <span class="built_in">return</span> this.floatDiv(x as number, y as number);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;&#x27;</span> === content) &#123;</span><br><span class="line">            <span class="built_in">return</span> 0;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">return</span> Number(content);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    floatAdd(arg1: number, arg2: number) &#123;</span><br><span class="line">        <span class="built_in">let</span> r1: number;</span><br><span class="line">        <span class="built_in">let</span> r2: number;</span><br><span class="line">        try &#123;</span><br><span class="line">            r1 = arg1.toString().split(<span class="string">&#x27;.&#x27;</span>)[1].length;</span><br><span class="line">        &#125; catch (e) &#123;</span><br><span class="line">            r1 = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        try &#123;</span><br><span class="line">            r2 = arg2.toString().split(<span class="string">&#x27;.&#x27;</span>)[1].length;</span><br><span class="line">        &#125; catch (e) &#123;</span><br><span class="line">            r2 = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        const m = Math.pow(10, Math.max(r1, r2));</span><br><span class="line">        <span class="built_in">return</span> (arg1 * m + arg2 * m) / m;</span><br><span class="line">    &#125;</span><br><span class="line">    floatSub(arg1: number, arg2: number) &#123;</span><br><span class="line">        <span class="built_in">let</span> r1: number;</span><br><span class="line">        <span class="built_in">let</span> r2: number;</span><br><span class="line">        try &#123;</span><br><span class="line">            r1 = arg1.toString().split(<span class="string">&#x27;.&#x27;</span>)[1].length;</span><br><span class="line">        &#125; catch (e) &#123;</span><br><span class="line">            r1 = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        try &#123;</span><br><span class="line">            r2 = arg2.toString().split(<span class="string">&#x27;.&#x27;</span>)[1].length;</span><br><span class="line">        &#125; catch (e) &#123;</span><br><span class="line">            r2 = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        const m = Math.pow(10, Math.max(r1, r2));</span><br><span class="line">        const n = (r1 &gt;= r2) ? r1 : r2;</span><br><span class="line">        <span class="built_in">return</span> ((arg1 * m - arg2 * m) / m).toFixed(n);</span><br><span class="line">    &#125;</span><br><span class="line">    floatMul(arg1: number, arg2: number) &#123;</span><br><span class="line">        <span class="built_in">let</span> m = 0;</span><br><span class="line">        const s1 = arg1.toString();</span><br><span class="line">        const s2 = arg2.toString();</span><br><span class="line">        try &#123;</span><br><span class="line">            m += s1.split(<span class="string">&#x27;.&#x27;</span>)[1].length;</span><br><span class="line">        &#125; catch (e) &#123; &#125;</span><br><span class="line">        try &#123;</span><br><span class="line">            m += s2.split(<span class="string">&#x27;.&#x27;</span>)[1].length;</span><br><span class="line">        &#125; catch (e) &#123; &#125;</span><br><span class="line">        <span class="built_in">return</span> Number(s1.replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;&#x27;</span>)) * Number(s2.replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;&#x27;</span>)) / Math.pow(10, m)</span><br><span class="line">    &#125;</span><br><span class="line">    floatDiv(arg1: number, arg2: number) &#123;</span><br><span class="line">        <span class="built_in">let</span> t1 = 0;</span><br><span class="line">        <span class="built_in">let</span> t2 = 0;</span><br><span class="line">        try &#123;</span><br><span class="line">            t1 = arg1.toString().split(<span class="string">&#x27;.&#x27;</span>)[1].length;</span><br><span class="line">        &#125; catch (e) &#123; &#125;</span><br><span class="line">        try &#123;</span><br><span class="line">            t2 = arg2.toString().split(<span class="string">&#x27;.&#x27;</span>)[1].length;</span><br><span class="line">        &#125; catch (e) &#123; &#125;</span><br><span class="line">        const r1 = Number(arg1.toString().replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;&#x27;</span>));</span><br><span class="line">        const r2 = Number(arg2.toString().replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;&#x27;</span>));</span><br><span class="line">        const v = (r1 / r2) * Math.pow(10, t2 - t1);</span><br><span class="line">        <span class="built_in">return</span> Number(v.toFixed(4));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="使用："><a href="#使用：" class="headerlink" title="使用："></a>使用：</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;app-calculator [show]=<span class="string">&quot;calcShow&quot;</span> (onClose)=<span class="string">&quot;onCalcClose(<span class="variable">$event</span>)&quot;</span>&gt;&lt;/app-calculator&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">calcShow: boolean = <span class="literal">true</span>;</span><br><span class="line">onCalcClose(show: boolean) &#123; this.calcShow = show; &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;在此记录一个简单的计算器实现 github action try12。&lt;/p&gt;</summary>
    
    
    
    <category term="前端框架" scheme="https://zuitaibai.gitee.io/blog/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
    <category term="angular" scheme="https://zuitaibai.gitee.io/blog/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/angular/"/>
    
    
    <category term="ng" scheme="https://zuitaibai.gitee.io/blog/tags/ng/"/>
    
    <category term="angular" scheme="https://zuitaibai.gitee.io/blog/tags/angular/"/>
    
    <category term="calc" scheme="https://zuitaibai.gitee.io/blog/tags/calc/"/>
    
  </entry>
  
  <entry>
    <title>ng实现分页组件</title>
    <link href="https://zuitaibai.gitee.io/blog/2019/04/11/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-angular-2019-04-11-ng%E5%AE%9E%E7%8E%B0%E5%88%86%E9%A1%B5%E7%BB%84%E4%BB%B6/"/>
    <id>https://zuitaibai.gitee.io/blog/2019/04/11/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-angular-2019-04-11-ng%E5%AE%9E%E7%8E%B0%E5%88%86%E9%A1%B5%E7%BB%84%E4%BB%B6/</id>
    <published>2019-04-11T02:14:00.000Z</published>
    <updated>2019-04-11T02:14:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>在此记录一个简单的分页组件实现。</p><span id="more"></span><h1 id="1-data方式"><a href="#1-data方式" class="headerlink" title="1. data方式"></a>1. data方式</h1><br/><h2 id="样式：paging-component-css"><a href="#样式：paging-component-css" class="headerlink" title="样式：paging.component.css"></a>样式：paging.component.css</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.pagination&#123;vertical-align:middle;&#125;</span><br><span class="line">.pagination a,.pagination span&#123;padding:0 5px;margin-right:5px;border: 1px solid <span class="comment">#ddd;text-align:center;line-height:26px;display:inline-block;min-width:20px;color:#000; vertical-align:middle;&#125;</span></span><br><span class="line">.pagination .pageem&#123;line-height:28px;display:inline-block;vertical-align:middle;font-style:normal;color:<span class="comment">#aaa;&#125;</span></span><br><span class="line">.pagination .pageem1&#123;margin-left:2em;margin-right:4px;&#125;</span><br><span class="line">.pagination .pageem2&#123;margin-left:5px;&#125;</span><br><span class="line">.pagination a &#123;text-decoration: none;&#125;</span><br><span class="line">.pagination a:hover,.pagination a:active &#123;border-color:<span class="comment">#666;color: #000;&#125;</span></span><br><span class="line">.pagination .pagefirst,.pagination .pageprev,.pagination .pagelast,.pagination .pagenext&#123;font-size:12px;&#125;</span><br><span class="line">.pagination .pageprev&#123;margin-right:2em;&#125;</span><br><span class="line">.pagination .pagenext&#123;margin-left:2em;&#125;</span><br><span class="line">.pagination .current &#123;border-color:transparent;color:blue;&#125;</span><br><span class="line">.pagination .disabled &#123;border: 1px solid <span class="comment">#EEE;color: #DDD;&#125;</span></span><br><span class="line">.pagination .pagepoints&#123;border-color:transparent;&#125;</span><br><span class="line">.pagination .pageselect&#123;box-sizing:border-box;height:26px;vertical-align:middle;&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="模板：paging-component-html"><a href="#模板：paging-component-html" class="headerlink" title="模板：paging.component.html"></a>模板：paging.component.html</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;span *ngIf=<span class="string">&quot;showInfo&quot;</span> style=<span class="string">&quot;float:right;line-height:28px;&quot;</span>&gt;</span><br><span class="line">        记录: &lt;span class=<span class="string">&quot;red&quot;</span>&gt;&#123;&#123;total&#125;&#125;&lt;/span&gt; 页: &lt;span id=<span class="string">&quot;cur&quot;</span> class=<span class="string">&quot;red&quot;</span>&gt;&#123;&#123;curP&#125;&#125;&lt;/span&gt;/&lt;span class=<span class="string">&quot;red&quot;</span>&gt;&#123;&#123;pageCount&#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">    &lt;div *ngIf=<span class="string">&quot;list.length&gt;1&quot;</span> class=<span class="string">&quot;pagination&quot;</span>&gt;</span><br><span class="line">        &lt;ng-container *ngFor=<span class="string">&quot;let item of list&quot;</span>&gt;</span><br><span class="line">            &lt;!-- item: &#123; value: 1, <span class="built_in">type</span>: <span class="string">&#x27;first&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: conf.wordFt &#125; --&gt;</span><br><span class="line">            &lt;!-- value: 值,</span><br><span class="line">                 <span class="built_in">type</span>: first/prev/next/last/normal/current/elp,</span><br><span class="line">                 link: 是否链接, <span class="built_in">disable</span>:是否禁用, text:铵钮文字</span><br><span class="line">            --&gt;</span><br><span class="line">            &lt;ng-container *ngIf=<span class="string">&quot;item.type===&#x27;normal&#x27;&quot;</span>&gt;</span><br><span class="line">                &lt;a *ngIf=<span class="string">&quot;item.link&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span> (click)=<span class="string">&quot;evChangePage(item.value)&quot;</span>&gt;&#123;&#123;item.text&#125;&#125;&lt;/a&gt;</span><br><span class="line">            &lt;/ng-container&gt;</span><br><span class="line">            &lt;ng-container *ngIf=<span class="string">&quot;item.type!==&#x27;normal&#x27;&quot;</span>&gt;</span><br><span class="line">                &lt;a *ngIf=<span class="string">&quot;item.link&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span></span><br><span class="line">                    [ngClass]=<span class="string">&quot;&#123;</span></span><br><span class="line"><span class="string">                        current:item.type===&#x27;current&#x27;, disabled:item.disable,</span></span><br><span class="line"><span class="string">                        pagenext: item.type===&#x27;next&#x27;, pageprev: item.type===&#x27;prev&#x27;,</span></span><br><span class="line"><span class="string">                        pagefirst: item.type===&#x27;first&#x27;, pagelast: item.type===&#x27;last&#x27;,</span></span><br><span class="line"><span class="string">                        pagepoints: item.type===&#x27;elp&#x27;</span></span><br><span class="line"><span class="string">                    &#125;&quot;</span></span><br><span class="line">                    (click)=<span class="string">&quot;evChangePage(item.value)&quot;</span>&gt;&#123;&#123;item.text&#125;&#125;&lt;/a&gt;</span><br><span class="line">                &lt;span *ngIf=<span class="string">&quot;!item.link&quot;</span></span><br><span class="line">                    [ngClass]=<span class="string">&quot;&#123;</span></span><br><span class="line"><span class="string">                        current:item.type===&#x27;current&#x27;, disabled:item.disable,</span></span><br><span class="line"><span class="string">                        pagenext: item.type===&#x27;next&#x27;, pageprev: item.type===&#x27;prev&#x27;,</span></span><br><span class="line"><span class="string">                        pagefirst: item.type===&#x27;first&#x27;, pagelast: item.type===&#x27;last&#x27;,</span></span><br><span class="line"><span class="string">                        pagepoints: item.type===&#x27;elp&#x27;</span></span><br><span class="line"><span class="string">                    &#125;&quot;</span>&gt;&#123;&#123;item.text&#125;&#125;&lt;/span&gt;</span><br><span class="line">            &lt;/ng-container&gt;</span><br><span class="line">        &lt;/ng-container&gt;</span><br><span class="line">        &lt;ng-container *ngIf=<span class="string">&quot;ifSelect &amp;&amp; pageCount&gt;1&quot;</span>&gt;</span><br><span class="line">            &lt;em class=<span class="string">&quot;pageem pageem1&quot;</span>&gt;跳到第&lt;/em&gt;&lt;select [ngModel]=<span class="string">&quot;curP&quot;</span></span><br><span class="line">                (change)=<span class="string">&quot;evChangePage(selects.value)&quot;</span> <span class="comment">#selects&gt;</span></span><br><span class="line">                &lt;option *ngFor=<span class="string">&quot;let item of pagesArr; index as vv&quot;</span> [value]=<span class="string">&quot;vv+1&quot;</span>&gt;&#123;&#123;vv+1&#125;&#125;&lt;/option&gt;</span><br><span class="line">            &lt;/select&gt;&lt;em class=<span class="string">&quot;pageem  pageem2&quot;</span>&gt;页&lt;/em&gt;</span><br><span class="line">        &lt;/ng-container&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="TS：paging-component-ts"><a href="#TS：paging-component-ts" class="headerlink" title="TS：paging.component.ts"></a>TS：paging.component.ts</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Component, OnInit, Input, Output, EventEmitter, OnChanges &#125; from <span class="string">&#x27;@angular/core&#x27;</span>;</span><br><span class="line">import &#123; ObjTpye &#125; from <span class="string">&#x27;../../util/types&#x27;</span>;</span><br><span class="line"></span><br><span class="line">const build = (curP: number, pageCount: number, conf: ObjTpye) =&gt; &#123;</span><br><span class="line">    const list = [];</span><br><span class="line">    // list-item: &#123; value: 1, <span class="built_in">type</span>: <span class="string">&#x27;first&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: conf.wordFt &#125;</span><br><span class="line">    /*</span><br><span class="line">        value: 值,</span><br><span class="line">        <span class="built_in">type</span>: first/prev/next/last/normal/current/elp,</span><br><span class="line">        link: 是否链接, <span class="built_in">disable</span>:是否禁用, text:铵钮文字</span><br><span class="line">    */</span><br><span class="line">    <span class="keyword">if</span> (pageCount &lt; 1) &#123; pageCount = 1; &#125;</span><br><span class="line">    <span class="keyword">if</span> (curP &gt; pageCount) &#123; curP = pageCount; &#125;</span><br><span class="line">    <span class="keyword">if</span> (pageCount &gt; 1) &#123;</span><br><span class="line">        // first and previous button</span><br><span class="line">        <span class="keyword">if</span> (curP &gt; 1) &#123;</span><br><span class="line">            <span class="keyword">if</span> (conf.showFtLt) &#123;</span><br><span class="line">                list.push(&#123; value: 1, <span class="built_in">type</span>: <span class="string">&#x27;first&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: conf.wordFt &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (conf.showPvNt) &#123;</span><br><span class="line">                list.push(&#123; value: curP - 1, <span class="built_in">type</span>: <span class="string">&#x27;prev&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: conf.wordPv &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (conf.showFtLt) &#123;</span><br><span class="line">                list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;first&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">true</span>, text: conf.wordFt &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (conf.showPvNt) &#123;</span><br><span class="line">                list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;prev&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">true</span>, text: conf.wordPv &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        // pages</span><br><span class="line">        <span class="keyword">if</span> (pageCount &lt; 7 + (conf.adjacents * 2)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">let</span> item = 1; item &lt;= pageCount; item++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (item === curP) &#123;</span><br><span class="line">                    list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;current&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: item &#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    list.push(&#123; value: item, <span class="built_in">type</span>: <span class="string">&#x27;normal&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: item &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            // enough pages to hide some</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (pageCount &gt;= 7 + (conf.adjacents * 2)) &#123;</span><br><span class="line">            // close to beginning only hide later pages</span><br><span class="line">            <span class="keyword">if</span> (curP &lt; 1 + (conf.adjacents * 3)) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">let</span> item = 1; item &lt;= (4 + (conf.adjacents * 2)) - 1; item++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (item === curP) &#123;</span><br><span class="line">                        list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;current&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: item &#125;);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        list.push(&#123; value: item, <span class="built_in">type</span>: <span class="string">&#x27;normal&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: item &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;elp&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: conf.wordElp &#125;);</span><br><span class="line">                list.push(&#123; value: pageCount - 1, <span class="built_in">type</span>: <span class="string">&#x27;normal&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: pageCount - 1 &#125;);</span><br><span class="line">                list.push(&#123; value: pageCount, <span class="built_in">type</span>: <span class="string">&#x27;normal&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: pageCount &#125;);</span><br><span class="line">                // <span class="keyword">in</span> middle hide some front and some back</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (pageCount - (conf.adjacents * 2) &gt; curP &amp;&amp; curP &gt; (conf.adjacents * 2)) &#123;</span><br><span class="line">                list.push(&#123; value: 1, <span class="built_in">type</span>: <span class="string">&#x27;normal&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: 1 &#125;);</span><br><span class="line">                list.push(&#123; value: 2, <span class="built_in">type</span>: <span class="string">&#x27;normal&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: 2 &#125;);</span><br><span class="line">                list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;elp&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: conf.wordElp &#125;);</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">let</span> item = curP - conf.adjacents; item &lt;= curP + conf.adjacents; item++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (item === curP) &#123;</span><br><span class="line">                        list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;current&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: item &#125;);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        list.push(&#123; value: item, <span class="built_in">type</span>: <span class="string">&#x27;normal&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: item &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;elp&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: conf.wordElp &#125;);</span><br><span class="line">                list.push(&#123; value: pageCount - 1, <span class="built_in">type</span>: <span class="string">&#x27;normal&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: pageCount - 1 &#125;);</span><br><span class="line">                list.push(&#123; value: pageCount, <span class="built_in">type</span>: <span class="string">&#x27;normal&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: pageCount &#125;);</span><br><span class="line">                // close to end only hide early pages</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                list.push(&#123; value: 1, <span class="built_in">type</span>: <span class="string">&#x27;normal&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: 1 &#125;);</span><br><span class="line">                list.push(&#123; value: 2, <span class="built_in">type</span>: <span class="string">&#x27;normal&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: 2 &#125;);</span><br><span class="line">                list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;elp&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: conf.wordElp &#125;);</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">let</span> item = (pageCount - (1 + (conf.adjacents * 3))); item &lt;= pageCount; item++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (item === curP) &#123;</span><br><span class="line">                        list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;current&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: item &#125;);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        list.push(&#123; value: item, <span class="built_in">type</span>: <span class="string">&#x27;normal&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: item &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        // last and next button</span><br><span class="line">        <span class="keyword">if</span> (curP &lt; pageCount) &#123;</span><br><span class="line">            <span class="keyword">if</span> (conf.showPvNt) &#123;</span><br><span class="line">                list.push(&#123; value: curP + 1, <span class="built_in">type</span>: <span class="string">&#x27;next&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: conf.wordNt &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (conf.showFtLt) &#123;</span><br><span class="line">                list.push(&#123; value: pageCount, <span class="built_in">type</span>: <span class="string">&#x27;last&#x27;</span>, link: <span class="literal">true</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: conf.wordLt &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (conf.showPvNt) &#123;</span><br><span class="line">                list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;next&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">true</span>, text: conf.wordNt &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (conf.showFtLt) &#123;</span><br><span class="line">                list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;last&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">true</span>, text: conf.wordLt &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (pageCount === 1 &amp;&amp; conf.lte2pShow) &#123;</span><br><span class="line">        <span class="keyword">if</span> (conf.showFtLt) &#123;</span><br><span class="line">            list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;first&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">true</span>, text: conf.wordFt &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (conf.showPvNt) &#123;</span><br><span class="line">            list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;prev&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">true</span>, text: conf.wordPv &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;current&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">false</span>, text: 1 &#125;);</span><br><span class="line">        <span class="keyword">if</span> (conf.showPvNt) &#123;</span><br><span class="line">            list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;next&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">true</span>, text: conf.wordNt &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (conf.showFtLt) &#123;</span><br><span class="line">            list.push(&#123; value: <span class="string">&#x27;&#x27;</span>, <span class="built_in">type</span>: <span class="string">&#x27;last&#x27;</span>, link: <span class="literal">false</span>, <span class="built_in">disable</span>: <span class="literal">true</span>, text: conf.wordLt &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> list;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const conf = &#123;</span><br><span class="line">    adjacents: 2, lte2pShow: <span class="literal">false</span>, ifSelect: <span class="literal">true</span>, showPvNt: <span class="literal">true</span>, showFtLt: <span class="literal">true</span>,</span><br><span class="line">    wordElp: <span class="string">&#x27;...&#x27;</span>, wordPv: <span class="string">&#x27;&lt; 上一页&#x27;</span>, wordNt: <span class="string">&#x27;下一页 &gt;&#x27;</span>, wordFt: <span class="string">&#x27;|&lt;&lt; 首 页&#x27;</span>, wordLt: <span class="string">&#x27;末 页 &gt;&gt;|&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">@Component(&#123;</span><br><span class="line">    selector: <span class="string">&#x27;app-paging&#x27;</span>,</span><br><span class="line">    templateUrl: <span class="string">&#x27;./paging.component.html&#x27;</span>,</span><br><span class="line">    styleUrls: [<span class="string">&#x27;./paging.component.css&#x27;</span>]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">export</span> class PagingDataComponent implements OnInit, OnChanges &#123;</span><br><span class="line">    pagesArr = [];</span><br><span class="line">    ifSelect = <span class="literal">true</span>;</span><br><span class="line">    list = [];</span><br><span class="line">    pageCount = 0;</span><br><span class="line">    // tslint:disable-next-line:no-input-rename</span><br><span class="line">    @Input(<span class="string">&#x27;pShowInfo&#x27;</span>) showInfo = <span class="literal">false</span>;</span><br><span class="line">    // tslint:disable-next-line:no-input-rename</span><br><span class="line">    @Input(<span class="string">&#x27;pCurP&#x27;</span>) curP = 1;</span><br><span class="line">    // tslint:disable-next-line:no-input-rename</span><br><span class="line">    @Input(<span class="string">&#x27;pSize&#x27;</span>) pSize = 10;</span><br><span class="line">    // tslint:disable-next-line:no-input-rename</span><br><span class="line">    @Input(<span class="string">&#x27;pTotal&#x27;</span>) total = 0;</span><br><span class="line">    // tslint:disable-next-line:no-output-on-prefix</span><br><span class="line">    @Output() onPagingChange: EventEmitter&lt;number&gt; = new EventEmitter();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">ngOnInit</span></span>() &#123; &#125;</span><br><span class="line">    <span class="function"><span class="title">ngOnChanges</span></span>() &#123;</span><br><span class="line">        this.calc();</span><br><span class="line">    &#125;</span><br><span class="line">    evChangePage(n: number | string) &#123;</span><br><span class="line">        n = Number(n);</span><br><span class="line">        this.onPagingChange.emit(n);</span><br><span class="line">        this.curP = n;</span><br><span class="line">        this.calc();</span><br><span class="line">    &#125;</span><br><span class="line">    private <span class="function"><span class="title">calc</span></span>() &#123;</span><br><span class="line">        this.pageCount = Math.ceil(this.total / this.pSize);</span><br><span class="line">        this.pagesArr = new Array(this.pageCount || 1).fill(1);</span><br><span class="line">        this.list = build(this.curP, this.pageCount, conf);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="使用："><a href="#使用：" class="headerlink" title="使用："></a>使用：</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;app-paging</span><br><span class="line">    (onPagingChange)=<span class="string">&quot;onPagingChange(<span class="variable">$event</span>)&quot;</span></span><br><span class="line">    [pCurP]=<span class="string">&quot;currentPage&quot;</span></span><br><span class="line">    [pSize]=<span class="string">&quot;pageSize&quot;</span></span><br><span class="line">    [pTotal]=<span class="string">&quot;totalRecord&quot;</span></span><br><span class="line">    &gt;&lt;/app-paging&gt;</span><br></pre></td></tr></table></figure>                </div>            </div><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">currentPage: number = 1;</span><br><span class="line">pageSize: number = 10;</span><br><span class="line">totalRecord: number = 231;</span><br><span class="line"></span><br><span class="line">onPagingChange(page: number) &#123;</span><br><span class="line">    this.currentPage = page;</span><br><span class="line">    // ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="2-dom方式"><a href="#2-dom方式" class="headerlink" title="2. dom方式"></a>2. dom方式</h1><h2 id="样式：paging-component-css-1"><a href="#样式：paging-component-css-1" class="headerlink" title="样式：paging.component.css"></a>样式：paging.component.css</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.pagination&#123;vertical-align:middle;&#125;</span><br><span class="line">.pagination a,.pagination span&#123;padding:0 5px;margin-right:5px;border: 1px solid <span class="comment">#ddd;text-align:center;line-height:26px;display:inline-block;min-width:20px;color:#000; vertical-align:middle;&#125;</span></span><br><span class="line">.pagination .pageem&#123;line-height:28px;display:inline-block;vertical-align:middle;font-style:normal;color:<span class="comment">#aaa;&#125;</span></span><br><span class="line">.pagination .pageem1&#123;margin-left:2em;margin-right:4px;&#125;</span><br><span class="line">.pagination .pageem2&#123;margin-left:5px;&#125;</span><br><span class="line">.pagination a &#123;text-decoration: none;&#125;</span><br><span class="line">.pagination a:hover,.pagination a:active &#123;border-color:<span class="comment">#666;color: #000;&#125;</span></span><br><span class="line">.pagination .pagefirst,.pagination .pageprev,.pagination .pagelast,.pagination .pagenext&#123;font-size:12px;&#125;</span><br><span class="line">.pagination .pageprev&#123;margin-right:2em;&#125;</span><br><span class="line">.pagination .pagenext&#123;margin-left:2em;&#125;</span><br><span class="line">.pagination .current &#123;border-color:transparent;color:blue;&#125;</span><br><span class="line">.pagination .disabled &#123;border: 1px solid <span class="comment">#EEE;color: #DDD;&#125;</span></span><br><span class="line">.pagination .pagepoints&#123;border-color:transparent;&#125;</span><br><span class="line">.pagination .pageselect&#123;box-sizing:border-box;height:26px;vertical-align:middle;&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="模板：paging-component-html-1"><a href="#模板：paging-component-html-1" class="headerlink" title="模板：paging.component.html"></a>模板：paging.component.html</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;span *ngIf=<span class="string">&quot;showInfo&quot;</span> style=<span class="string">&quot;float:right;line-height:28px;&quot;</span>&gt;</span><br><span class="line">        记录: &lt;span class=<span class="string">&quot;red&quot;</span>&gt;&#123;&#123;total&#125;&#125;&lt;/span&gt; 页: &lt;span id=<span class="string">&quot;cur&quot;</span> class=<span class="string">&quot;red&quot;</span>&gt;&#123;&#123;curP&#125;&#125;&lt;/span&gt;/&lt;span class=<span class="string">&quot;red&quot;</span>&gt;&#123;&#123;pageCount&#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div *ngIf=<span class="string">&quot;pageCount&gt;1&quot;</span> class=<span class="string">&quot;pagination&quot;</span>&gt;</span><br><span class="line">        &lt;!-- first and previous button --&gt;</span><br><span class="line">        &lt;ng-container *ngIf=<span class="string">&quot;curP&gt;1&quot;</span>&gt;</span><br><span class="line">            &lt;a *ngIf=<span class="string">&quot;conf.showFtLt&quot;</span> class=<span class="string">&quot;pagefirst&quot;</span> (click)=<span class="string">&quot;evChangePage(1)&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span>&gt;&#123;&#123;conf.wordFt&#125;&#125;&lt;/a&gt;</span><br><span class="line">            &lt;a *ngIf=<span class="string">&quot;conf.showPvNt&quot;</span> class=<span class="string">&quot;pageprev&quot;</span> (click)=<span class="string">&quot;evChangePage(curP - 1)&quot;</span></span><br><span class="line">                href=<span class="string">&quot;javascript:;&quot;</span>&gt;&#123;&#123;conf.wordPv&#125;&#125;&lt;/a&gt;</span><br><span class="line">        &lt;/ng-container&gt;</span><br><span class="line">        &lt;ng-container *ngIf=<span class="string">&quot;curP&lt;=1&quot;</span>&gt;</span><br><span class="line">            &lt;span *ngIf=<span class="string">&quot;conf.showFtLt&quot;</span> class=<span class="string">&quot;pagefirst disabled&quot;</span>&gt;&#123;&#123;conf.wordFt&#125;&#125;&lt;/span&gt;</span><br><span class="line">            &lt;span *ngIf=<span class="string">&quot;conf.showPvNt&quot;</span> class=<span class="string">&quot;pageprev disabled&quot;</span>&gt;&#123;&#123;conf.wordPv&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/ng-container&gt;</span><br><span class="line">        &lt;!-- pages --&gt;</span><br><span class="line">        &lt;ng-container *ngIf=<span class="string">&quot;pageCount &lt; 7 + (conf.adjacents * 2)&quot;</span>&gt;</span><br><span class="line">            &lt;ng-container *ngFor=<span class="string">&quot;let item of makeEndArr(pageCount)&quot;</span>&gt;</span><br><span class="line">                &lt;span *ngIf=<span class="string">&quot;item === curP&quot;</span> class=<span class="string">&quot;current&quot;</span>&gt;&#123;&#123;item&#125;&#125;&lt;/span&gt;</span><br><span class="line">                &lt;a *ngIf=<span class="string">&quot;item !== curP&quot;</span> (click)=<span class="string">&quot;evChangePage(item)&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span>&gt;&#123;&#123;item&#125;&#125;&lt;/a&gt;</span><br><span class="line">            &lt;/ng-container&gt;</span><br><span class="line">        &lt;/ng-container&gt;</span><br><span class="line">        &lt;!-- enough pages to hide some --&gt;</span><br><span class="line">        &lt;ng-container *ngIf=<span class="string">&quot;pageCount &gt;= 7 + (conf.adjacents * 2)&quot;</span>&gt;</span><br><span class="line">            &lt;!-- close to beginning only hide later pages --&gt;</span><br><span class="line">            &lt;ng-container *ngIf=<span class="string">&quot;flag1&quot;</span>&gt;</span><br><span class="line">                &lt;ng-container *ngFor=<span class="string">&quot;let item of makeEndArr(4 + (conf.adjacents * 2)-1)&quot;</span>&gt;</span><br><span class="line">                    &lt;span *ngIf=<span class="string">&quot;item === curP&quot;</span> class=<span class="string">&quot;current&quot;</span>&gt;&#123;&#123;item&#125;&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;a *ngIf=<span class="string">&quot;item !== curP&quot;</span> (click)=<span class="string">&quot;evChangePage(item)&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span>&gt;&#123;&#123;item&#125;&#125;&lt;/a&gt;</span><br><span class="line">                &lt;/ng-container&gt;</span><br><span class="line">                &lt;span class=<span class="string">&quot;pagepoints&quot;</span>&gt;&#123;&#123;conf.wordElp&#125;&#125;&lt;/span&gt;</span><br><span class="line">                &lt;a (click)=<span class="string">&quot;evChangePage(pageCount - 1)&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span>&gt;&#123;&#123;pageCount - 1&#125;&#125;&lt;/a&gt;</span><br><span class="line">                &lt;a (click)=<span class="string">&quot;evChangePage(pageCount)&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span>&gt;&#123;&#123;pageCount&#125;&#125;&lt;/a&gt;</span><br><span class="line">            &lt;/ng-container&gt;</span><br><span class="line">            &lt;!-- <span class="keyword">in</span> middle hide some front and some back --&gt;</span><br><span class="line">            &lt;ng-container *ngIf=<span class="string">&quot;flag2&quot;</span>&gt;</span><br><span class="line">                &lt;a (click)=<span class="string">&quot;evChangePage(1)&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span>&gt;1&lt;/a&gt;</span><br><span class="line">                &lt;a (click)=<span class="string">&quot;evChangePage(2)&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span>&gt;2&lt;/a&gt;</span><br><span class="line">                &lt;span class=<span class="string">&quot;pagepoints&quot;</span>&gt;&#123;&#123;conf.wordElp&#125;&#125;&lt;/span&gt;</span><br><span class="line">                &lt;ng-container *ngFor=<span class="string">&quot;let item of makeEndArr(curP + conf.adjacents,curP - conf.adjacents)&quot;</span>&gt;</span><br><span class="line">                    &lt;span *ngIf=<span class="string">&quot;item === curP&quot;</span> class=<span class="string">&quot;current&quot;</span>&gt;&#123;&#123;item&#125;&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;a *ngIf=<span class="string">&quot;item !== curP&quot;</span> (click)=<span class="string">&quot;evChangePage(item)&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span>&gt;&#123;&#123;item&#125;&#125;&lt;/a&gt;</span><br><span class="line">                &lt;/ng-container&gt;</span><br><span class="line">                &lt;span class=<span class="string">&quot;pagepoints&quot;</span>&gt;&#123;&#123;conf.wordElp&#125;&#125;&lt;/span&gt;</span><br><span class="line">                &lt;a (click)=<span class="string">&quot;evChangePage(pageCount-1)&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span>&gt;&#123;&#123;pageCount-1&#125;&#125;&lt;/a&gt;</span><br><span class="line">                &lt;a (click)=<span class="string">&quot;evChangePage(pageCount)&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span>&gt;&#123;&#123;pageCount&#125;&#125;&lt;/a&gt;</span><br><span class="line">            &lt;/ng-container&gt;</span><br><span class="line">            &lt;!-- close to end only hide early pages --&gt;</span><br><span class="line">            &lt;ng-container *ngIf=<span class="string">&quot;flag3&quot;</span>&gt;</span><br><span class="line">                &lt;a (click)=<span class="string">&quot;evChangePage(1)&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span>&gt;1&lt;/a&gt;</span><br><span class="line">                &lt;a (click)=<span class="string">&quot;evChangePage(2)&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span>&gt;2&lt;/a&gt;</span><br><span class="line">                &lt;span class=<span class="string">&quot;pagepoints&quot;</span>&gt;&#123;&#123;conf.wordElp&#125;&#125;&lt;/span&gt;</span><br><span class="line">                &lt;ng-container *ngFor=<span class="string">&quot;let item of makeEndArr(pageCount, pageCount - (1 + (conf.adjacents * 3)))&quot;</span>&gt;</span><br><span class="line">                    &lt;span *ngIf=<span class="string">&quot;item === curP&quot;</span> class=<span class="string">&quot;current&quot;</span>&gt;&#123;&#123;item&#125;&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;a *ngIf=<span class="string">&quot;item !== curP&quot;</span> (click)=<span class="string">&quot;evChangePage(item)&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span>&gt;&#123;&#123;item&#125;&#125;&lt;/a&gt;</span><br><span class="line">                &lt;/ng-container&gt;</span><br><span class="line">            &lt;/ng-container&gt;</span><br><span class="line">        &lt;/ng-container&gt;</span><br><span class="line">        &lt;!-- last and next button --&gt;</span><br><span class="line">        &lt;ng-container *ngIf=<span class="string">&quot;curP &lt; pageCount&quot;</span>&gt;</span><br><span class="line">            &lt;a *ngIf=<span class="string">&quot;conf.showFtLt&quot;</span> class=<span class="string">&quot;pagenext&quot;</span></span><br><span class="line">                (click)=<span class="string">&quot;evChangePage(curP + 1)&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span>&gt;&#123;&#123;conf.wordNt&#125;&#125;&lt;/a&gt;</span><br><span class="line">            &lt;a *ngIf=<span class="string">&quot;conf.showPvNt&quot;</span> class=<span class="string">&quot;pagelast&quot;</span></span><br><span class="line">                (click)=<span class="string">&quot;evChangePage(pageCount)&quot;</span> href=<span class="string">&quot;javascript:;&quot;</span>&gt;&#123;&#123;conf.wordLt&#125;&#125;&lt;/a&gt;</span><br><span class="line">        &lt;/ng-container&gt;</span><br><span class="line">        &lt;ng-container *ngIf=<span class="string">&quot;curP &gt;= pageCount&quot;</span>&gt;</span><br><span class="line">            &lt;span *ngIf=<span class="string">&quot;conf.showPvNt&quot;</span> class=<span class="string">&quot;pagenext disabled&quot;</span>&gt;&#123;&#123;conf.wordNt&#125;&#125;&lt;/span&gt;</span><br><span class="line">            &lt;span *ngIf=<span class="string">&quot;conf.showFtLt&quot;</span> class=<span class="string">&quot;pagelast disabled&quot;</span>&gt;&#123;&#123;conf.wordLt&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/ng-container&gt;</span><br><span class="line">        &lt;ng-container *ngIf=<span class="string">&quot;conf.ifSelect&quot;</span>&gt;</span><br><span class="line">            &lt;em class=<span class="string">&quot;pageem pageem1&quot;</span>&gt;跳到第&lt;/em&gt;&lt;select [ngModel]=<span class="string">&quot;curP&quot;</span></span><br><span class="line">                (change)=<span class="string">&quot;evChangePage(selects.value)&quot;</span> <span class="comment">#selects&gt;</span></span><br><span class="line">                &lt;option *ngFor=<span class="string">&quot;let item of makeEndArr(pageCount)&quot;</span> [value]=<span class="string">&quot;item&quot;</span>&gt;&#123;&#123;item&#125;&#125;&lt;/option&gt;</span><br><span class="line">            &lt;/select&gt;&lt;em class=<span class="string">&quot;pageem  pageem2&quot;</span>&gt;页&lt;/em&gt;</span><br><span class="line">        &lt;/ng-container&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div *ngIf=<span class="string">&quot;pageCount&lt;=1&amp;&amp;conf.lte2pShow&quot;</span> class=<span class="string">&quot;pagination&quot;</span>&gt;</span><br><span class="line">        &lt;span *ngIf=<span class="string">&quot;conf.showFtLt&quot;</span> class=<span class="string">&quot;pagefirst disabled&quot;</span>&gt;&#123;&#123;conf.wordFt&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;span *ngIf=<span class="string">&quot;conf.showPvNt&quot;</span> class=<span class="string">&quot;pageprev disabled&quot;</span>&gt;&#123;&#123;conf.wordPv&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;span class=<span class="string">&quot;current&quot;</span>&gt;1&lt;/span&gt;</span><br><span class="line">        &lt;span *ngIf=<span class="string">&quot;conf.showPvNt&quot;</span> class=<span class="string">&quot;pagenext disabled&quot;</span>&gt;&#123;&#123;conf.wordNt&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;span *ngIf=<span class="string">&quot;conf.showFtLt&quot;</span> class=<span class="string">&quot;pagelast disabled&quot;</span>&gt;&#123;&#123;conf.wordLt&#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="TS：paging-component-ts-1"><a href="#TS：paging-component-ts-1" class="headerlink" title="TS：paging.component.ts"></a>TS：paging.component.ts</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Component, OnInit, Input, Output, EventEmitter, OnChanges &#125; from <span class="string">&#x27;@angular/core&#x27;</span>;</span><br><span class="line"></span><br><span class="line">@Component(&#123;</span><br><span class="line">    selector: <span class="string">&#x27;app-paging&#x27;</span>,</span><br><span class="line">    templateUrl: <span class="string">&#x27;./paging.component.html&#x27;</span>,</span><br><span class="line">    styleUrls: [<span class="string">&#x27;./paging.component.css&#x27;</span>]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">export</span> class PagingDomComponent implements OnInit, OnChanges &#123;</span><br><span class="line"></span><br><span class="line">    conf = &#123;</span><br><span class="line">        adjacents: 2, lte2pShow: <span class="literal">false</span>, ifSelect: <span class="literal">true</span>, showPvNt: <span class="literal">true</span>, showFtLt: <span class="literal">true</span>,</span><br><span class="line">        wordElp: <span class="string">&#x27;...&#x27;</span>, wordPv: <span class="string">&#x27;&lt; 上一页&#x27;</span>, wordNt: <span class="string">&#x27;下一页 &gt;&#x27;</span>, wordFt: <span class="string">&#x27;|&lt;&lt; 首 页&#x27;</span>, wordLt: <span class="string">&#x27;末 页 &gt;&gt;|&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line">    pageCount = 0;</span><br><span class="line">    flag1 = <span class="literal">false</span>;</span><br><span class="line">    flag2 = <span class="literal">false</span>;</span><br><span class="line">    flag3 = <span class="literal">false</span>;</span><br><span class="line">    // tslint:disable-next-line:no-input-rename</span><br><span class="line">    @Input(<span class="string">&#x27;pShowInfo&#x27;</span>) showInfo = <span class="literal">false</span>;</span><br><span class="line">    // tslint:disable-next-line:no-input-rename</span><br><span class="line">    @Input(<span class="string">&#x27;pCurP&#x27;</span>) curP = 1;</span><br><span class="line">    // tslint:disable-next-line:no-input-rename</span><br><span class="line">    @Input(<span class="string">&#x27;pSize&#x27;</span>) pSize = 10;</span><br><span class="line">    // tslint:disable-next-line:no-input-rename</span><br><span class="line">    @Input(<span class="string">&#x27;pTotal&#x27;</span>) total = 0;</span><br><span class="line">    // tslint:disable-next-line:no-output-on-prefix</span><br><span class="line">    @Output() onPagingChange: EventEmitter&lt;number&gt; = new EventEmitter();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">ngOnInit</span></span>() &#123; &#125;</span><br><span class="line">    <span class="function"><span class="title">ngOnChanges</span></span>() &#123;</span><br><span class="line">        this.calc();</span><br><span class="line">    &#125;</span><br><span class="line">    evChangePage(n: number|string) &#123;</span><br><span class="line">        n = Number(n);</span><br><span class="line">        this.onPagingChange.emit(n);</span><br><span class="line">        this.curP = n;</span><br><span class="line">        this.calc();</span><br><span class="line">    &#125;</span><br><span class="line">    private <span class="function"><span class="title">calc</span></span>() &#123;</span><br><span class="line">        this.flag1 = this.flag2 = this.flag3 = <span class="literal">false</span>;</span><br><span class="line">        this.pageCount = Math.ceil(this.total / this.pSize);</span><br><span class="line">        <span class="keyword">if</span> (this.pageCount &lt; 1) &#123; this.pageCount = 1; &#125;</span><br><span class="line">        <span class="keyword">if</span> (this.curP &gt; this.pageCount) &#123; this.curP = this.pageCount; &#125;</span><br><span class="line">        <span class="keyword">if</span> (this.curP &lt; 1 + (this.conf.adjacents * 3)) &#123;</span><br><span class="line">            this.flag1 = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (this.pageCount - (this.conf.adjacents * 2) &gt; this.curP &amp;&amp; this.curP &gt; (this.conf.adjacents * 2)) &#123;</span><br><span class="line">            this.flag2 = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            this.flag3 = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    makeEndArr(stop: number, start: number = 1) &#123;</span><br><span class="line">        const arr = [];</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            arr[arr.length] = start++;</span><br><span class="line">        &#125; <span class="keyword">while</span> (start &lt;= stop);</span><br><span class="line">        <span class="built_in">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="使用：-1"><a href="#使用：-1" class="headerlink" title="使用："></a>使用：</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;app-paging</span><br><span class="line">    (onPagingChange)=<span class="string">&quot;onPagingChange(<span class="variable">$event</span>)&quot;</span></span><br><span class="line">    [pCurP]=<span class="string">&quot;currentPage&quot;</span></span><br><span class="line">    [pSize]=<span class="string">&quot;pageSize&quot;</span></span><br><span class="line">    [pTotal]=<span class="string">&quot;totalRecord&quot;</span></span><br><span class="line">    &gt;&lt;/app-paging&gt;</span><br></pre></td></tr></table></figure>                </div>            </div><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">currentPage: number = 1;</span><br><span class="line">pageSize: number = 10;</span><br><span class="line">totalRecord: number = 231;</span><br><span class="line"></span><br><span class="line">onPagingChange(page: number) &#123;</span><br><span class="line">    this.currentPage = page;</span><br><span class="line">    // ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div>]]></content>
    
    
    <summary type="html">&lt;p&gt;在此记录一个简单的分页组件实现。&lt;/p&gt;</summary>
    
    
    
    <category term="前端框架" scheme="https://zuitaibai.gitee.io/blog/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
    <category term="angular" scheme="https://zuitaibai.gitee.io/blog/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/angular/"/>
    
    
    <category term="ng" scheme="https://zuitaibai.gitee.io/blog/tags/ng/"/>
    
    <category term="angular" scheme="https://zuitaibai.gitee.io/blog/tags/angular/"/>
    
    <category term="paging" scheme="https://zuitaibai.gitee.io/blog/tags/paging/"/>
    
  </entry>
  
  <entry>
    <title>ng实现RadioGroup/CheckboxGroup组件</title>
    <link href="https://zuitaibai.gitee.io/blog/2019/04/11/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-angular-2019-04-11-ng%E5%AE%9E%E7%8E%B0RadioGroup-CheckboxGroup%E7%BB%84%E4%BB%B6/"/>
    <id>https://zuitaibai.gitee.io/blog/2019/04/11/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-angular-2019-04-11-ng%E5%AE%9E%E7%8E%B0RadioGroup-CheckboxGroup%E7%BB%84%E4%BB%B6/</id>
    <published>2019-04-11T02:04:54.000Z</published>
    <updated>2019-04-11T02:04:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>angular实战项目已完成，在此记录一个简单的RadioGroup和CheckboxGroup组件实现。完了下一步就该进入vue的学习和实战了。</p><span id="more"></span><h1 id="父组件："><a href="#父组件：" class="headerlink" title="父组件："></a>父组件：</h1><h2 id="模板：parent-component-html"><a href="#模板：parent-component-html" class="headerlink" title="模板：parent.component.html"></a>模板：parent.component.html</h2><!--more--><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;form [formGroup]=<span class="string">&quot;try&quot;</span> style=<span class="string">&quot;border:1px solid #333;margin:0 50px;&quot;</span>&gt;</span><br><span class="line">    &lt;h2&gt;响应式&lt;/h2&gt;</span><br><span class="line">    &lt;checkbox-group</span><br><span class="line">        [options]=<span class="string">&quot;cksDatas&quot;</span></span><br><span class="line">        [disableds]=<span class="string">&quot;ckbDisableds&quot;</span></span><br><span class="line">        formControlName=<span class="string">&quot;cks&quot;</span></span><br><span class="line">        (outChange)=<span class="string">&quot;onCksChange(<span class="variable">$event</span>)&quot;</span></span><br><span class="line">    &gt;&lt;/checkbox-group&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">    &lt;button <span class="built_in">type</span>=<span class="string">&quot;button&quot;</span> (click)=<span class="string">&quot;gouXuanCkb()&quot;</span> style=<span class="string">&quot;padding:unset&quot;</span>&gt;只勾选音乐&lt;/button&gt;&amp;nbsp;</span><br><span class="line">    &lt;button <span class="built_in">type</span>=<span class="string">&quot;button&quot;</span> (click)=<span class="string">&quot;jinYongCkb()&quot;</span> style=<span class="string">&quot;padding:unset&quot;</span>&gt;只禁用电影和音乐&lt;/button&gt;&amp;nbsp;--&amp;gt;&amp;nbsp;</span><br><span class="line">    ctrValue: &#123;&#123;try.get(<span class="string">&#x27;cks&#x27;</span>).value | json&#125;&#125;</span><br><span class="line">    &lt;div style=<span class="string">&quot;border-bottom:1px dashed #ccc;margin-bottom:10px;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;radiobtn-group</span><br><span class="line">        [options]=<span class="string">&quot;rdoDatas&quot;</span></span><br><span class="line">        [disableds]=<span class="string">&quot;rdoDisableds&quot;</span></span><br><span class="line">        formControlName=<span class="string">&quot;rdos&quot;</span></span><br><span class="line">        (outChange)=<span class="string">&quot;onRdoChange(<span class="variable">$event</span>)&quot;</span></span><br><span class="line">    &gt;&lt;/radiobtn-group&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class="line">    &lt;button <span class="built_in">type</span>=<span class="string">&quot;button&quot;</span> (click)=<span class="string">&quot;gouXuanRdo()&quot;</span> style=<span class="string">&quot;padding:unset&quot;</span>&gt;勾选音乐&lt;/button&gt;&amp;nbsp;</span><br><span class="line">    &lt;button <span class="built_in">type</span>=<span class="string">&quot;button&quot;</span> (click)=<span class="string">&quot;jinYongRdo()&quot;</span> style=<span class="string">&quot;padding:unset&quot;</span>&gt;只禁用电影和音乐&lt;/button&gt;&amp;nbsp;--&amp;gt;&amp;nbsp;</span><br><span class="line">    ctrValue: &#123;&#123;try.get(<span class="string">&#x27;rdos&#x27;</span>).value | json&#125;&#125;</span><br><span class="line">    &lt;div style=<span class="string">&quot;border-bottom:1px dashed #ccc;margin-bottom:10px;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;radiobtn-group</span><br><span class="line">        [options]=<span class="string">&quot;rdoDatas2&quot;</span></span><br><span class="line">        formControlName=<span class="string">&quot;rdos2&quot;</span></span><br><span class="line">        (outChange)=<span class="string">&quot;onRdoChange2(<span class="variable">$event</span>)&quot;</span></span><br><span class="line">    &gt;&lt;/radiobtn-group&gt;&amp;nbsp;--&amp;gt;&amp;nbsp;</span><br><span class="line">    ctrValue: &#123;&#123;try.get(<span class="string">&#x27;rdos2&#x27;</span>).value&#125;&#125;</span><br><span class="line">    &lt;div style=<span class="string">&quot;border-top:1px dashed #ccc;margin-top:10px;&quot;</span>&gt;</span><br><span class="line">        formValue ==&gt; &#123;&#123;try.value | json&#125;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;form <span class="comment">#temForm=&quot;ngForm&quot; style=&quot;border:1px solid #333;margin:20px 50px 0;&quot;&gt;</span></span><br><span class="line">    &lt;h2&gt;模板驱动式&lt;/h2&gt;</span><br><span class="line">    &lt;radiobtn-group</span><br><span class="line">        [options]=<span class="string">&quot;rdoDatas2&quot;</span></span><br><span class="line">        name=<span class="string">&quot;rdo1&quot;</span></span><br><span class="line">        [(ngModel)]=<span class="string">&quot;rdosBBB&quot;</span></span><br><span class="line">        (outChange)=<span class="string">&quot;onRdoChange2(<span class="variable">$event</span>)&quot;</span></span><br><span class="line">        <span class="comment">#rdoGrp=&quot;ngModel&quot;</span></span><br><span class="line">    &gt;&lt;/radiobtn-group&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;--&amp;gt;&amp;nbsp;&amp;nbsp;</span><br><span class="line">    ctrValue: &#123;&#123;rdoGrp.value&#125;&#125;</span><br><span class="line">    &lt;div style=<span class="string">&quot;border-bottom:1px dashed #ccc;margin-bottom:10px;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;checkbox-group</span><br><span class="line">        [options]=<span class="string">&quot;cksDatas2&quot;</span></span><br><span class="line">        name=<span class="string">&quot;cks1&quot;</span></span><br><span class="line">        [(ngModel)]=<span class="string">&quot;cksBBB&quot;</span></span><br><span class="line">        <span class="comment">#ckbGrp=&quot;ngModel&quot;</span></span><br><span class="line">        (outChange)=<span class="string">&quot;onCksChange2(<span class="variable">$event</span>)&quot;</span></span><br><span class="line">    &gt;&lt;/checkbox-group&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;--&amp;gt;&amp;nbsp;&amp;nbsp;</span><br><span class="line">    ctrValue: &#123;&#123;ckbGrp.value | json&#125;&#125;</span><br><span class="line">    &lt;div style=<span class="string">&quot;border-top:1px dashed #ccc;margin-top:10px;&quot;</span>&gt;</span><br><span class="line">        formValue ==&gt; &#123;&#123;temForm.value | json&#125;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="TS：parent-component-ts"><a href="#TS：parent-component-ts" class="headerlink" title="TS：parent.component.ts"></a>TS：parent.component.ts</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Component, OnInit &#125; from <span class="string">&#x27;@angular/core&#x27;</span>;</span><br><span class="line">import &#123; FormGroup, FormControl &#125; from <span class="string">&#x27;@angular/forms&#x27;</span>;</span><br><span class="line"></span><br><span class="line">@Component(&#123;</span><br><span class="line">    selector: <span class="string">&#x27;parent-ctr-group&#x27;</span>,</span><br><span class="line">    templateUrl: <span class="string">&#x27;./parent.component.html&#x27;</span>,</span><br><span class="line">    styleUrls: [<span class="string">&#x27;./parent.component.css&#x27;</span>]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">export</span> class TryCtrGroupComponent implements OnInit &#123;</span><br><span class="line"></span><br><span class="line">    try = new FormGroup(&#123;</span><br><span class="line">        // cks: new FormControl(),</span><br><span class="line">        cks: new FormControl([<span class="string">&#x27;song&#x27;</span>]),</span><br><span class="line">        rdos: new FormControl(<span class="string">&#x27;song&#x27;</span>),</span><br><span class="line">        rdos2: new FormControl()</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    cksDatas = [</span><br><span class="line">        &#123; name: <span class="string">&#x27;电影&#x27;</span>, value: <span class="string">&#x27;movie&#x27;</span> &#125;, &#123; name: <span class="string">&#x27;音乐&#x27;</span>, value: <span class="string">&#x27;song&#x27;</span> &#125;, &#123; name: <span class="string">&#x27;阅读&#x27;</span>, value: <span class="string">&#x27;read&#x27;</span> &#125;,</span><br><span class="line">        &#123; name: <span class="string">&#x27;登山&#x27;</span>, value: <span class="string">&#x27;mountain&#x27;</span> &#125;, &#123; name: <span class="string">&#x27;游泳&#x27;</span>, value: <span class="string">&#x27;swim&#x27;</span> &#125;</span><br><span class="line">    ];</span><br><span class="line">    rdoDatas = [</span><br><span class="line">        &#123; name: <span class="string">&#x27;电影&#x27;</span>, value: <span class="string">&#x27;movie&#x27;</span> &#125;, &#123; name: <span class="string">&#x27;音乐&#x27;</span>, value: <span class="string">&#x27;song&#x27;</span> &#125;, &#123; name: <span class="string">&#x27;阅读&#x27;</span>, value: <span class="string">&#x27;read&#x27;</span> &#125;,</span><br><span class="line">        &#123; name: <span class="string">&#x27;登山&#x27;</span>, value: <span class="string">&#x27;mountain&#x27;</span> &#125;, &#123; name: <span class="string">&#x27;游泳&#x27;</span>, value: <span class="string">&#x27;swim&#x27;</span> &#125;</span><br><span class="line">    ];</span><br><span class="line">    rdoDatas2 = [</span><br><span class="line">        &#123; name: <span class="string">&#x27;a&#x27;</span>, value: 1 &#125;, &#123; name: <span class="string">&#x27;b&#x27;</span>, value: 2 &#125;, &#123; name: <span class="string">&#x27;cc&#x27;</span>, value: 3 &#125;,</span><br><span class="line">        &#123; name: <span class="string">&#x27;d&#x27;</span>, value: 4 &#125;, &#123; name: <span class="string">&#x27;e&#x27;</span>, value: 5 &#125;</span><br><span class="line">    ];</span><br><span class="line">    cksDatas2 = [</span><br><span class="line">        &#123; name: <span class="string">&#x27;a&#x27;</span>, value: 1 &#125;, &#123; name: <span class="string">&#x27;b&#x27;</span>, value: 2 &#125;, &#123; name: <span class="string">&#x27;cc&#x27;</span>, value: 3 &#125;,</span><br><span class="line">        &#123; name: <span class="string">&#x27;d&#x27;</span>, value: 4 &#125;, &#123; name: <span class="string">&#x27;e&#x27;</span>, value: 5 &#125;</span><br><span class="line">    ];</span><br><span class="line">    ckbDisableds = [<span class="string">&#x27;swim&#x27;</span>];</span><br><span class="line">    rdoDisableds = [<span class="string">&#x27;swim&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    rdosBBB = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    cksBBB = [];</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">constructor</span></span>() &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">ngOnInit</span></span>() &#123;</span><br><span class="line">        // this.try.patchValue(&#123;cks: [<span class="string">&#x27;mountain&#x27;</span>, <span class="string">&#x27;swim&#x27;</span>]&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">gouXuanCkb</span></span>() &#123; this.try.patchValue(&#123;cks: [<span class="string">&#x27;song&#x27;</span>]&#125;); &#125;</span><br><span class="line">    <span class="function"><span class="title">gouXuanRdo</span></span>() &#123; this.try.patchValue(&#123;rdos: <span class="string">&#x27;song&#x27;</span>&#125;); &#125;</span><br><span class="line">    <span class="function"><span class="title">jinYongCkb</span></span>() &#123; this.ckbDisableds = [<span class="string">&#x27;movie&#x27;</span>, <span class="string">&#x27;song&#x27;</span>]; &#125;</span><br><span class="line">    <span class="function"><span class="title">jinYongRdo</span></span>() &#123; this.rdoDisableds = [<span class="string">&#x27;movie&#x27;</span>, <span class="string">&#x27;song&#x27;</span>]; &#125;</span><br><span class="line">    onCksChange(obj: any) &#123; console.log(obj); &#125;</span><br><span class="line">    onRdoChange(obj: any) &#123; console.log(obj); &#125;</span><br><span class="line">    onRdoChange2(obj: any) &#123; console.log(obj); &#125;</span><br><span class="line">    onCksChange2(obj: any) &#123; console.log(obj); &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="checkbox-group组件："><a href="#checkbox-group组件：" class="headerlink" title="checkbox-group组件："></a>checkbox-group组件：</h1><h2 id="模板：checkbox-group-component-html"><a href="#模板：checkbox-group-component-html" class="headerlink" title="模板：checkbox-group.component.html"></a>模板：checkbox-group.component.html</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;label *ngFor=<span class="string">&quot;let e of options&quot;</span>&gt;</span><br><span class="line">    &lt;input</span><br><span class="line">        <span class="built_in">type</span>=<span class="string">&quot;checkbox&quot;</span></span><br><span class="line">        [disabled]=<span class="string">&quot;ifDisabledMe(e)&quot;</span></span><br><span class="line">        [checked]=<span class="string">&quot;this.model.length &amp;&amp; this.model.indexOf(e.value) &gt; -1&quot;</span></span><br><span class="line">        [value]=<span class="string">&quot;e.value&quot;</span></span><br><span class="line">        (change)=<span class="string">&quot;myChange(e)&quot;</span>&gt;</span><br><span class="line">    &#123;&#123; e.name &#125;&#125;</span><br><span class="line">&lt;/label&gt;</span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="TS：checkbox-group-component-ts"><a href="#TS：checkbox-group-component-ts" class="headerlink" title="TS：checkbox-group.component.ts"></a>TS：checkbox-group.component.ts</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Component, OnInit, Input, Output, forwardRef, EventEmitter &#125; from <span class="string">&#x27;@angular/core&#x27;</span>;</span><br><span class="line">import &#123; NG_VALUE_ACCESSOR, ControlValueAccessor &#125; from <span class="string">&#x27;@angular/forms&#x27;</span>;</span><br><span class="line"></span><br><span class="line">@Component(&#123;</span><br><span class="line">    // tslint:disable-next-line:component-selector</span><br><span class="line">    selector: <span class="string">&#x27;checkbox-group&#x27;</span>,</span><br><span class="line">    templateUrl: <span class="string">&#x27;./checkbox-group.component.html&#x27;</span>,</span><br><span class="line">    styleUrls: [<span class="string">&#x27;./checkbox-group.component.css&#x27;</span>],</span><br><span class="line">    providers: [&#123;</span><br><span class="line">        provide: NG_VALUE_ACCESSOR,</span><br><span class="line">        useExisting: forwardRef(() =&gt; CheckboxGroupComponent),</span><br><span class="line">        multi: <span class="literal">true</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">export</span> class CheckboxGroupComponent implements OnInit, ControlValueAccessor &#123;</span><br><span class="line"></span><br><span class="line">    @Input() options: any = [];</span><br><span class="line">    @Input() disableds: any = []; // 可以在父组件动态更改</span><br><span class="line">    @Output() outChange: EventEmitter&lt;any&gt; = new EventEmitter();</span><br><span class="line">    model: any = [];</span><br><span class="line">    onChange = (_: any) =&gt; &#123; &#125;;</span><br><span class="line">    <span class="function"><span class="title">constructor</span></span>() &#123; &#125;</span><br><span class="line">    <span class="function"><span class="title">ngOnInit</span></span>() &#123;&#125;</span><br><span class="line">    ifDisabledMe(obj: any) &#123;</span><br><span class="line">        <span class="built_in">return</span> this.disableds.some((v: any) =&gt; v === obj.value );</span><br><span class="line">    &#125;</span><br><span class="line">    myChange(obj: any) &#123;</span><br><span class="line">        const &#123; value &#125; = obj;</span><br><span class="line">        const index = this.model.indexOf(value);</span><br><span class="line">        <span class="built_in">let</span> dos: boolean;</span><br><span class="line">        <span class="keyword">if</span> (index &gt; -1) &#123;</span><br><span class="line">            this.model.splice(index, 1);</span><br><span class="line">            this.onChange(this.model);</span><br><span class="line">            dos = <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            this.model.push(value);</span><br><span class="line">            this.onChange(this.model);</span><br><span class="line">            dos = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        // <span class="keyword">for</span> user event</span><br><span class="line">        this.outChange.emit(&#123;</span><br><span class="line">            active: &#123;...obj, ifCheck: dos&#125;,</span><br><span class="line">            checks: this.model</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    writeValue(value: any) &#123;</span><br><span class="line">        <span class="keyword">if</span> (value) &#123;</span><br><span class="line">            <span class="keyword">if</span> (this.model.sort().toString() !== value.sort().toString()) &#123; // 此判断是：如果js动态选中和已有选中不同，才触发</span><br><span class="line">                // <span class="keyword">for</span> js</span><br><span class="line">                this.outChange.emit(&#123; checks: value &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (value.length &gt;= 1) &#123;</span><br><span class="line">                this.model = value;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                this.model = [];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            this.model = [];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    registerOnChange(fn: any) &#123; this.onChange = fn; &#125;</span><br><span class="line">    registerOnTouched(fn: any): void &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="radiobtn-group组件："><a href="#radiobtn-group组件：" class="headerlink" title="radiobtn-group组件："></a>radiobtn-group组件：</h1><h2 id="模板：radiobtn-group-component-html"><a href="#模板：radiobtn-group-component-html" class="headerlink" title="模板：radiobtn-group.component.html"></a>模板：radiobtn-group.component.html</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;label *ngFor=<span class="string">&quot;let e of options&quot;</span>&gt;</span><br><span class="line">    &lt;input</span><br><span class="line">        <span class="built_in">type</span>=<span class="string">&quot;radio&quot;</span></span><br><span class="line">        [disabled]=<span class="string">&quot;ifDisabledMe(e)&quot;</span></span><br><span class="line">        [checked]=<span class="string">&quot;this.model==e.value&quot;</span></span><br><span class="line">        [value]=<span class="string">&quot;e.value&quot;</span></span><br><span class="line">        (change)=<span class="string">&quot;myChange(e)&quot;</span></span><br><span class="line">        [attr.name]=<span class="string">&quot;privateName&quot;</span></span><br><span class="line">        &gt;</span><br><span class="line">    &#123;&#123; e.name &#125;&#125;</span><br><span class="line">&lt;/label&gt;</span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="Ts：radiobtn-group-component-ts"><a href="#Ts：radiobtn-group-component-ts" class="headerlink" title="Ts：radiobtn-group.component.ts"></a>Ts：radiobtn-group.component.ts</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Component, OnInit, Input, Output, forwardRef, EventEmitter &#125; from <span class="string">&#x27;@angular/core&#x27;</span>;</span><br><span class="line">import &#123; NG_VALUE_ACCESSOR, ControlValueAccessor &#125; from <span class="string">&#x27;@angular/forms&#x27;</span>;</span><br><span class="line"></span><br><span class="line">@Component(&#123;</span><br><span class="line">    // tslint:disable-next-line:component-selector</span><br><span class="line">    selector: <span class="string">&#x27;radiobtn-group&#x27;</span>,</span><br><span class="line">    templateUrl: <span class="string">&#x27;./radiobtn-group.component.html&#x27;</span>,</span><br><span class="line">    styleUrls: [<span class="string">&#x27;./radiobtn-group.component.css&#x27;</span>],</span><br><span class="line">    providers: [&#123;</span><br><span class="line">        provide: NG_VALUE_ACCESSOR,</span><br><span class="line">        useExisting: forwardRef(() =&gt; RadiobtnGroupComponent),</span><br><span class="line">        multi: <span class="literal">true</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">export</span> class RadiobtnGroupComponent implements OnInit, ControlValueAccessor &#123;</span><br><span class="line"></span><br><span class="line">    @Input() options: any = [];</span><br><span class="line">    @Input() disableds: any = []; // 可以在父组件动态更改</span><br><span class="line">    @Output() outChange: EventEmitter&lt;any&gt; = new EventEmitter();</span><br><span class="line">    privateName: string;</span><br><span class="line">    model: any = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    onChange = (_: any) =&gt; &#123; &#125;;</span><br><span class="line">    <span class="function"><span class="title">constructor</span></span>() &#123;</span><br><span class="line">        const rdm = Math.random().toString().replace(/^\d\./, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        this.privateName = `radio-<span class="variable">$&#123;rdm&#125;</span>&#125;`;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">ngOnInit</span></span>() &#123; &#125;</span><br><span class="line">    ifDisabledMe(obj: any) &#123;</span><br><span class="line">        <span class="built_in">return</span> this.disableds.some((v: any) =&gt; v === obj.value );</span><br><span class="line">    &#125;</span><br><span class="line">    myChange(obj: any) &#123;</span><br><span class="line">        const &#123; value &#125; = obj;</span><br><span class="line">        this.model = value;</span><br><span class="line">        this.onChange(value);</span><br><span class="line">        this.outChange.emit(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    writeValue(value: any) &#123;</span><br><span class="line">        <span class="keyword">if</span> (value) &#123;</span><br><span class="line">            <span class="keyword">if</span> (this.model !== value) &#123; this.outChange.emit(value); &#125;</span><br><span class="line">            this.model = value;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            this.model = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    registerOnChange(fn: any) &#123; this.onChange = fn; &#125;</span><br><span class="line">    registerOnTouched(fn: any): void &#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div>]]></content>
    
    
    <summary type="html">&lt;p&gt;angular实战项目已完成，在此记录一个简单的RadioGroup和CheckboxGroup组件实现。完了下一步就该进入vue的学习和实战了。&lt;/p&gt;</summary>
    
    
    
    <category term="前端框架" scheme="https://zuitaibai.gitee.io/blog/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
    <category term="angular" scheme="https://zuitaibai.gitee.io/blog/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/angular/"/>
    
    
    <category term="ng" scheme="https://zuitaibai.gitee.io/blog/tags/ng/"/>
    
    <category term="angular" scheme="https://zuitaibai.gitee.io/blog/tags/angular/"/>
    
    <category term="RadioGroup" scheme="https://zuitaibai.gitee.io/blog/tags/RadioGroup/"/>
    
    <category term="CheckboxGroup" scheme="https://zuitaibai.gitee.io/blog/tags/CheckboxGroup/"/>
    
  </entry>
  
  <entry>
    <title>ng-cli常用命令</title>
    <link href="https://zuitaibai.gitee.io/blog/2019/03/12/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-angular-2019-03-12-ngCli%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://zuitaibai.gitee.io/blog/2019/03/12/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-angular-2019-03-12-ngCli%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2019-03-12T03:25:07.000Z</published>
    <updated>2019-03-12T03:25:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ng-cli-命令"><a href="#ng-cli-命令" class="headerlink" title="ng-cli 命令"></a>ng-cli 命令</h1><p>(@Angular CLI 终极指南:<a href="https://segmentfault.com/a/1190000009771946">https://segmentfault.com/a/1190000009771946</a>)</p><span id="more"></span><hr><ul><li><p>ng new 项目名</p></li><li><p>ng generate class 类名                     ng g cl</p></li><li><p>ng generate component 组件名       ng g c</p></li><li><p>ng generate directive 指令名            ng g d</p></li><li><p>ng generate enum 枚举                   ng g e</p></li><li><p>ng generate module 模块名             ng g m</p></li><li><p>ng generate pipe 管道名                  ng g p</p></li><li><p>ng generate serveice 服务名             ng g s       ng g s teacher/service/teacher</p></li><li><p>ng generate interface 接口名            ng g i</p></li><li><p>ng start  (:4200)    ng s –port 4201    ng s</p></li><li><p>ng build –prod –aot</p></li><li><p>ng test</p></li><li><p>ng serve [ –open  -o ]</p></li><li><p>ng eject 用于将你的应用程序与 Angular CLI 分离</p></li></ul><h1 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h1><h2 id="ng-generate"><a href="#ng-generate" class="headerlink" title="ng generate"></a>ng generate</h2><h3 id="1-ng-generate-class"><a href="#1-ng-generate-class" class="headerlink" title="1. ng generate class"></a>1. ng generate class</h3><p><strong>–spec</strong>: boolean, 默认为 false, 表示是否生成单元测试相关的 spec 文件.   ng generate class user-profile –spec</p><h3 id="2-ng-generate-component"><a href="#2-ng-generate-component" class="headerlink" title="2. ng generate component"></a>2. ng generate component</h3><blockquote><p><strong>–flat</strong>: boolean, 默认为 false, 表示在 src/app 目录下生成组件而不是在 src/app/componentName 目录中<br><strong>–inline-template</strong>: boolean, 默认为 false, 表示使用内联模板而不是使用独立的模板文件<br><strong>–inline-style</strong>: boolean, 默认为 false, 表示使用内联样式而不是使用独立的样式文件<br><strong>–prefix</strong>: boolean, 默认为 true, 使用 .angular-cli.json 配置的前缀作为组件选择器的前缀<br><strong>–spec</strong>: boolean, 默认为 true, 表示生成包含单元测试的 spec 文件<br><strong>–view-encapsulation</strong>: string, 用于设置组件的视图封装策略<br><strong>–change-detection</strong>: string, 用于设置组件的变化检测策略</p></blockquote><h3 id="3-ng-generate-directive"><a href="#3-ng-generate-directive" class="headerlink" title="3. ng generate directive"></a>3. ng generate directive</h3><blockquote><p><strong>–flat: boolean</strong>, 默认为 true, 表示在 src/app 目录中生成指令而不是在 src/app/admin-link 目录下<br><strong>–prefix</strong>: boolean, 默认为 true, 使用 .angular-cli.json 配置的前缀作为指令选择器的前缀<br><strong>–spec</strong>: boolean, 默认为 true, 表示生成包含单元测试的 spec 文件</p></blockquote><h3 id="4-ng-generate-module"><a href="#4-ng-generate-module" class="headerlink" title="4. ng generate module"></a>4. ng generate module</h3><blockquote><p><strong>–routing</strong>: boolean, 默认为 false, 表示生成一个额外包含路由信息的 AdminRoutingModule 模块，且该模块会被自动地导入到新建的模块中<br><strong>–spec</strong>: boolean, 默认为 false, 表示添加 src/app/admin/admin.module.spec.ts 单元测试文件</p></blockquote><h3 id="5-ng-generate-pipe"><a href="#5-ng-generate-pipe" class="headerlink" title="5. ng generate pipe"></a>5. ng generate pipe</h3><blockquote><p><strong>–flat</strong>: boolean, 默认为 true, 表示在 src/app 目录中生成管道而不是在 src/app/convert-to-euro 目录下<br><strong>–spec</strong>: boolean, 默认为 true, 表示生成包含单元测试的 spec 文件</p></blockquote><h3 id="6-ng-generate-service"><a href="#6-ng-generate-service" class="headerlink" title="6. ng generate service"></a>6. ng generate service</h3><blockquote><p><strong>–flat</strong>: boolean, 默认为 true, 表示在 src/app 目录中生成服务而不是在 src/app/backend-api 目录下<br><strong>–spec</strong>: boolean, 默认为 true, 表示生成包含单元测试的 spec 文件</p></blockquote><h2 id="ng-build"><a href="#ng-build" class="headerlink" title="ng build"></a>ng build</h2><p>–aot: 开启 ahead-of-time 编译<br>–base-href: string, 设置 index.html 文件中 <base> 元素的链接地址<br>–environment: string, 设置所使用的环境，默认为 dev<br>–output-path: string, 设置输出的路径<br>–target: string, 设置所使用的环境，默认为 development,意味着不进行代码压缩或混淆      ng build –target=production<br>–watch: boolean, 默认为 false, 开启 watch 模式，监听文件异动并自动重新构建</p><p>Environments 让你能够自定义应用程序行为,你可以在 .angular-cli.json 文件中定义自己的 environments 文件。<br>默认的是：dev：environments/environment.ts。如果指定了不同的环境，构建过程将使用相应的环境：<br>ng build                                            Uses environments/environment.ts<br>ng build –environment=dev || ng build –env=dev    Also uses environments/environment.ts<br>ng build –environment=prod || ng build –env=prod   Uses environments/environment.prod.ts</p><h2 id="ng-new-ng-init"><a href="#ng-new-ng-init" class="headerlink" title="ng new || ng init"></a>ng new || ng init</h2><p>–dry-run: boolean, 默认为 false, 若设置 dry-run 则不会创建任何文件<br>–verbose: boolean, 默认为 false<br>–link-cli: boolean, 默认为 false, 自动链接到 @angular/cli 包<br>–skip-install: boolean, 默认为 false, 表示跳过 npm install<br>–skip-git: boolean, 默认为 false, 表示该目录不初始化为 git 仓库<br>–skip-tests: boolean, 默认为 false, 表示不创建 tests 相关文件<br>–skip-commit: boolean, 默认为 false, 表示不进行初始提交<br>–directory: string, 用于设置创建的目录名，默认与应用程序的同名<br>–source-dir: string, 默认为 ‘src’, 用于设置源文件目录的名称<br>–style: string, 默认为 ‘css’, 用于设置选用的样式语法 (‘css’, ‘less’ or ‘scss’)<br>–prefix: string, 默认为 ‘app’, 用于设置创建新组件时，组件选择器使用的前缀<br>–mobile: boolean, 默认为 false,表示是否生成 Progressive Web App 应用程序<br>–routing: boolean, 默认为 false, 表示新增带有路由信息的模块，并添加到根模块中<br>–inline-style: boolean, 默认为 false, 表示当创建新的应用程序时，使用内联样式<br>–inline-template: boolean, 默认为 false, 表示当创建新的应用程序时，使用内联模板</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;ng-cli-命令&quot;&gt;&lt;a href=&quot;#ng-cli-命令&quot; class=&quot;headerlink&quot; title=&quot;ng-cli 命令&quot;&gt;&lt;/a&gt;ng-cli 命令&lt;/h1&gt;&lt;p&gt;(@Angular CLI 终极指南:&lt;a href=&quot;https://segmentfault.com/a/1190000009771946&quot;&gt;https://segmentfault.com/a/1190000009771946&lt;/a&gt;)&lt;/p&gt;</summary>
    
    
    
    <category term="前端框架" scheme="https://zuitaibai.gitee.io/blog/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
    <category term="angular" scheme="https://zuitaibai.gitee.io/blog/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/angular/"/>
    
    
    <category term="angular-cli" scheme="https://zuitaibai.gitee.io/blog/tags/angular-cli/"/>
    
    <category term="命令" scheme="https://zuitaibai.gitee.io/blog/tags/%E5%91%BD%E4%BB%A4/"/>
    
    <category term="ng" scheme="https://zuitaibai.gitee.io/blog/tags/ng/"/>
    
  </entry>
  
  <entry>
    <title>简易nodeserver，含mock</title>
    <link href="https://zuitaibai.gitee.io/blog/2018/04/21/%E6%9C%8D%E5%8A%A1%E7%AB%AF-nodejs-2018-04-21-%E7%AE%80%E6%98%93nodeserver%EF%BC%8C%E5%90%ABmock/"/>
    <id>https://zuitaibai.gitee.io/blog/2018/04/21/%E6%9C%8D%E5%8A%A1%E7%AB%AF-nodejs-2018-04-21-%E7%AE%80%E6%98%93nodeserver%EF%BC%8C%E5%90%ABmock/</id>
    <published>2018-04-21T08:06:33.000Z</published>
    <updated>2018-04-21T08:06:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>还是自己写的东西合手。解决了一些以前碰到的问题。</p><span id="more"></span><h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> port = <span class="number">3001</span>;</span><br><span class="line"><span class="keyword">const</span> baseDir = <span class="string">&#x27;./&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> defIndex = <span class="string">&#x27;index.html&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> mockApiPrefix = <span class="string">&#x27;/api/&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> mockData = &#123;</span><br><span class="line">    [mockApiPrefix+<span class="string">&#x27;a&#x27;</span>]: &#123;</span><br><span class="line">        <span class="attr">code</span>:<span class="string">&#x27;200&#x27;</span>, <span class="attr">msg</span>: <span class="string">&#x27;成功1&#x27;</span>, <span class="attr">data</span>: &#123;<span class="attr">a</span>: <span class="string">&#x27;aaa&#x27;</span>, <span class="attr">bg</span>: <span class="string">&#x27;123ss&#x27;</span>&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    [mockApiPrefix+<span class="string">&#x27;b&#x27;</span>]:&#123;</span><br><span class="line">        <span class="attr">code</span>:<span class="string">&#x27;200&#x27;</span>, <span class="attr">msg</span>: <span class="string">&#x27;成功2&#x27;</span>, <span class="attr">data</span>: &#123;<span class="attr">b</span>: <span class="string">&#x27;bbb&#x27;</span>, <span class="attr">sf</span>: <span class="string">&#x27;456ss&#x27;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>), fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>), url = <span class="built_in">require</span>(<span class="string">&#x27;url&#x27;</span>), path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>), os = <span class="built_in">require</span>(<span class="string">&#x27;os&#x27;</span>),</span><br><span class="line">    mine = &#123; <span class="string">&#x27;css&#x27;</span>: <span class="string">&#x27;text/css&#x27;</span>, <span class="string">&#x27;gif&#x27;</span>: <span class="string">&#x27;image/gif&#x27;</span>, <span class="string">&#x27;html&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span>, <span class="string">&#x27;ico&#x27;</span>: <span class="string">&#x27;image/x-icon&#x27;</span>, <span class="string">&#x27;xml&#x27;</span>: <span class="string">&#x27;text/xml&#x27;</span>, <span class="string">&#x27;jpeg&#x27;</span>: <span class="string">&#x27;image/jpeg&#x27;</span>, <span class="string">&#x27;jpg&#x27;</span>: <span class="string">&#x27;image/jpeg&#x27;</span>, <span class="string">&#x27;js&#x27;</span>: <span class="string">&#x27;text/javascript&#x27;</span>, <span class="string">&#x27;json&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>, <span class="string">&#x27;pdf&#x27;</span>: <span class="string">&#x27;application/pdf&#x27;</span>, <span class="string">&#x27;png&#x27;</span>: <span class="string">&#x27;image/png&#x27;</span>, <span class="string">&#x27;svg&#x27;</span>: <span class="string">&#x27;image/svg+xml&#x27;</span>, <span class="string">&#x27;swf&#x27;</span>: <span class="string">&#x27;application/x-shockwave-flash&#x27;</span>, <span class="string">&#x27;tiff&#x27;</span>: <span class="string">&#x27;image/tiff&#x27;</span>, <span class="string">&#x27;txt&#x27;</span>: <span class="string">&#x27;text/plain&#x27;</span>, <span class="string">&#x27;wav&#x27;</span>: <span class="string">&#x27;audio/x-wav&#x27;</span>, <span class="string">&#x27;wma&#x27;</span>: <span class="string">&#x27;audio/x-ms-wma&#x27;</span>, <span class="string">&#x27;wmv&#x27;</span>: <span class="string">&#x27;video/x-ms-wmv&#x27;</span>&#125;,</span><br><span class="line">    clientIP = (<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> nets = os.networkInterfaces();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> a <span class="keyword">in</span> nets) &#123;</span><br><span class="line">            <span class="keyword">let</span> ifaces = nets[a];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> o <span class="keyword">in</span> ifaces) &#123;</span><br><span class="line">                <span class="keyword">if</span> (ifaces[o].family == <span class="string">&#x27;IPv4&#x27;</span> &amp;&amp; !ifaces[o].internal) <span class="keyword">return</span> ifaces[o].address;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;)();</span><br><span class="line">http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> mockApi = <span class="function"><span class="params">url</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`++++ [ajax]: <span class="subst">$&#123;url&#125;</span>`</span>);</span><br><span class="line">        <span class="keyword">let</span> apiUrl = mockApiPrefix.indexOf(<span class="string">&#x27;/&#x27;</span>)===<span class="number">0</span> ? url : url.slice(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(apiUrl <span class="keyword">in</span> mockData)&#123;</span><br><span class="line">            res.writeHead(<span class="number">200</span>, &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json;charset=UTF-8&#x27;</span> &#125;);</span><br><span class="line">            res.end(<span class="built_in">JSON</span>.stringify(mockData[apiUrl]));</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.writeHead(<span class="number">404</span>, &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain&#x27;</span> &#125;);</span><br><span class="line">            res.end(<span class="string">&#x27;no data &amp; no such url&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">` ...done`</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> readHtml = <span class="function"><span class="params">name</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`++++ request: <span class="subst">$&#123;name&#125;</span>`</span>);</span><br><span class="line">        <span class="keyword">let</span> status = <span class="number">200</span>, exist = fs.existsSync(name), data;</span><br><span class="line">        <span class="keyword">if</span>(exist) data = fs.readFileSync(name, <span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">        <span class="keyword">else</span>  data = <span class="string">`file:<span class="subst">$&#123;name&#125;</span> not exist!`</span>, status = <span class="number">404</span>;</span><br><span class="line">        res.writeHead(status, &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span>&#125;);</span><br><span class="line">        res.end(data);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">` ...done`</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> readBinary = <span class="function"><span class="params">name</span> =&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`++++ request: <span class="subst">$&#123;name&#125;</span>`</span>);</span><br><span class="line">        <span class="keyword">let</span> exist = fs.existsSync(name);</span><br><span class="line">        <span class="keyword">if</span>(exist)&#123;</span><br><span class="line">            res.writeHead(<span class="number">200</span>, &#123;<span class="string">&#x27;Content-Type&#x27;</span>: mine[ext] || <span class="string">&#x27;text/plain&#x27;</span>&#125;);</span><br><span class="line">            res.end(fs.readFileSync(name, <span class="string">&#x27;binary&#x27;</span>), <span class="string">&#x27;binary&#x27;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.writeHead(<span class="number">404</span>, &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span>&#125;);</span><br><span class="line">            res.end(<span class="string">`file:<span class="subst">$&#123;name&#125;</span> not exist!`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">` ...done`</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">let</span> pathname = url.parse(req.url).pathname, realPath = path.join(baseDir, pathname), ext = path.extname(realPath);</span><br><span class="line">    ext = ext ? ext.slice(<span class="number">1</span>) : <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(pathname===<span class="string">&#x27;/&#x27;</span>) readHtml(path.join(baseDir, defIndex));</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(ext === <span class="string">&#x27;html&#x27;</span>) readHtml(realPath);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(ext <span class="keyword">in</span> mine) readBinary(realPath);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(pathname.indexOf(mockApiPrefix)&gt;-<span class="number">1</span>) mockApi(pathname);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`++++ request: / =&gt; <span class="subst">$&#123;realPath&#125;</span>`</span>);</span><br><span class="line">        res.writeHead(<span class="number">404</span>, &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span>&#125;);</span><br><span class="line">        res.write(<span class="string">&#x27;no data&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">` ...done`</span>);</span><br><span class="line">        res.end();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;).listen(port, <span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;===== Server running: localhost =&gt; http://%s:%s =============================================&#x27;</span>, clientIP || <span class="string">&#x27;localhost&#x27;</span>, port);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>                </div>            </div>]]></content>
    
    
    <summary type="html">&lt;p&gt;还是自己写的东西合手。解决了一些以前碰到的问题。&lt;/p&gt;</summary>
    
    
    
    <category term="服务端" scheme="https://zuitaibai.gitee.io/blog/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    <category term="nodejs" scheme="https://zuitaibai.gitee.io/blog/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/nodejs/"/>
    
    
    <category term="nodejs" scheme="https://zuitaibai.gitee.io/blog/tags/nodejs/"/>
    
    <category term="路由" scheme="https://zuitaibai.gitee.io/blog/tags/%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>nginx.conf</title>
    <link href="https://zuitaibai.gitee.io/blog/2017/03/29/%E6%9C%8D%E5%8A%A1%E7%AB%AF-nginx-2017-03-29-nginx-conf/"/>
    <id>https://zuitaibai.gitee.io/blog/2017/03/29/%E6%9C%8D%E5%8A%A1%E7%AB%AF-nginx-2017-03-29-nginx-conf/</id>
    <published>2017-03-29T06:15:50.000Z</published>
    <updated>2017-03-29T06:15:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><span id="more"></span><h1 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h1><p>静态资源逐个指定后缀代理至本地，api代理至其它。本地经由8000端口又转了一下，依据不同项目名指向本地不同文件夹。</p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#user  nobody;                                    #配置用户或者组，默认为nobody nobody。</span></span><br><span class="line">worker_processes  1;                              <span class="comment">#允许生成的进程数，默认为1,在master/worker运行方式下 worker进程的数目，一般情况下用户要配置与CPU内核数相等的worker进程</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log;                       #制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别依次为：debug|info|notice|warn|error|crit|alert|emerg</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;                       #指定nginx进程运行文件存放地址</span></span><br><span class="line"><span class="comment">#daemon on | off   默认on                         #是否以守护进程的方式运行nginx，守护进程是指脱离终端并且在后头运行的进程，关闭守护进程执行的方式可以让我们方便调试nginx</span></span><br><span class="line"><span class="comment">#master_process on | off 默认on                   #是否以master/worker方式进行工作，在实际的环境中 nginx是以一个master进程管理多个worker进程的方式运行的，关闭后 nginx就不会fork出worker子进程来处理请求，而是用master进程自身来处理请求</span></span><br><span class="line"><span class="comment">#worker_cpu_affinity 1000 0100 0010 0001;         #worker_cpu_affinity cpumask[cpumask…],绑定worker进程到指定的cpu内核,每一个worker进程都独享一个CPU，可以在内核的调度策略上实现完全的并发</span></span><br><span class="line"></span><br><span class="line">events &#123;                                          <span class="comment">#events模块包含了nginx了有关连接处理的配置</span></span><br><span class="line">    worker_connections  1024;                     <span class="comment">#最大连接数，默认为512,设置一个worker能够同时打开的最大连接数，该值最大为worker_rlimit_nofile的值,在nginx作为http服务器的时候，最大连接数为worker_processes *  worker_connctions,在nginx作为反向代理服务器的时候，最大连接数为worker_processes * worker_connections / 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#accept_mutex on;                             #设置网路连接序列化，防止惊群现象发生，默认为on</span></span><br><span class="line"><span class="comment">#multi_accept on;                             #设置一个进程是否同时接受多个网络连接，默认为off</span></span><br><span class="line"><span class="comment">#use epoll;                                   #设置用于客户端线程的轮询方式，默认nginx会选择一个最适合你操作系统的.事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;                                            <span class="comment">#http模块下配置有server location upstream等不同的内容</span></span><br><span class="line">    include       mime.types;                     <span class="comment">#文件扩展名与文件类型映射表</span></span><br><span class="line">    default_type  application/octet-stream;       <span class="comment">#默认文件类型，默认为text/plain</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  myFormat  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;                     #用于设置日志的记录格式,当nginx位于负载均衡设备，反向代理服务器之后的时候，无法直接获得客户端真实的ip，但是反向代理服务器转发的http头信息中，可以增加X-Forwarded-For信息，记录原有的客户端ip地址 和原来客户端请求的服务器地址，这个时候可以通过log_format指令来设置日志格式，将X-Forwarded-For信息打入日志中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#access_log  off;                             #取消服务日志</span></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  myFormat;       #combined为日志格式的默认值</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;                           <span class="comment">#允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"><span class="comment">#sendfile_max_chunk  100k;                    #每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。</span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;                        <span class="comment">#连接超时时间，默认为75s，可以在http，server，location块。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#error_page 404 https://www.baidu.com;        #错误页</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">upstream  dfb3  &#123;                             <span class="comment">#Upstream模块是与反向代理，负载均衡相关的模块</span></span><br><span class="line">  <span class="comment">#指定了一个叫dfb3的代理服务器，可以在proxy_pass和fastcgi_pass中使用,默认的负载均衡方式为加权轮询，可以在配置项使用使用ip_hash来使用ip哈希</span></span><br><span class="line">  <span class="comment">#weight指定了每个server的权重默认是1</span></span><br><span class="line"><span class="comment">#server 127.0.0.1:8080 max_fails=3 fail_timeout=30s;     #max_fails指定了在fail_timeout(默认是60s)内对后端服务器请求失败的次数,达到次数后会在fail_timeout时间内不再去查询它</span></span><br><span class="line"><span class="comment">#----------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#测试 ultimate</span></span><br><span class="line"><span class="comment">#server www.xxx.com weight=5;</span></span><br><span class="line"><span class="comment">#开发 Dev</span></span><br><span class="line"><span class="comment">#server 192.168.1.50:80 weight=5;</span></span><br><span class="line"><span class="comment">#准上线 STG</span></span><br><span class="line"><span class="comment">#server www.zzzz.com weight=5;</span></span><br><span class="line"><span class="comment">#某某</span></span><br><span class="line"><span class="comment">#server 192.168.1.121:80 weight=5;</span></span><br><span class="line"><span class="comment">#----------------------------------------------------------------------------------------------</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream  staticservice  &#123;</span><br><span class="line">server 127.0.0.1:8000;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       8080;                         <span class="comment">#监听端口</span></span><br><span class="line">        server_name  localhost;                    <span class="comment">#监听地址 ,由于IP地址的数量有限，因此经常存在多个主机域名对应同一个ip的情况，这个时候可以按照server_name通过server块来定义虚拟主机，每个server块是一个虚拟主机，处理满足相应listen端口,和server_name的请求</span></span><br><span class="line">                                               <span class="comment">#server_name与host的匹配优先级如下</span></span><br><span class="line">    <span class="comment">#首先选中所有字符串完全匹配的server_name，如www.nginx.org</span></span><br><span class="line"><span class="comment">#其次选中通配符在前面的server_name，如*.nginx.org</span></span><br><span class="line"><span class="comment">#再次选择通配符在后面的server_name，如www.nginx.*</span></span><br><span class="line"><span class="comment">#最后选择使用正则表达式才匹配的server_name，如~^\.testweb\.com$</span></span><br><span class="line"><span class="comment">#keepalive_requests    120;                #单连接请求上限次数。</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  myFormat;</span></span><br><span class="line"></span><br><span class="line">location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|js|css|html|eot|svg|ttf|woff|ico|xlsx)$ &#123;    <span class="comment">#location会尝试根据用户请求中的URI来匹配设置的表达式  并选中最终结果中的配置来处理用户的请求。</span></span><br><span class="line"><span class="comment">#location [=|~|~*|^~|@] / uri / &#123; … &#125;       =表示把uri作为字符串，与参数中的URI作完全匹配</span></span><br><span class="line"><span class="comment">#~进行正则表达式匹配的时候，区分大小写</span></span><br><span class="line"><span class="comment">#~*进行正则表达式匹配的时候，不区分大小写</span></span><br><span class="line"><span class="comment">#^~表示匹配URI的时候，如果该location是最佳匹配，那么对于匹配这个location的字符串不在进行正则表达式的匹配检测</span></span><br><span class="line"><span class="comment">#@表示仅用于nginx服务内部请求之间的重定向，带有@的location不直接处理用户请求</span></span><br><span class="line"><span class="comment">#匹配的优先级如下</span></span><br><span class="line"><span class="comment">#1、如果查询精确的命中了一个使用=前缀的location，那个它将被使用，并结束匹配</span></span><br><span class="line"><span class="comment">#2、在剩下普通字符串中，将按照最大前缀匹配的原则进行匹配，将结果最后候选结果，如果最终命中的结果使用了^~前缀表示或者它是一个完全匹配，那么它将被使用，并结束匹配</span></span><br><span class="line"><span class="comment">#3、正则表达式匹配时，按照正则表达式在配置文件中出现的顺序，并且只有匹配到了一条正则local，就不在匹配下面的local了</span></span><br><span class="line"><span class="comment">#4、如果步骤3命中了一个匹配，那个它将被使用，否则将使用步骤2的候选结果</span></span><br><span class="line"><span class="comment">#（普通字符串和正则字符串的区别 ~和~*前缀表示location是正则字符串，其他前缀和无前缀表示location是普通字符串）</span></span><br><span class="line">root html/;                            <span class="comment">#根目录</span></span><br><span class="line"><span class="comment">#index vv.txt;                         #设置默认页</span></span><br><span class="line"><span class="comment">#deny 127.0.0.1;                       #拒绝的ip</span></span><br><span class="line"><span class="comment">#allow 172.18.5.54;                    #允许的ip</span></span><br><span class="line">proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">proxy_set_header Accept-Encoding <span class="string">&quot;none&quot;</span>;</span><br><span class="line">proxy_ignore_headers <span class="string">&quot;Cache-Control&quot;</span> <span class="string">&quot;Expires&quot;</span>;</span><br><span class="line"><span class="comment">#expires    3d;</span></span><br><span class="line"><span class="keyword">if</span> ( !-e  <span class="variable">$request_filename</span> )&#123;</span><br><span class="line">proxy_pass  http://staticservice;  <span class="comment">#请求转向staticservice 定义的服务器列表</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">proxy_pass http://dfb3/;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        listen       8000;</span><br><span class="line">        server_name  0.0.0.0;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">root E:/workSpace/xxx/yyy/aaa/main;</span><br><span class="line">            index  mainFrame.html;</span><br><span class="line">        &#125;</span><br><span class="line">location /goods/ &#123;</span><br><span class="line">root E:/workSpace/xxx/yyy/bbb/main;</span><br><span class="line">        &#125;</span><br><span class="line">location /afddd-mmu/ &#123;</span><br><span class="line">root E:/workSpace/xxx/yyy/ccc/main;</span><br><span class="line">        &#125;</span><br><span class="line">location ~ /xlljj-ii/ &#123;</span><br><span class="line">root E:/workSpace/xxx/yyy/ddd/main;</span><br><span class="line">index  main.html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#每个指令必须有分号结束。</span></span><br><span class="line"><span class="comment">#惊群现象：                               一个网路连接到来，多个睡眠的进程被同时叫醒，但只有一个进程能获得链接，这样会影响系统性能。</span></span><br><span class="line"><span class="comment">#1.$remote_addr 与 $http_x_forwarded_for  用以记录客户端的ip地址；</span></span><br><span class="line"><span class="comment">#2.$remote_user ：                        用来记录客户端用户名称；</span></span><br><span class="line"><span class="comment">#3.$time_local ：                         用来记录访问时间与时区；</span></span><br><span class="line"><span class="comment">#4.$request ：                            用来记录请求的url与http协议；</span></span><br><span class="line"><span class="comment">#5.$status ：                             用来记录请求状态；成功是200，</span></span><br><span class="line"><span class="comment">#6.$body_bytes_s ent ：                   记录发送给客户端文件主体内容大小；</span></span><br><span class="line"><span class="comment">#7.$http_referer ：                       用来记录从那个页面链接访问过来的</span></span><br><span class="line"><span class="comment">#8.$http_user_agent ：                    记录客户端浏览器的相关信息；</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h1><p>启5000访问，，静态文件代理至本地已启服务器8001，api代理至其它。</p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动：nginx || start nginx</span></span><br><span class="line"><span class="comment"># 停止：nginx -s stop || nginx -s quit  //stop是快速停止nginx，可能并不保存相关信息；quit是完整有序的停止nginx，并保存相关信息</span></span><br><span class="line"><span class="comment"># 重载：nginx -s reload</span></span><br><span class="line"><span class="comment"># 版本：nginx -v</span></span><br><span class="line"><span class="comment"># 检查配置：nginx -t</span></span><br><span class="line"><span class="comment"># reopen log：nginx -s reopen</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#user  nobody;                                    #配置用户或者组，默认为nobody nobody。</span></span><br><span class="line">worker_processes  1;                              <span class="comment">#允许生成的进程数，默认为1,在master/worker运行方式下 worker进程的数目，一般情况下用户要配置与CPU内核数相等的worker进程</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log;                       #制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别依次为：debug|info|notice|warn|error|crit|alert|emerg</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;                       #指定nginx进程运行文件存放地址</span></span><br><span class="line"><span class="comment">#daemon on | off   默认on                         #是否以守护进程的方式运行nginx，守护进程是指脱离终端并且在后头运行的进程，关闭守护进程执行的方式可以让我们方便调试nginx</span></span><br><span class="line"><span class="comment">#master_process on | off 默认on                   #是否以master/worker方式进行工作，在实际的环境中 nginx是以一个master进程管理多个worker进程的方式运行的，关闭后 nginx就不会fork出worker子进程来处理请求，而是用master进程自身来处理请求</span></span><br><span class="line"><span class="comment">#worker_cpu_affinity 1000 0100 0010 0001;         #worker_cpu_affinity cpumask[cpumask…],绑定worker进程到指定的cpu内核,每一个worker进程都独享一个CPU，可以在内核的调度策略上实现完全的并发</span></span><br><span class="line"></span><br><span class="line">events &#123;                                          <span class="comment">#events模块包含了nginx了有关连接处理的配置</span></span><br><span class="line">    worker_connections  1024;                     <span class="comment">#最大连接数，默认为512,设置一个worker能够同时打开的最大连接数，该值最大为worker_rlimit_nofile的值,在nginx作为http服务器的时候，最大连接数为worker_processes *  worker_connctions,在nginx作为反向代理服务器的时候，最大连接数为worker_processes * worker_connections / 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#accept_mutex on;                             #设置网路连接序列化，防止惊群现象发生，默认为on</span></span><br><span class="line"><span class="comment">#multi_accept on;                             #设置一个进程是否同时接受多个网络连接，默认为off</span></span><br><span class="line"><span class="comment">#use epoll;                                   #设置用于客户端线程的轮询方式，默认nginx会选择一个最适合你操作系统的.事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;                                            <span class="comment">#http模块下配置有server location upstream等不同的内容</span></span><br><span class="line">    include       mime.types;                     <span class="comment">#文件扩展名与文件类型映射表</span></span><br><span class="line">    default_type  application/octet-stream;       <span class="comment">#默认文件类型，默认为text/plain</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  myFormat  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;                     #用于设置日志的记录格式,当nginx位于负载均衡设备，反向代理服务器之后的时候，无法直接获得客户端真实的ip，但是反向代理服务器转发的http头信息中，可以增加X-Forwarded-For信息，记录原有的客户端ip地址 和原来客户端请求的服务器地址，这个时候可以通过log_format指令来设置日志格式，将X-Forwarded-For信息打入日志中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#access_log  off;                             #取消服务日志</span></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  myFormat;       #combined为日志格式的默认值</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;                           <span class="comment">#允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"><span class="comment">#sendfile_max_chunk  100k;                    #每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。</span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;                        <span class="comment">#连接超时时间，默认为75s，可以在http，server，location块。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#error_page 404 https://www.baidu.com;        #错误页</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#Upstream模块是与反向代理，负载均衡相关的模块</span></span><br><span class="line">    upstream firstdemo &#123;</span><br><span class="line">        <span class="comment">#ip_hash;                                 #ip_hash它的作用是如果第一次访问该服务器后就记录，之后再访问都是该服务器了</span></span><br><span class="line">        server 39.106.145.33;</span><br><span class="line">        server 47.93.6.93;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line"></span><br><span class="line">        listen 5000;</span><br><span class="line">        server_name localhost5000;</span><br><span class="line"></span><br><span class="line">        location /&#123;</span><br><span class="line">             <span class="comment"># proxy_pass http://192.168.0.105:8001;        #公司</span></span><br><span class="line"> proxy_pass http://192.168.1.3:8001;            <span class="comment">#家</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /jinqiao&#123;</span><br><span class="line">            proxy_pass http://59.110.24.201/jinqiao;</span><br><span class="line">            <span class="comment"># proxy_pass http://vjpeng.s1.natapp.cc/jinqiao;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    location /kouqiang&#123;</span><br><span class="line">            proxy_pass http://59.110.24.201/kouqiang;</span><br><span class="line">            <span class="comment"># proxy_pass http://vjpeng.s1.natapp.cc/kouqiang;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /sth &#123;</span><br><span class="line">            proxy_pass http://firstdemo;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="原始conf"><a href="#原始conf" class="headerlink" title="原始conf"></a>原始conf</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    root           html;</span></span><br><span class="line">        <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">        <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">        <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache&#x27;s document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx&#x27;s one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#    deny  all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># another virtual host using mix of IP-, name-, and port-based configuration</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       8000;</span></span><br><span class="line">    <span class="comment">#    listen       somename:8080;</span></span><br><span class="line">    <span class="comment">#    server_name  somename  alias  another.alias;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># HTTPS server</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       443 ssl;</span></span><br><span class="line">    <span class="comment">#    server_name  localhost;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_certificate      cert.pem;</span></span><br><span class="line">    <span class="comment">#    ssl_certificate_key  cert.key;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_session_cache    shared:SSL:1m;</span></span><br><span class="line">    <span class="comment">#    ssl_session_timeout  5m;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span><br><span class="line">    <span class="comment">#    ssl_prefer_server_ciphers  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>                </div>            </div>]]></content>
    
    
    <summary type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;</summary>
    
    
    
    <category term="服务端" scheme="https://zuitaibai.gitee.io/blog/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    <category term="nginx" scheme="https://zuitaibai.gitee.io/blog/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/nginx/"/>
    
    
    <category term="nginx" scheme="https://zuitaibai.gitee.io/blog/tags/nginx/"/>
    
    <category term="conf" scheme="https://zuitaibai.gitee.io/blog/tags/conf/"/>
    
  </entry>
  
  <entry>
    <title>react-router 按需加载（转）</title>
    <link href="https://zuitaibai.gitee.io/blog/2017/03/02/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-react-2017-03-02-react-router-%E6%8C%89%E9%9C%80%E5%8A%A0%E8%BD%BD/"/>
    <id>https://zuitaibai.gitee.io/blog/2017/03/02/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-react-2017-03-02-react-router-%E6%8C%89%E9%9C%80%E5%8A%A0%E8%BD%BD/</id>
    <published>2017-03-02T09:27:14.000Z</published>
    <updated>2017-03-02T09:27:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>React Router 是一个非常出色的路由解决方案，同时也非常容易上手。但是当网站规模越来越大的时候，首先出现的问题是 Javascript 文件变得巨大，这导致首页渲染的时间让人难以忍受。实际上程序应当只加载当前渲染页所需的 JavaScript，也就是大家说的“代码分拆” — 将所有的代码分拆成多个小包，在用户浏览过程中按需加载。</p><p>官方示例在 <a href="https://github.com/ReactTraining/react-router/tree/master/examples/huge-apps">这里</a>。</p><p>所得到的效果是：</p><img src="/blog/2017/03/02/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-react-2017-03-02-react-router-%E6%8C%89%E9%9C%80%E5%8A%A0%E8%BD%BD/s1.png" class=""><p>现在是这样：</p><img src="/blog/2017/03/02/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-react-2017-03-02-react-router-%E6%8C%89%E9%9C%80%E5%8A%A0%E8%BD%BD/s2.png" class=""><p>实际上就是将一个大 javascript 文件拆分成了若干个 chunk file。</p><p>下面是改造过程</p><h1 id="Webpack-配置"><a href="#Webpack-配置" class="headerlink" title="Webpack 配置"></a>Webpack 配置</h1><p>首先在 <font color="#c7254e">webpack.config.js</font> 的 <font color="#c7254e">output</font> 内加上 <font color="#c7254e">chunkFilename</font></p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">output: &#123;</span><br><span class="line">    path: path.join(__dirname, <span class="string">&#x27;/../dist/assets&#x27;</span>),</span><br><span class="line">    filename: <span class="string">&#x27;app.js&#x27;</span>,</span><br><span class="line">    publicPath: defaultSettings.publicPath,</span><br><span class="line">    // 添加 chunkFilename</span><br><span class="line">    chunkFilename: <span class="string">&#x27;[name].[chunkhash:5].chunk.js&#x27;</span>,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>                </div>            </div><p><font color="#c7254e">name</font> 是在代码里为创建的 chunk 指定的名字，如果代码中没指定则 webpack 默认分配 id 作为 name。</p><p><font color="#c7254e">chunkhash</font> 是文件的 hash 码，这里只使用前五位。</p><h1 id="添加首页"><a href="#添加首页" class="headerlink" title="添加首页"></a>添加首页</h1><p>以前你的路由大概应该是这样的：（作为需要按需加载的大型应用，路由肯定是相当复杂，这里只列举部分路由举例）</p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">ReactDOM.render(</span><br><span class="line">  (</span><br><span class="line">    &lt;Router <span class="built_in">history</span>=&#123;browserHistory&#125;&gt;</span><br><span class="line">      &#123;/* 主页 */&#125;</span><br><span class="line">      &lt;Route path=<span class="string">&quot;/&quot;</span> component=&#123;App&#125;&gt;</span><br><span class="line">        &#123;/* 默认 */&#125;</span><br><span class="line">        &lt;IndexRoute component=&#123;HomePage&#125; /&gt;</span><br><span class="line"></span><br><span class="line">        &#123;/* baidu */&#125;</span><br><span class="line">        &lt;Route path=<span class="string">&quot;/baidu&quot;</span> component=&#123;BaiduPage&#125;&gt;</span><br><span class="line">          &lt;Route path=<span class="string">&quot;result&quot;</span> component=&#123;BaiduResultPage&#125; /&gt;</span><br><span class="line">          &lt;Route path=<span class="string">&quot;frequency&quot;</span> component=&#123;BaiduFrequencyPage&#125; /&gt;</span><br><span class="line">        &lt;/Route&gt;</span><br><span class="line"></span><br><span class="line">        &#123;/* 404 */&#125;</span><br><span class="line">        &lt;Route path=<span class="string">&#x27;/404&#x27;</span> component=&#123;NotFoundPage&#125; /&gt;</span><br><span class="line"></span><br><span class="line">        &#123;/* 其他重定向到 404 */&#125;</span><br><span class="line">        &lt;Redirect from=<span class="string">&#x27;*&#x27;</span> to=<span class="string">&#x27;/404&#x27;</span> /&gt;</span><br><span class="line">      &lt;/Route&gt;</span><br><span class="line">    &lt;/Router&gt;</span><br><span class="line">  ), document.getElementById(<span class="string">&#x27;app&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>                </div>            </div><p>按需加载之后，我们需要让路由动态加载组件，需要将 component 换成 getComponent。首先将路由拆出来（因为路由庞大之后全部写在一起会很难看），创建一个根路由 rootRoute：</p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">const rootRoute = &#123;</span><br><span class="line">  path: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">  indexRoute: &#123;</span><br><span class="line">    getComponent(nextState, cb) &#123;</span><br><span class="line">      require.ensure([], (require) =&gt; &#123;</span><br><span class="line">        cb(null, require(<span class="string">&#x27;components/layer/HomePage&#x27;</span>))</span><br><span class="line">      &#125;, <span class="string">&#x27;HomePage&#x27;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  getComponent(nextState, cb) &#123;</span><br><span class="line">    require.ensure([], (require) =&gt; &#123;</span><br><span class="line">      cb(null, require(<span class="string">&#x27;components/Main&#x27;</span>))</span><br><span class="line">    &#125;, <span class="string">&#x27;Main&#x27;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  childRoutes: [</span><br><span class="line">    require(<span class="string">&#x27;./routes/baidu&#x27;</span>),</span><br><span class="line">    require(<span class="string">&#x27;./routes/404&#x27;</span>),</span><br><span class="line">    require(<span class="string">&#x27;./routes/redirect&#x27;</span>)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  (</span><br><span class="line">    &lt;Router</span><br><span class="line">      <span class="built_in">history</span>=&#123;browserHistory&#125;</span><br><span class="line">      routes=&#123;rootRoute&#125;</span><br><span class="line">      /&gt;</span><br><span class="line">  ), document.getElementById(<span class="string">&#x27;app&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>                </div>            </div><p>history 不变，在 Router 中添加 routes 属性，将创建的路由传递进去。</p><p>这里有四个属性：</p><h2 id="path"><a href="#path" class="headerlink" title="path"></a>path</h2><p>将匹配的路由，也就是以前的 path。</p><h2 id="getComponent"><a href="#getComponent" class="headerlink" title="getComponent"></a>getComponent</h2><p>   对应于以前的 component 属性，但是这个方法是异步的，也就是当路由匹配时，才会调用这个方法。</p><p>   这里面有个 require.ensure 方法</p>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">require.ensure(dependencies, callback, chunkName)</span><br></pre></td></tr></table></figure><p>   这是 webpack 提供的方法，这也是按需加载的核心方法。第一个参数是依赖，第二个是回调函数，第三个就是上面提到的 chunkName，用来指定这个 chunk file 的 name。</p><p>   如果需要返回多个子组件，则使用 <font color="#c7254e">getComponents</font> 方法，将多个组件作为一个对象的属性通过 cb 返回出去即可。这个在官方示例也有，但是我们这里并不需要，而且根组件是不能返回多个子组件的，所以使用 <font color="#c7254e">getComponent</font>。</p><h2 id="indexRoute"><a href="#indexRoute" class="headerlink" title="indexRoute"></a>indexRoute</h2><p>   用来设置主页，对应于以前的 <font color="#c7254e">&lt;IndexRoute&gt;</font>。</p><p>   注意这里的 indexRoute 写法， <font size="5">这是个对象，在对象里面使用 getComponent</font>。</p><h2 id="childRoutes"><a href="#childRoutes" class="headerlink" title="childRoutes"></a>childRoutes</h2><p>   这里面放置的就是子路由的配置，对应于以前的子路由们。我们将以前的 /baidu、/404 和 * 都拆了出来，接下来将分别为他们创建路由配置。</p><h1 id="路由控制"><a href="#路由控制" class="headerlink" title="路由控制"></a>路由控制</h1><p>上面的childRoutes 里面，我们 require 了三个子路由，在目录下创建 routes 目录，将这三个路由放置进去。</p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">routes/</span><br><span class="line">├── 404</span><br><span class="line">│   └── index.js</span><br><span class="line">├── baidu</span><br><span class="line">│   ├── index.js</span><br><span class="line">│   └── routes</span><br><span class="line">│       ├── frequency</span><br><span class="line">│       │   └── index.js</span><br><span class="line">│       └── result</span><br><span class="line">│           └── index.js</span><br><span class="line">└── redirect</span><br><span class="line">    └── index.js</span><br></pre></td></tr></table></figure>                </div>            </div><p>和 rootRoute 类似，里面的每个 index.js 都是一个路由对象：</p><h2 id="404-index-js"><a href="#404-index-js" class="headerlink" title="/404/index.js"></a>/404/index.js</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  path: <span class="string">&#x27;404&#x27;</span>,</span><br><span class="line"></span><br><span class="line">  getComponent(nextState, cb) &#123;</span><br><span class="line">    require.ensure([], (require) =&gt; &#123;</span><br><span class="line">      cb(null, require(<span class="string">&#x27;components/layer/NotFoundPage&#x27;</span>))</span><br><span class="line">    &#125;, <span class="string">&#x27;NotFoundPage&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="baidu-index-js"><a href="#baidu-index-js" class="headerlink" title="/baidu/index.js"></a>/baidu/index.js</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  path: <span class="string">&#x27;baidu&#x27;</span>,</span><br><span class="line"></span><br><span class="line">  getChildRoutes(partialNextState, cb) &#123;</span><br><span class="line">    require.ensure([], (require) =&gt; &#123;</span><br><span class="line">      cb(null, [</span><br><span class="line">        require(<span class="string">&#x27;./routes/result&#x27;</span>),</span><br><span class="line">        require(<span class="string">&#x27;./routes/frequency&#x27;</span>)</span><br><span class="line">      ])</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  getComponent(nextState, cb) &#123;</span><br><span class="line">    require.ensure([], (require) =&gt; &#123;</span><br><span class="line">      cb(null, require(<span class="string">&#x27;components/layer/BaiduPage&#x27;</span>))</span><br><span class="line">    &#125;, <span class="string">&#x27;BaiduPage&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="baidu-routes-frequency-index-js"><a href="#baidu-routes-frequency-index-js" class="headerlink" title="/baidu/routes/frequency/index.js"></a>/baidu/routes/frequency/index.js</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  path: <span class="string">&#x27;frequency&#x27;</span>,</span><br><span class="line"></span><br><span class="line">  getComponent(nextState, cb) &#123;</span><br><span class="line">    require.ensure([], (require) =&gt; &#123;</span><br><span class="line">      cb(null, require(<span class="string">&#x27;components/layer/BaiduFrequencyPage&#x27;</span>))</span><br><span class="line">    &#125;, <span class="string">&#x27;BaiduFrequencyPage&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><p>举这几个例子应该就差不多了，其他都是一样的，稍微有点特别的是 redirect。</p><h1 id="设置-Redirect"><a href="#设置-Redirect" class="headerlink" title="设置 Redirect"></a>设置 Redirect</h1><p>之前我们在根路由下是这么设置重定向的：</p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;Router <span class="built_in">history</span>=&#123;browserHistory&#125;&gt;</span><br><span class="line">      &lt;Route path=<span class="string">&quot;/&quot;</span> component=&#123;App&#125;&gt;</span><br><span class="line">&#123;/* home */&#125;</span><br><span class="line">&lt;IndexRoute component=&#123;HomePage&#125; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Route path=<span class="string">&quot;/baidu&quot;</span> component=&#123;BaiduPage&#125;&gt;</span><br><span class="line">  &lt;Route path=<span class="string">&quot;result&quot;</span> component=&#123;BaiduResultPage&#125; /&gt;</span><br><span class="line">  &lt;Route path=<span class="string">&quot;frequency&quot;</span> component=&#123;BaiduFrequencyPage&#125; /&gt;</span><br><span class="line">&lt;/Route&gt;</span><br><span class="line"></span><br><span class="line">&lt;Route path=<span class="string">&#x27;/404&#x27;</span> component=&#123;NotFoundPage&#125; /&gt;</span><br><span class="line">&#123;/* 如果都不匹配，重定向到 404 */&#125;</span><br><span class="line">&lt;Redirect from=<span class="string">&#x27;*&#x27;</span> to=<span class="string">&#x27;/404&#x27;</span> /&gt;</span><br><span class="line">      &lt;/Route&gt;</span><br><span class="line">   &lt;/Router&gt;</span><br></pre></td></tr></table></figure>                </div>            </div><p>当改写之后，我们需要把这个重定向的路由单独拆出来，也就是 * 这个路由，我们上面已经为他创建了一个 <font color="#c7254e">redirect</font> 目录。这里使用到 <font size="5">onEnter</font> 方法，然后在这个方法里改变路由状态，调到另外的路由，实现 redirect ：</p><h2 id="redirect-index-js"><a href="#redirect-index-js" class="headerlink" title="/redirect/index.js"></a>/redirect/index.js</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  path: <span class="string">&#x27;*&#x27;</span>,</span><br><span class="line">  onEnter: (_, replaceState) =&gt; replaceState(null, <span class="string">&quot;/404&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="The-root-route-must-render-a-single-element"><a href="#The-root-route-must-render-a-single-element" class="headerlink" title="The root route must render a single element"></a>The root route must render a single element</h1><p>跟着官方示例和上面码出来之后，可能页面并没有渲染出来，而是报 The root route must render a single element 这个异常，这是因为 module.exports 和 ES6 里的 export default 有区别。</p><p>如果你是使用 es6 的写法，也就是你的组件都是通过 export default 导出的，那么在 getComponent 方法里面需要加入 .default。</p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">getComponent(nextState, cb) &#123;</span><br><span class="line">    require.ensure([], (require) =&gt; &#123;</span><br><span class="line">      // 在后面加 .default</span><br><span class="line">      cb(null, require(<span class="string">&#x27;components/layer/ReportPage&#x27;</span>)).default</span><br><span class="line">    &#125;, <span class="string">&#x27;ReportPage&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><p>如果你是使用 CommonJS 的写法，也就是通过 module.exports 导出的，那就无须加 .default 了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;React Router 是一个非常出色的路由解决方案，同时也非常容易上手。但是当网站规模越来越大的时候，首先出现的问题是 Javascript 文件变得巨大，这导致首页渲染的时间让人难以忍受。实际上程序应当只加载当前渲染页所需的 JavaScript，也就是大家说的“代码</summary>
      
    
    
    
    <category term="前端框架" scheme="https://zuitaibai.gitee.io/blog/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
    <category term="react" scheme="https://zuitaibai.gitee.io/blog/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/react/"/>
    
    
    <category term="react-router" scheme="https://zuitaibai.gitee.io/blog/tags/react-router/"/>
    
    <category term="react" scheme="https://zuitaibai.gitee.io/blog/tags/react/"/>
    
    <category term="router" scheme="https://zuitaibai.gitee.io/blog/tags/router/"/>
    
  </entry>
  
  <entry>
    <title>npm命令</title>
    <link href="https://zuitaibai.gitee.io/blog/2017/02/03/%E6%9C%8D%E5%8A%A1%E7%AB%AF-nodejs-2017-02-03-npm%E5%91%BD%E4%BB%A4/"/>
    <id>https://zuitaibai.gitee.io/blog/2017/02/03/%E6%9C%8D%E5%8A%A1%E7%AB%AF-nodejs-2017-02-03-npm%E5%91%BD%E4%BB%A4/</id>
    <published>2017-02-03T09:52:49.000Z</published>
    <updated>2017-02-03T09:52:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="npm命令"><a href="#npm命令" class="headerlink" title="npm命令"></a>npm命令</h1><ul><li>npm install 安装模块</li><li>npm bin 显示npm的bin目录</li><li>npm config delete <key>     删除npm配置</li><li>npm config get <key>   获取npm配置</li><li>npm config set <key> <value> [–global]   设置npm配置</li><li>npm config set proxy=<a href="http://proxy.tencent.com:8080/">http://proxy.tencent.com:8080</a>   设置代理</li><li>npm config set registry <a href="http://npm.oa.com/">http://npm.oa.com</a>   设置npm的镜像地址</li><li>npm config edit    在编辑器中打开npm配置文件</li><li>npm init   交互式的创建package.json文件</li><li>npm pack   创建模块的压缩包,如果没有参数，则npm会打包当前模块目录</li><li>npm publish    发布模块</li><li>npm rm || npm uninstall 删除模块</li><li>npm search 查找模块</li><li>npm update 更新模块</li><li>npm start/stop/test 执行脚本</li></ul><h1 id="获取帮助"><a href="#获取帮助" class="headerlink" title="获取帮助"></a>获取帮助</h1><p>npm help<br>npm <command> -h || npm help <command>   例：npm help install</p><h1 id="npm-命令自动完成"><a href="#npm-命令自动完成" class="headerlink" title="npm 命令自动完成"></a>npm 命令自动完成</h1><p>npm 通过bash提供了命令自动完成功能(包括Bash for Windows 10 ):<br>npm completion &gt;&gt; ~/.bashrc || (or Z shell) npm completion &gt;&gt; ~/.zshrc<br>重新加载shell配置文件： source ~/.bashrc<br>现在，在终端注入 npm ins ，然后按下 tab 键就会出现 install 了，不会再浪费时间去全部输入了。</p><h1 id="修复全局模块的权限"><a href="#修复全局模块的权限" class="headerlink" title="修复全局模块的权限"></a>修复全局模块的权限</h1><h1 id="持续更新npm"><a href="#持续更新npm" class="headerlink" title="持续更新npm"></a>持续更新npm</h1><p>npm -v<br>npm install -g npm<br>当 Node 的主版本 released 之后，你也可能需要重新构建 C++ 扩展：npm rebuild<br>如果你需要管理多个版本的node.js和npm，可以考虑使用n或者nvm(Linux, macOS）</p><h1 id="定义默认的-npm-init"><a href="#定义默认的-npm-init" class="headerlink" title="定义默认的 npm init"></a>定义默认的 npm init</h1><p>npm init -y  表示你能接受 package.json 文件的一堆默认值<br>或者你可以设置一些语义化的默认值：<br>npm config set init.author.name <name><br>npm config set init.author.email <email></p><h1 id="更精准的模块搜索"><a href="#更精准的模块搜索" class="headerlink" title="更精准的模块搜索"></a>更精准的模块搜索</h1><p>到目前为止，npm上已经有超过350000个模块了，并且每天还在持续增长。尽管有很多非常棒的模块，但是你还是想避免使用一些不受欢迎的、存在bug的或者无人维护的模块。<br>在npmjs 和Github 上搜索npm模块是很实用但这还有一些其它选择：</p><h2 id="npms"><a href="#npms" class="headerlink" title="npms"></a>npms</h2><p>npms<br>根据一个基于项目版本、模块下载次数、最新更新日期、提交频率、测试覆盖率、文档、贡献者数量、issues数、star数、forks数和作者在社区的地位的综合测量分数进行模块排名。</p><h2 id="npm-Discover"><a href="#npm-Discover" class="headerlink" title="npm Discover"></a>npm Discover</h2><p>npm Discover<br>定位于快速搜索和其它模块通常一起使用的模块，如<br>body-parser<br>通常和Express一起使用。</p><h2 id="Packages-by-PageRank"><a href="#Packages-by-PageRank" class="headerlink" title="Packages by PageRank"></a>Packages by PageRank</h2><p>Packages by PageRank<br>按照模块的谷歌排名进行搜索和排序。</p><h2 id="Curated-npm-Lists"><a href="#Curated-npm-Lists" class="headerlink" title="Curated npm Lists"></a>Curated npm Lists</h2><p>还一个选择就是利用别人的搜索结果。当需要一个健壮的解决方案时，我经常会参考<br>sindresorhus的Awesome Node.js。</p><h1 id="管理你的模块"><a href="#管理你的模块" class="headerlink" title="管理你的模块"></a>管理你的模块</h1><p>npm list (ls、la &amp; ll 可以用作 list 的别名)<br>npm list –depth=0<br>npm home <package> 打开一个模块的主页<br>npm repo <package> 这只有在你的系统能打开浏览器时有用–在服务端的系统上会失败。同样，可以打开一个模块的 Github 仓库<br>npm docs <package> 或者它的文档<br>npm bugs <package> 或者它目前的bugs列表<br>npm prune       npm list会显示和你已经安装地模块的关联模块—这些没有在 package.json文件中被引用。你可以单独 npm uninstall 每一个模块或者全部移除它们 (如果安装模块时你添加了 –production 标记或者 NODE_ENV 被设置成 production，package.json 文件中被指定为 devDependencies 的模块也会被移除。)</p><h1 id="锁定依赖"><a href="#锁定依赖" class="headerlink" title="锁定依赖"></a>锁定依赖</h1><p>默认情况下，当用 –save/-S 或者 –save-dev/-D 安装一个模块时，npm 通过脱字符(^)来限定所安装模块的主版本号。例如，当运行 npm update 时， ^1.5.1 允许安装版本号大于 1.5.1 但小于 2.0.0 版本的模块。<br>npm config set save-prefix=”<del>“   波浪号(</del>)字符是限定模块的次要版本。例如，当运行 npm update 时， <del>1.5.1 允许安装版本号大于 1.5.1但小于 1.6.0 版本的模块。可以将需要安装的模块版本前缀默认设置成波浪号(</del>)<br>npm config set save-exact true  对于那些偏执的认为任何更新(模块的行为)会破坏系统的人，可以配置npm仅安装精确版本号的模块：<br>npm shrinkwrap 另一个选择是，可以在项目中使用 shrinkwrap。 这会生成一个 shrinkwrap.json 文件，该文件包含了你正在使用的模块的指定版本。当运行 npm install时，该文件所指定的模块版本会覆盖 package.json 文件中所指定的版本。</p><h1 id="找出过时的模块"><a href="#找出过时的模块" class="headerlink" title="找出过时的模块"></a>找出过时的模块</h1><p>怎么知道一个模块已经更新了呢？我之前的方式是先列举出项目所依赖的模块(npm list –depth=0)，然后在 npmjs.com 上找到该模块，手动检查该模块的版本是否已经更新。这非常费时。幸运的是，有一个更简单的方式：<br>npm outdated (或者 npm outdated -g 来查找全局模块。)<br>npm list <package>你也可以查看一个独立模块的当前版本<br>npm view <package> versions 也可以查看检验当前和历史版本 (npm view <package> 会显示一个独立模块的所有信息，包括它的依赖、关键字、更新日期、贡献者、仓库地址和许可证等。)</p><h1 id="使用开发中的模块"><a href="#使用开发中的模块" class="headerlink" title="使用开发中的模块"></a>使用开发中的模块</h1><p>当你正在开发一个模块时，会经常想在其它项目中尝试使用或者在任何一个目录运行它(如果你的应用支持)，这时没必要将其发布到 npm，并全局安装—仅需在该模块所在目录使用下面的命令：<br>npn link  该命令会为模块在全局目录下创建一个符号链接<br>npm list -g –depth=0 || npm outdated -g  可以通过下面的命令查看模块引用<br>现在，就可以从命令行运行模块或者通过 require 在任何项目中引入该模块。</p><p>另一个选择是，可以通过文件路径在 package.json 文件中声明对该模块的依赖：</p><p>“dependencies”: {<br>“myproject”: “file:../myproject/“<br>}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;npm命令&quot;&gt;&lt;a href=&quot;#npm命令&quot; class=&quot;headerlink&quot; title=&quot;npm命令&quot;&gt;&lt;/a&gt;npm命令&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;npm install 安装模块&lt;/li&gt;
&lt;li&gt;npm bin 显示npm的bin目录&lt;/li&gt;
&lt;</summary>
      
    
    
    
    <category term="服务端" scheme="https://zuitaibai.gitee.io/blog/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    <category term="nodejs" scheme="https://zuitaibai.gitee.io/blog/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/nodejs/"/>
    
    
    <category term="命令" scheme="https://zuitaibai.gitee.io/blog/tags/%E5%91%BD%E4%BB%A4/"/>
    
    <category term="nodejs" scheme="https://zuitaibai.gitee.io/blog/tags/nodejs/"/>
    
    <category term="npm" scheme="https://zuitaibai.gitee.io/blog/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>Vim文本编辑命令</title>
    <link href="https://zuitaibai.gitee.io/blog/2017/02/03/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%92%8C%E6%8F%92%E4%BB%B6-IDE-2017-02-03-Vim%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%91%BD%E4%BB%A4/"/>
    <id>https://zuitaibai.gitee.io/blog/2017/02/03/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%92%8C%E6%8F%92%E4%BB%B6-IDE-2017-02-03-Vim%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%91%BD%E4%BB%A4/</id>
    <published>2017-02-03T09:28:33.000Z</published>
    <updated>2017-02-03T09:28:33.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Vim 介绍</strong></p><p>Vim是一个类似于Vi的著名的功能强大、高度可定制的文本编辑器，在Vi的基础上改进和增加了很多特性。VIM是自由软件。<br>Vim普遍被推崇为类Vi编辑器中最好的一个，事实上真正的劲敌来自Emacs的不同变体。1999 年Emacs被选为Linuxworld文本编辑分类的优胜者，Vim屈居第二。但在2000年2月Vim赢得了Slashdot Beanie的最佳开放源代码文本编辑器大奖，又将Emacs推至二线， 总的来看， Vim和Emacs同样都是非常优秀的文本编辑器。</p><span id="more"></span><h1 id="文件命令"><a href="#文件命令" class="headerlink" title="文件命令"></a>文件命令</h1><p>vim file                      打开单个文件<br>vim file1 file2 file3 …     同时打开多个文件<br>:open file 在vim窗口中打开一个新文件<br>:split file在新窗口中打开文件<br>:bn切换到下一个文件<br>:bp切换到上一个文件<br>:args查看当前打开的文件列表，当前正在编辑的文件会用[]括起来。<br>:e <a href="ftp://192.168.10.76/abc.txt">ftp://192.168.10.76/abc.txt</a>   打开远程文件，比如ftp或者share folder<br>:e \qadrive\test\1.txt</p><h1 id="Vim模式"><a href="#Vim模式" class="headerlink" title="Vim模式"></a>Vim模式</h1><p>正常模式（按Esc或Ctrl+[进入） 左下角显示文件名或为空<br>插入模式（按i键进入） 左下角显示–INSERT–<br>可视模式（正常模式下 按v进入） 左下角显示–VISUAL–</p><h1 id="插入命令"><a href="#插入命令" class="headerlink" title="插入命令"></a>插入命令</h1><p>i  在当前位置生前插入<br>I  在当前行首插入<br>a  在当前位置后插入<br>A  在当前行尾插入<br>o  在当前行之后插入一行<br>O  在当前行之前插入一行<br>cw 替换从光标所在位置后到一个单词结尾的字符</p><h1 id="简单的移动光标"><a href="#简单的移动光标" class="headerlink" title="简单的移动光标"></a>简单的移动光标</h1><p>0 → 数字零，到行头<br>^ → 到本行第一个不是blank字符的位置（所谓blank字符就是空格，tab，换行，回车等）<br>$ → 到本行行尾<br>g_ → 到本行最后一个不是blank字符的位置。<br>/pattern → 搜索 pattern 的字符串（陈皓注：如果搜索出多个匹配，可按n键到下一个）</p><h1 id="拷贝／粘贴"><a href="#拷贝／粘贴" class="headerlink" title="拷贝／粘贴"></a>拷贝／粘贴</h1><p>P → 粘贴（p/P都可以，p是表示在当前位置之后，P表示在当前位置之前）<br>yy → 拷贝当前行当行于 ddP</p><h1 id="Undo-Redo"><a href="#Undo-Redo" class="headerlink" title="Undo/Redo"></a>Undo/Redo</h1><p>u → undo<br><C-r> → redo</p><h1 id="打开-保存-退出-改变文件-Buffer"><a href="#打开-保存-退出-改变文件-Buffer" class="headerlink" title="打开/保存/退出/改变文件(Buffer)"></a>打开/保存/退出/改变文件(Buffer)</h1><p>:e &lt;path/to/file&gt; → 打开一个文件<br>:w → 存盘<br>:saveas &lt;path/to/file&gt; → 另存为 &lt;path/to/file&gt;<br>:x， ZZ 或 :wq → 保存并退出 (:x 表示仅在需要时保存，ZZ不需要输入冒号并回车)<br>:q! → 退出不保存 :qa! 强行退出所有的正在编辑的文件，就算别的文件有更改。<br>:bn 和 :bp → 你可以同时打开很多文件，使用这两个命令来切换下一个或上一个文件。</p><p>到此为止，以上为Vim的一些基本操作所需要的命令。</p><hr><h1 id="查找命令"><a href="#查找命令" class="headerlink" title="查找命令"></a>查找命令</h1><p>/text　　查找text，按n健查找下一个，按N健查找前一个。<br>?text　　查找text，反向查找，按n健查找下一个，按N健查找前一个。<br><strong>////vim中有一些特殊字符在查找时需要转义　　.*[]^%/?~$</strong><br>:set ignorecase　　忽略大小写的查找<br>:set noignorecase　　不忽略大小写的查找<br><strong>////查找很长的词，如果一个词很长，键入麻烦，可以将光标移动到该词上，按*或#键即可以该单词进行搜索，相当于/搜索。而#命令相当于?搜索。</strong><br>:set hlsearch　　高亮搜索结果，所有结果都高亮显示，而不是只显示一个匹配。<br>:set nohlsearch　　关闭高亮搜索显示<br>:nohlsearch　　关闭当前的高亮显示，如果再次搜索或者按下n或N键，则会再次高亮。<br>:set incsearch　　逐步搜索模式，对当前键入的字符进行搜索而不必等待键入完成。<br>:set wrapscan　　重新搜索，在搜索到文件头或尾时，返回继续搜索，默认开启。</p><h1 id="替换命令"><a href="#替换命令" class="headerlink" title="替换命令"></a>替换命令</h1><p>ra 将当前字符替换为a，当期字符即光标所在字符。<br>s/old/new/ 用old替换new，替换当前行的第一个匹配<br>s/old/new/g 用old替换new，替换当前行的所有匹配<br>%s/old/new/ 用old替换new，替换所有行的第一个匹配<br>%s/old/new/g 用old替换new，替换整个文件的所有匹配<br>:10,20 s/^/    /g 在第10行知第20行每行前面加四个空格，用于缩进。<br>ddp 交换光标所在行和其下紧邻的一行。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;Vim 介绍&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Vim是一个类似于Vi的著名的功能强大、高度可定制的文本编辑器，在Vi的基础上改进和增加了很多特性。VIM是自由软件。&lt;br&gt;Vim普遍被推崇为类Vi编辑器中最好的一个，事实上真正的劲敌来自Emacs的不同变体。1999 年Emacs被选为Linuxworld文本编辑分类的优胜者，Vim屈居第二。但在2000年2月Vim赢得了Slashdot Beanie的最佳开放源代码文本编辑器大奖，又将Emacs推至二线， 总的来看， Vim和Emacs同样都是非常优秀的文本编辑器。&lt;/p&gt;</summary>
    
    
    
    <category term="常用工具和插件" scheme="https://zuitaibai.gitee.io/blog/categories/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%92%8C%E6%8F%92%E4%BB%B6/"/>
    
    <category term="IDE" scheme="https://zuitaibai.gitee.io/blog/categories/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%92%8C%E6%8F%92%E4%BB%B6/IDE/"/>
    
    
    <category term="命令" scheme="https://zuitaibai.gitee.io/blog/tags/%E5%91%BD%E4%BB%A4/"/>
    
    <category term="vim" scheme="https://zuitaibai.gitee.io/blog/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>git常用命令</title>
    <link href="https://zuitaibai.gitee.io/blog/2017/02/03/%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B-git-2017-02-03-git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://zuitaibai.gitee.io/blog/2017/02/03/%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B-git-2017-02-03-git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2017-02-03T06:42:35.000Z</published>
    <updated>2017-02-03T06:42:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>Workspace：工作区；    Index / Stage：暂存区；  Repository：仓库区（或本地仓库）；  Remote：远程仓库</p><span id="more"></span><h2 id="新建代码库"><a href="#新建代码库" class="headerlink" title="新建代码库"></a>新建代码库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init   <span class="comment"># 在当前目录新建一个Git代码库</span></span><br><span class="line">git init [project-name]   <span class="comment"># 新建一个目录，将其初始化为Git代码库</span></span><br><span class="line">git <span class="built_in">clone</span> [url]   <span class="comment"># 下载一个项目和它的整个代码历史</span></span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --list  <span class="comment"># 显示当前的Git配置</span></span><br><span class="line">git config -e [--global]  <span class="comment"># 编辑Git配置文件</span></span><br><span class="line">git config [--global] user.name <span class="string">&quot;[name]&quot;</span>  <span class="comment"># 设置提交代码时的用户信息</span></span><br><span class="line">git config [--global] user.email <span class="string">&quot;[email address]&quot;</span></span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="增加-删除文件"><a href="#增加-删除文件" class="headerlink" title="增加/删除文件"></a>增加/删除文件</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git add   <span class="comment"># 追加到缓冲区</span></span><br><span class="line">git add [file1] [file2] ...   <span class="comment"># 添加指定文件到暂存区</span></span><br><span class="line">git add [dir]   <span class="comment"># 添加指定目录到暂存区，包括子目录</span></span><br><span class="line">git add .   <span class="comment"># 添加当前目录的所有文件到暂存区</span></span><br><span class="line">git add -p   <span class="comment"># 添加每个变化前，都会要求确认   # 对于同一个文件的多处变化，可以实现分次提交</span></span><br><span class="line">git rm [file1] [file2] ...   <span class="comment"># 删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class="line">git rm --cached [file]    <span class="comment"># 停止追踪指定文件，但该文件会保留在工作区</span></span><br><span class="line">git mv [file-original] [file-renamed]    <span class="comment"># 改名文件，并且将这个改名放入暂存区</span></span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git commit -m [message]   <span class="comment"># 提交暂存区到仓库区</span></span><br><span class="line">git commit [file1] [file2] ... -m [message]   <span class="comment"># 提交暂存区的指定文件到仓库区</span></span><br><span class="line">git commit -a  <span class="comment"># 提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class="line">git commit -v  <span class="comment"># 提交时显示所有diff信息</span></span><br><span class="line">git commit --amend -m [message]  <span class="comment"># 使用一次新的commit，替代上一次提交  # 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class="line">git commit --amend [file1] [file2] ...   <span class="comment"># 重做上一次commit，并包括指定文件的新变化</span></span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">git branch   <span class="comment"># 列出所有本地分支</span></span><br><span class="line">git branch -r  <span class="comment"># 列出所有远程分支</span></span><br><span class="line">git branch -a  <span class="comment"># 列出所有本地分支和远程分支</span></span><br><span class="line">git branch [branch-name]   <span class="comment"># 新建一个分支，但依然停留在当前分支</span></span><br><span class="line">git checkout -b [branch]   <span class="comment"># 新建一个分支，并切换到该分支</span></span><br><span class="line">git checkout -b [branch-name] origin/dev   <span class="comment"># 拉取dev并创建分支</span></span><br><span class="line">git branch [branch] [commit]   <span class="comment"># 新建一个分支，指向指定commit</span></span><br><span class="line">git branch --track [branch] [remote-branch]   <span class="comment"># 新建一个分支，与指定的远程分支建立追踪关系</span></span><br><span class="line">git checkout [branch-name]  <span class="comment"># 切换到指定分支，并更新工作区</span></span><br><span class="line">git checkout -   <span class="comment"># 切换到上一个分支</span></span><br><span class="line">git branch --set-upstream [branch] [remote-branch]  <span class="comment"># 建立追踪关系，在现有分支与指定的远程分支之间</span></span><br><span class="line">git merge [branch]   <span class="comment"># 合并指定分支到当前分支</span></span><br><span class="line">git cherry-pick [commit]   <span class="comment"># 选择一个commit，合并进当前分支</span></span><br><span class="line">git branch -d [branch-name]  <span class="comment"># 删除分支</span></span><br><span class="line">git push origin [branch-name]  <span class="comment"># 推送分支</span></span><br><span class="line">git push origin --delete [branch-name]   <span class="comment"># 删除远程分支</span></span><br><span class="line">git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git tag   <span class="comment"># 列出所有tag</span></span><br><span class="line">git tag [tag]   <span class="comment"># 新建一个tag在当前commit</span></span><br><span class="line">git tag [tag] [commit]   <span class="comment"># 新建一个tag在指定commit</span></span><br><span class="line">git tag -d [tag]   <span class="comment"># 删除本地tag</span></span><br><span class="line">git push origin :refs/tags/[tagName]   <span class="comment"># 删除远程tag</span></span><br><span class="line">git show [tag]  <span class="comment"># 查看tag信息</span></span><br><span class="line">git push [remote] [tag]  <span class="comment"># 提交指定tag</span></span><br><span class="line">git push [remote] --tags  <span class="comment"># 提交所有tag</span></span><br><span class="line">git checkout -b [branch] [tag]   <span class="comment"># 新建一个分支，指向某个tag</span></span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">git status   <span class="comment"># 显示有变更的文件</span></span><br><span class="line">git <span class="built_in">log</span>  <span class="comment"># 显示当前分支的版本历史</span></span><br><span class="line">git <span class="built_in">log</span> --<span class="built_in">stat</span>  <span class="comment"># 显示commit历史，以及每次commit发生变更的文件</span></span><br><span class="line">git <span class="built_in">log</span> -S [keyword]   <span class="comment"># 搜索提交历史，根据关键词</span></span><br><span class="line">git <span class="built_in">log</span> [tag] HEAD --pretty=format:%s   <span class="comment"># 显示某个commit之后的所有变动，每个commit占据一行</span></span><br><span class="line">git <span class="built_in">log</span> [tag] HEAD --grep feature   <span class="comment"># 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件</span></span><br><span class="line">git <span class="built_in">log</span> --follow [file]   <span class="comment"># 显示某个文件的版本历史，包括文件改名</span></span><br><span class="line">git whatchanged [file]</span><br><span class="line">git <span class="built_in">log</span> -p [file]    <span class="comment"># 显示指定文件相关的每一次diff</span></span><br><span class="line">git <span class="built_in">log</span> -5 --pretty --oneline   <span class="comment"># 显示过去5次提交</span></span><br><span class="line">git shortlog -sn  <span class="comment"># 显示所有提交过的用户，按提交次数排序</span></span><br><span class="line">git blame [file]   <span class="comment"># 显示指定文件是什么人在什么时间修改过</span></span><br><span class="line">git diff   <span class="comment"># 显示暂存区和工作区的差异</span></span><br><span class="line">git diff --cached [file]  <span class="comment"># 显示暂存区和上一个commit的差异</span></span><br><span class="line">git diff HEAD   <span class="comment"># 显示工作区与当前分支最新commit之间的差异</span></span><br><span class="line">git diff [first-branch]...[second-branch]   <span class="comment"># 显示两次提交之间的差异</span></span><br><span class="line">git diff --shortstat <span class="string">&quot;@&#123;0 day ago&#125;&quot;</span>   <span class="comment"># 显示今天你写了多少行代码</span></span><br><span class="line">git show [commit]   <span class="comment"># 显示某次提交的元数据和内容变化</span></span><br><span class="line">git show --name-only [commit]  <span class="comment"># 显示某次提交发生变化的文件</span></span><br><span class="line">git show [commit]:[filename]   <span class="comment"># 显示某次提交时，某个文件的内容</span></span><br><span class="line">git reflog   <span class="comment"># 显示当前分支的最近几次提交</span></span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git fetch [remote]  <span class="comment"># 下载远程仓库的所有变动</span></span><br><span class="line">git remote -v  <span class="comment"># 显示所有远程仓库</span></span><br><span class="line">git remote show [remote]    <span class="comment"># 显示某个远程仓库的信息</span></span><br><span class="line">git remote add [shortname] [url]   <span class="comment"># 增加一个新的远程仓库，并命名</span></span><br><span class="line">git pull [remote] [branch]  <span class="comment"># 取回远程仓库的变化，并与本地分支合并</span></span><br><span class="line">git push [remote] [branch]  <span class="comment"># 上传本地指定分支到远程仓库</span></span><br><span class="line">git push [remote] --force   <span class="comment"># 强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class="line">git push [remote] --all   <span class="comment"># 推送所有分支到远程仓库</span></span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git checkout [file]   <span class="comment"># 恢复暂存区的指定文件到工作区</span></span><br><span class="line">git checkout [commit] [file]    <span class="comment"># 恢复某个commit的指定文件到暂存区和工作区</span></span><br><span class="line">git checkout .   <span class="comment"># 恢复暂存区的所有文件到工作区</span></span><br><span class="line">git reset [file]  <span class="comment"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span></span><br><span class="line">git reset --hard   <span class="comment"># 重置暂存区与工作区，与上一次commit保持一致</span></span><br><span class="line">git reset [commit]    <span class="comment"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span></span><br><span class="line">git reset --hard [commit]   <span class="comment"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span></span><br><span class="line">git reset --keep [commit]   <span class="comment"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span></span><br><span class="line">git revert [commit]  <span class="comment"># 新建一个commit，用来撤销指定commit  # 后者的所有变化都将被前者抵消，并且应用到当前分支</span></span><br><span class="line">git stash  <span class="comment"># 暂时将未提交的变化移除，稍后再移入</span></span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure>                </div>            </div><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git archive   <span class="comment"># 生成一个可供发布的压缩包</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Workspace：工作区；    Index / Stage：暂存区；  Repository：仓库区（或本地仓库）；  Remote：远程仓库&lt;/p&gt;</summary>
    
    
    
    <category term="开发流程" scheme="https://zuitaibai.gitee.io/blog/categories/%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/"/>
    
    <category term="git" scheme="https://zuitaibai.gitee.io/blog/categories/%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/git/"/>
    
    
    <category term="命令" scheme="https://zuitaibai.gitee.io/blog/tags/%E5%91%BD%E4%BB%A4/"/>
    
    <category term="git" scheme="https://zuitaibai.gitee.io/blog/tags/git/"/>
    
    <category term="版本控制" scheme="https://zuitaibai.gitee.io/blog/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>字体的中-英-Unicode对照表</title>
    <link href="https://zuitaibai.gitee.io/blog/2016/06/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80-%E7%BC%96%E7%A0%81-2016-06-13-%E5%AD%97%E4%BD%93%E7%9A%84%E4%B8%AD-%E8%8B%B1-Unicode%E5%AF%B9%E7%85%A7%E8%A1%A8/"/>
    <id>https://zuitaibai.gitee.io/blog/2016/06/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80-%E7%BC%96%E7%A0%81-2016-06-13-%E5%AD%97%E4%BD%93%E7%9A%84%E4%B8%AD-%E8%8B%B1-Unicode%E5%AF%B9%E7%85%A7%E8%A1%A8/</id>
    <published>2016-06-13T08:07:54.000Z</published>
    <updated>2016-06-13T08:07:54.000Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>中文名</th><th>英文名</th><th>Unicode</th></tr></thead><tbody><tr><td><font color="red"><strong>Mac OS</strong></font></td><td></td><td></td></tr><tr><td>华文细黑</td><td>STHeiti Light [STXihei]</td><td>\534E\6587\7EC6\9ED1</td></tr><tr><td>华文黑体</td><td>STHeiti</td><td>\534E\6587\9ED1\4F53</td></tr><tr><td>华文楷体</td><td>STKaiti</td><td>\534E\6587\6977\4F53</td></tr><tr><td>华文宋体</td><td>STSong</td><td>\534E\6587\5B8B\4F53</td></tr><tr><td>华文仿宋</td><td>STFangsong</td><td>\534E\6587\4EFF\5B8B</td></tr><tr><td>丽黑 Pro</td><td>LiHei Pro Medium</td><td>\4E3D\9ED1 Pro</td></tr><tr><td>丽宋 Pro</td><td>LiSong Pro Light</td><td>\4E3D\5B8B Pro</td></tr><tr><td>标楷体</td><td>BiauKai</td><td>\6807\6977\4F53</td></tr><tr><td>苹果丽中黑</td><td>Apple LiGothic Medium</td><td>\82F9\679C\4E3D\4E2D\9ED1</td></tr><tr><td>苹果丽细宋</td><td>Apple LiSung Light</td><td>\82F9\679C\4E3D\7EC6\5B8B</td></tr><tr><td><font color="red"><strong>Windows</strong></font></td><td></td><td></td></tr><tr><td>新细明体</td><td>PMingLiU</td><td>\65B0\7EC6\660E\4F53</td></tr><tr><td>细明体</td><td>MingLiU</td><td>\7EC6\660E\4F53</td></tr><tr><td>标楷体</td><td>DFKai-SB</td><td>\6807\6977\4F53</td></tr><tr><td>黑体</td><td>SimHei</td><td>\9ED1\4F53</td></tr><tr><td>宋体</td><td>SimSun</td><td>\5B8B\4F53</td></tr><tr><td>新宋体</td><td>NSimSun</td><td>\65B0\5B8B\4F53</td></tr><tr><td>仿宋</td><td>FangSong</td><td>\4EFF\5B8B</td></tr><tr><td>楷体</td><td>KaiTi</td><td>\6977\4F53</td></tr><tr><td>仿宋_GB2312</td><td>FangSong_GB2312</td><td>\4EFF\5B8B_GB2312</td></tr><tr><td>楷体_GB2312</td><td>KaiTi_GB2312</td><td>\6977\4F53_GB2312</td></tr><tr><td>微软正黑体</td><td>Microsoft JhengHei</td><td>\5FAE\x8F6F\6B63\9ED1\4F53</td></tr><tr><td>微软雅黑</td><td>Microsoft YaHei</td><td>\5FAE\8F6F\96C5\9ED1</td></tr><tr><td><font color="red"><strong>Office</strong></font></td><td></td><td></td></tr><tr><td>隶书</td><td>LiSu</td><td>\96B6\4E66</td></tr><tr><td>幼圆</td><td>YouYuan</td><td>\5E7C\5706</td></tr><tr><td>华文细黑</td><td>STXihei</td><td>\534E\6587\7EC6\9ED1</td></tr><tr><td>华文楷体</td><td>STKaiti</td><td>\534E\6587\6977\4F53</td></tr><tr><td>华文宋体</td><td>STSong</td><td>\534E\6587\5B8B\4F53</td></tr><tr><td>华文中宋</td><td>STZhongsong</td><td>\534E\6587\4E2D\5B8B</td></tr><tr><td>华文仿宋</td><td>STFangsong</td><td>\534E\6587\4EFF\5B8B</td></tr><tr><td>方正舒体</td><td>FZShuTi</td><td>\65B9\6B63\8212\4F53</td></tr><tr><td>方正姚体</td><td>FZYaoti</td><td>\65B9\6B63\59DA\4F53</td></tr><tr><td>华文彩云</td><td>STCaiyun</td><td>\534E\6587\5F69\4E91</td></tr><tr><td>华文琥珀</td><td>STHupo</td><td>\534E\6587\7425\73C0</td></tr><tr><td>华文隶书</td><td>STLiti</td><td>\534E\6587\96B6\4E66</td></tr><tr><td>华文行楷</td><td>STXingkai</td><td>\534E\6587\884C\6977</td></tr><tr><td>华文新魏</td><td>STXinwei</td><td>\534E\6587\65B0\9B4F</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;中文名&lt;/th&gt;
&lt;th&gt;英文名&lt;/th&gt;
&lt;th&gt;Unicode&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;Mac OS&lt;/strong&gt;&lt;/fo</summary>
      
    
    
    
    <category term="计算机基础" scheme="https://zuitaibai.gitee.io/blog/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="编码" scheme="https://zuitaibai.gitee.io/blog/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BC%96%E7%A0%81/"/>
    
    
    <category term="速查表" scheme="https://zuitaibai.gitee.io/blog/tags/%E9%80%9F%E6%9F%A5%E8%A1%A8/"/>
    
    <category term="Unicode" scheme="https://zuitaibai.gitee.io/blog/tags/Unicode/"/>
    
    <category term="字体" scheme="https://zuitaibai.gitee.io/blog/tags/%E5%AD%97%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>HTTP状态码详解列表</title>
    <link href="https://zuitaibai.gitee.io/blog/2016/06/13/%E7%BD%91%E7%BB%9C%E5%92%8C%E9%80%9A%E8%AE%AF-2016-06-13-HTTP%E7%8A%B6%E6%80%81%E7%A0%81%E8%AF%A6%E8%A7%A3%E5%88%97%E8%A1%A8/"/>
    <id>https://zuitaibai.gitee.io/blog/2016/06/13/%E7%BD%91%E7%BB%9C%E5%92%8C%E9%80%9A%E8%AE%AF-2016-06-13-HTTP%E7%8A%B6%E6%80%81%E7%A0%81%E8%AF%A6%E8%A7%A3%E5%88%97%E8%A1%A8/</id>
    <published>2016-06-13T06:46:03.000Z</published>
    <updated>2016-06-13T06:46:03.000Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th><div style="width:50px;">状态码</div></th><th>含义</th></tr></thead><tbody><tr><td><strong>100</strong></td><td>客户端应当继续发送请求。这个临时响应是用来通知客户端它的部分请求已经被服务器接收，且仍未被拒绝。客户端应当继续发送请求的剩余部分，或者如果请求已经完成，忽略这个响应。服务器必须在请求完成后向客户端发送一个最终响应。</td></tr><tr><td><strong>101</strong></td><td>服务器已经理解了客户端的请求，并将通过Upgrade 消息头通知客户端采用不同的协议来完成这个请求。在发送完这个响应最后的空行后，服务器将会切换到在Upgrade 消息头中定义的那些协议。 　　只有在切换新的协议更有好处的时候才应该采取类似措施。例如，切换到新的HTTP 版本比旧版本更有优势，或者切换到一个实时且同步的协议以传送利用此类特性的资源。</td></tr><tr><td><strong>102</strong></td><td>由WebDAV（RFC 2518）扩展的状态码，代表处理将被继续执行。</td></tr><tr><td><strong>200</strong></td><td>请求已成功，请求所希望的响应头或数据体将随此响应返回。</td></tr><tr><td><strong>201</strong></td><td>请求已经被实现，而且有一个新的资源已经依据请求的需要而建立，且其 URI 已经随Location 头信息返回。假如需要的资源无法及时建立的话，应当返回 ‘202 Accepted’。</td></tr><tr><td><strong>202</strong></td><td>服务器已接受请求，但尚未处理。正如它可能被拒绝一样，最终该请求可能会也可能不会被执行。在异步操作的场合下，没有比发送这个状态码更方便的做法了。 　　返回202状态码的响应的目的是允许服务器接受其他过程的请求（例如某个每天只执行一次的基于批处理的操作），而不必让客户端一直保持与服务器的连接直到批处理操作全部完成。在接受请求处理并返回202状态码的响应应当在返回的实体中包含一些指示处理当前状态的信息，以及指向处理状态监视器或状态预测的指针，以便用户能够估计操作是否已经完成。</td></tr><tr><td><strong>203</strong></td><td>服务器已成功处理了请求，但返回的实体头部元信息不是在原始服务器上有效的确定集合，而是来自本地或者第三方的拷贝。当前的信息可能是原始版本的子集或者超集。例如，包含资源的元数据可能导致原始服务器知道元信息的超级。使用此状态码不是必须的，而且只有在响应不使用此状态码便会返回200 OK的情况下才是合适的。</td></tr><tr><td><strong>204</strong></td><td>服务器成功处理了请求，但不需要返回任何实体内容，并且希望返回更新了的元信息。响应可能通过实体头部的形式，返回新的或更新后的元信息。如果存在这些头部信息，则应当与所请求的变量相呼应。 　　如果客户端是浏览器的话，那么用户浏览器应保留发送了该请求的页面，而不产生任何文档视图上的变化，即使按照规范新的或更新后的元信息应当被应用到用户浏览器活动视图中的文档。 　　由于204响应被禁止包含任何消息体，因此它始终以消息头后的第一个空行结尾。</td></tr><tr><td><strong>205</strong></td><td>服务器成功处理了请求，且没有返回任何内容。但是与204响应不同，返回此状态码的响应要求请求者重置文档视图。该响应主要是被用于接受用户输入后，立即重置表单，以便用户能够轻松地开始另一次输入。 　　与204响应一样，该响应也被禁止包含任何消息体，且以消息头后的第一个空行结束。</td></tr><tr><td><strong>206</strong></td><td>服务器已经成功处理了部分 GET 请求。类似于 FlashGet 或者迅雷这类的 HTTP 下载工具都是使用此类响应实现断点续传或者将一个大文档分解为多个下载段同时下载。 　　该请求必须包含 Range 头信息来指示客户端希望得到的内容范围，并且可能包含 If-Range 来作为请求条件。 　　响应必须包含如下的头部域： 　　Content-Range 用以指示本次响应中返回的内容的范围；如果是 Content-Type 为 multipart/byteranges 的多段下载，则每一 multipart 段中都应包含 Content-Range 域用以指示本段的内容范围。假如响应中包含 Content-Length，那么它的数值必须匹配它返回的内容范围的真实字节数。 　　Date 　　ETag 和/或 Content-Location，假如同样的请求本应该返回200响应。 　　Expires, Cache-Control，和/或 Vary，假如其值可能与之前相同变量的其他响应对应的值不同的话。 　　假如本响应请求使用了 If-Range 强缓存验证，那么本次响应不应该包含其他实体头；假如本响应的请求使用了 If-Range 弱缓存验证，那么本次响应禁止包含其他实体头；这避免了缓存的实体内容和更新了的实体头信息之间的不一致。否则，本响应就应当包含所有本应该返回200响应中应当返回的所有实体头部域。 　　假如 ETag 或 Last-Modified 头部不能精确匹配的话，则客户端缓存应禁止将206响应返回的内容与之前任何缓存过的内容组合在一起。 　　任何不支持 Range 以及 Content-Range 头的缓存都禁止缓存206响应返回的内容。</td></tr><tr><td><strong>207</strong></td><td>由WebDAV(RFC 2518)扩展的状态码，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。</td></tr><tr><td><strong>300</strong></td><td>被请求的资源有一系列可供选择的回馈信息，每个都有自己特定的地址和浏览器驱动的商议信息。用户或浏览器能够自行选择一个首选的地址进行重定向。 　　除非这是一个 HEAD 请求，否则该响应应当包括一个资源特性及地址的列表的实体，以便用户或浏览器从中选择最合适的重定向地址。这个实体的格式由 Content-Type 定义的格式所决定。浏览器可能根据响应的格式以及浏览器自身能力，自动作出最合适的选择。当然，RFC 2616规范并没有规定这样的自动选择该如何进行。 　　如果服务器本身已经有了首选的回馈选择，那么在 Location 中应当指明这个回馈的 URI；浏览器可能会将这个 Location 值作为自动重定向的地址。此外，除非额外指定，否则这个响应也是可缓存的。</td></tr><tr><td><strong>301</strong></td><td>被请求的资源已永久移动到新位置，并且将来任何对此资源的引用都应该使用本响应返回的若干个 URI 之一。如果可能，拥有链接编辑功能的客户端应当自动把请求的地址修改为从服务器反馈回来的地址。除非额外指定，否则这个响应也是可缓存的。 　　新的永久性的 URI 应当在响应的 Location 域中返回。除非这是一个 HEAD 请求，否则响应的实体中应当包含指向新的 URI 的超链接及简短说明。 　　如果这不是一个 GET 或者 HEAD 请求，因此浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。 　　注意：对于某些使用 HTTP/1.0 协议的浏览器，当它们发送的 POST 请求得到了一个301响应的话，接下来的重定向请求将会变成 GET 方式。</td></tr><tr><td><strong>302</strong></td><td>请求的资源现在临时从不同的 URI 响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在Cache-Control或Expires中进行了指定的情况下，这个响应才是可缓存的。 　　新的临时性的 URI 应当在响应的 Location 域中返回。除非这是一个 HEAD 请求，否则响应的实体中应当包含指向新的 URI 的超链接及简短说明。 　　如果这不是一个 GET 或者 HEAD 请求，那么浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。 　　注意：虽然RFC 1945和RFC 2068规范不允许客户端在重定向时改变请求的方法，但是很多现存的浏览器将302响应视作为303响应，并且使用 GET 方式访问在 Location 中规定的 URI，而无视原先请求的方法。状态码303和307被添加了进来，用以明确服务器期待客户端进行何种反应。</td></tr><tr><td><strong>303</strong></td><td>对应当前请求的响应可以在另一个 URI 上被找到，而且客户端应当采用 GET 的方式访问那个资源。这个方法的存在主要是为了允许由脚本激活的POST请求输出重定向到一个新的资源。这个新的 URI 不是原始资源的替代引用。同时，303响应禁止被缓存。当然，第二个请求（重定向）可能被缓存。 　　新的 URI 应当在响应的 Location 域中返回。除非这是一个 HEAD 请求，否则响应的实体中应当包含指向新的 URI 的超链接及简短说明。 　　注意：许多 HTTP/1.1 版以前的 浏览器不能正确理解303状态。如果需要考虑与这些浏览器之间的互动，302状态码应该可以胜任，因为大多数的浏览器处理302响应时的方式恰恰就是上述规范要求客户端处理303响应时应当做的。</td></tr><tr><td><strong>304</strong></td><td>如果客户端发送了一个带条件的 GET 请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变，则服务器应当返回这个状态码。304响应禁止包含消息体，因此始终以消息头后的第一个空行结尾。 　　该响应必须包含以下的头信息： 　　Date，除非这个服务器没有时钟。假如没有时钟的服务器也遵守这些规则，那么代理服务器以及客户端可以自行将 Date 字段添加到接收到的响应头中去（正如RFC 2068中规定的一样），缓存机制将会正常工作。 　　ETag 和/或 Content-Location，假如同样的请求本应返回200响应。 　　Expires, Cache-Control，和/或Vary，假如其值可能与之前相同变量的其他响应对应的值不同的话。 　　假如本响应请求使用了强缓存验证，那么本次响应不应该包含其他实体头；否则（例如，某个带条件的 GET 请求使用了弱缓存验证），本次响应禁止包含其他实体头；这避免了缓存了的实体内容和更新了的实体头信息之间的不一致。 　　假如某个304响应指明了当前某个实体没有缓存，那么缓存系统必须忽视这个响应，并且重复发送不包含限制条件的请求。 　　假如接收到一个要求更新某个缓存条目的304响应，那么缓存系统必须更新整个条目以反映所有在响应中被更新的字段的值。</td></tr><tr><td><strong>305</strong></td><td>被请求的资源必须通过指定的代理才能被访问。Location 域中将给出指定的代理所在的 URI 信息，接收者需要重复发送一个单独的请求，通过这个代理才能访问相应资源。只有原始服务器才能建立305响应。 　　注意：RFC 2068中没有明确305响应是为了重定向一个单独的请求，而且只能被原始服务器建立。忽视这些限制可能导致严重的安全后果。</td></tr><tr><td><strong>306</strong></td><td>在最新版的规范中，306状态码已经不再被使用。</td></tr><tr><td><strong>307</strong></td><td>请求的资源现在临时从不同的URI 响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在Cache-Control或Expires中进行了指定的情况下，这个响应才是可缓存的。 　　新的临时性的URI 应当在响应的 Location 域中返回。除非这是一个HEAD 请求，否则响应的实体中应当包含指向新的URI 的超链接及简短说明。因为部分浏览器不能识别307响应，因此需要添加上述必要信息以便用户能够理解并向新的 URI 发出访问请求。 　　如果这不是一个GET 或者 HEAD 请求，那么浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。</td></tr><tr><td><strong>400</strong></td><td>1、语义有误，当前请求无法被服务器理解。除非进行修改，否则客户端不应该重复提交这个请求。 　　2、请求参数有误。</td></tr><tr><td><strong>401</strong></td><td>当前请求需要用户验证。该响应必须包含一个适用于被请求资源的 WWW-Authenticate 信息头用以询问用户信息。客户端可以重复提交一个包含恰当的 Authorization 头信息的请求。如果当前请求已经包含了 Authorization 证书，那么401响应代表着服务器验证已经拒绝了那些证书。如果401响应包含了与前一个响应相同的身份验证询问，且浏览器已经至少尝试了一次验证，那么浏览器应当向用户展示响应中包含的实体信息，因为这个实体信息中可能包含了相关诊断信息。参见RFC 2617。</td></tr><tr><td><strong>402</strong></td><td>该状态码是为了将来可能的需求而预留的。</td></tr><tr><td><strong>403</strong></td><td>服务器已经理解请求，但是拒绝执行它。与401响应不同的是，身份验证并不能提供任何帮助，而且这个请求也不应该被重复提交。如果这不是一个 HEAD 请求，而且服务器希望能够讲清楚为何请求不能被执行，那么就应该在实体内描述拒绝的原因。当然服务器也可以返回一个404响应，假如它不希望让客户端获得任何信息。</td></tr><tr><td><strong>404</strong></td><td>请求失败，请求所希望得到的资源未被在服务器上发现。没有信息能够告诉用户这个状况到底是暂时的还是永久的。假如服务器知道情况的话，应当使用410状态码来告知旧资源因为某些内部的配置机制问题，已经永久的不可用，而且没有任何可以跳转的地址。404这个状态码被广泛应用于当服务器不想揭示到底为何请求被拒绝或者没有其他适合的响应可用的情况下。</td></tr><tr><td><strong>405</strong></td><td>请求行中指定的请求方法不能被用于请求相应的资源。该响应必须返回一个Allow 头信息用以表示出当前资源能够接受的请求方法的列表。 　　鉴于 PUT，DELETE 方法会对服务器上的资源进行写操作，因而绝大部分的网页服务器都不支持或者在默认配置下不允许上述请求方法，对于此类请求均会返回405错误。</td></tr><tr><td><strong>406</strong></td><td>请求的资源的内容特性无法满足请求头中的条件，因而无法生成响应实体。 　　除非这是一个 HEAD 请求，否则该响应就应当返回一个包含可以让用户或者浏览器从中选择最合适的实体特性以及地址列表的实体。实体的格式由 Content-Type 头中定义的媒体类型决定。浏览器可以根据格式及自身能力自行作出最佳选择。但是，规范中并没有定义任何作出此类自动选择的标准。</td></tr><tr><td><strong>407</strong></td><td>与401响应类似，只不过客户端必须在代理服务器上进行身份验证。代理服务器必须返回一个 Proxy-Authenticate 用以进行身份询问。客户端可以返回一个 Proxy-Authorization 信息头用以验证。参见RFC 2617。</td></tr><tr><td><strong>408</strong></td><td>请求超时。客户端没有在服务器预备等待的时间内完成一个请求的发送。客户端可以随时再次提交这一请求而无需进行任何更改。</td></tr><tr><td><strong>409</strong></td><td>由于和被请求的资源的当前状态之间存在冲突，请求无法完成。这个代码只允许用在这样的情况下才能被使用：用户被认为能够解决冲突，并且会重新提交新的请求。该响应应当包含足够的信息以便用户发现冲突的源头。 　　冲突通常发生于对 PUT 请求的处理中。例如，在采用版本检查的环境下，某次 PUT 提交的对特定资源的修改请求所附带的版本信息与之前的某个（第三方）请求向冲突，那么此时服务器就应该返回一个409错误，告知用户请求无法完成。此时，响应实体中很可能会包含两个冲突版本之间的差异比较，以便用户重新提交归并以后的新版本。</td></tr><tr><td><strong>410</strong></td><td>被请求的资源在服务器上已经不再可用，而且没有任何已知的转发地址。这样的状况应当被认为是永久性的。如果可能，拥有链接编辑功能的客户端应当在获得用户许可后删除所有指向这个地址的引用。如果服务器不知道或者无法确定这个状况是否是永久的，那么就应该使用404状态码。除非额外说明，否则这个响应是可缓存的。 　　410响应的目的主要是帮助网站管理员维护网站，通知用户该资源已经不再可用，并且服务器拥有者希望所有指向这个资源的远端连接也被删除。这类事件在限时、增值服务中很普遍。同样，410响应也被用于通知客户端在当前服务器站点上，原本属于某个个人的资源已经不再可用。当然，是否需要把所有永久不可用的资源标记为’410 Gone’，以及是否需要保持此标记多长时间，完全取决于服务器拥有者。</td></tr><tr><td><strong>411</strong></td><td>服务器拒绝在没有定义 Content-Length 头的情况下接受请求。在添加了表明请求消息体长度的有效 Content-Length 头之后，客户端可以再次提交该请求。</td></tr><tr><td><strong>412</strong></td><td>服务器在验证在请求的头字段中给出先决条件时，没能满足其中的一个或多个。这个状态码允许客户端在获取资源时在请求的元信息（请求头字段数据）中设置先决条件，以此避免该请求方法被应用到其希望的内容以外的资源上。</td></tr><tr><td><strong>413</strong></td><td>服务器拒绝处理当前请求，因为该请求提交的实体数据大小超过了服务器愿意或者能够处理的范围。此种情况下，服务器可以关闭连接以免客户端继续发送此请求。 　　如果这个状况是临时的，服务器应当返回一个 Retry-After 的响应头，以告知客户端可以在多少时间以后重新尝试。</td></tr><tr><td><strong>414</strong></td><td>请求的URI 长度超过了服务器能够解释的长度，因此服务器拒绝对该请求提供服务。这比较少见，通常的情况包括： 　　本应使用POST方法的表单提交变成了GET方法，导致查询字符串（Query String）过长。 　　重定向URI “黑洞”，例如每次重定向把旧的 URI 作为新的 URI 的一部分，导致在若干次重定向后 URI 超长。 　　客户端正在尝试利用某些服务器中存在的安全漏洞攻击服务器。这类服务器使用固定长度的缓冲读取或操作请求的 URI，当 GET 后的参数超过某个数值后，可能会产生缓冲区溢出，导致任意代码被执行[1]。没有此类漏洞的服务器，应当返回414状态码。</td></tr><tr><td><strong>415</strong></td><td>对于当前请求的方法和所请求的资源，请求中提交的实体并不是服务器中所支持的格式，因此请求被拒绝。</td></tr><tr><td><strong>416</strong></td><td>如果请求中包含了 Range 请求头，并且 Range 中指定的任何数据范围都与当前资源的可用范围不重合，同时请求中又没有定义 If-Range 请求头，那么服务器就应当返回416状态码。 　　假如 Range 使用的是字节范围，那么这种情况就是指请求指定的所有数据范围的首字节位置都超过了当前资源的长度。服务器也应当在返回416状态码的同时，包含一个 Content-Range 实体头，用以指明当前资源的长度。这个响应也被禁止使用 multipart/byteranges 作为其 Content-Type。</td></tr><tr><td><strong>417</strong></td><td>在请求头 Expect 中指定的预期内容无法被服务器满足，或者这个服务器是一个代理服务器，它有明显的证据证明在当前路由的下一个节点上，Expect 的内容无法被满足。</td></tr><tr><td><strong>421</strong></td><td>从当前客户端所在的IP地址到服务器的连接数超过了服务器许可的最大范围。通常，这里的IP地址指的是从服务器上看到的客户端地址（比如用户的网关或者代理服务器地址）。在这种情况下，连接数的计算可能涉及到不止一个终端用户。</td></tr><tr><td><strong>422</strong></td><td>从当前客户端所在的IP地址到服务器的连接数超过了服务器许可的最大范围。通常，这里的IP地址指的是从服务器上看到的客户端地址（比如用户的网关或者代理服务器地址）。在这种情况下，连接数的计算可能涉及到不止一个终端用户。</td></tr><tr><td><strong>422</strong></td><td>请求格式正确，但是由于含有语义错误，无法响应。（RFC 4918 WebDAV）423 Locked 　　当前资源被锁定。（RFC 4918 WebDAV）</td></tr><tr><td><strong>424</strong></td><td>由于之前的某个请求发生的错误，导致当前请求失败，例如 PROPPATCH。（RFC 4918 WebDAV）</td></tr><tr><td><strong>425</strong></td><td>在WebDav Advanced Collections 草案中定义，但是未出现在《WebDAV 顺序集协议》（RFC 3658）中。</td></tr><tr><td><strong>426</strong></td><td>客户端应当切换到TLS/1.0。（RFC 2817）</td></tr><tr><td><strong>449</strong></td><td>由微软扩展，代表请求应当在执行完适当的操作后进行重试。</td></tr><tr><td><strong>500</strong></td><td>服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理。一般来说，这个问题都会在服务器的程序码出错时出现。</td></tr><tr><td><strong>501</strong></td><td>服务器不支持当前请求所需要的某个功能。当服务器无法识别请求的方法，并且无法支持其对任何资源的请求。</td></tr><tr><td><strong>502</strong></td><td>作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应。</td></tr><tr><td><strong>503</strong></td><td>由于临时的服务器维护或者过载，服务器当前无法处理请求。这个状况是临时的，并且将在一段时间以后恢复。如果能够预计延迟时间，那么响应中可以包含一个 Retry-After 头用以标明这个延迟时间。如果没有给出这个 Retry-After 信息，那么客户端应当以处理500响应的方式处理它。 　　注意：503状态码的存在并不意味着服务器在过载的时候必须使用它。某些服务器只不过是希望拒绝客户端的连接。</td></tr><tr><td><strong>504</strong></td><td>作为网关或者代理工作的服务器尝试执行请求时，未能及时从上游服务器（URI标识出的服务器，例如HTTP、FTP、LDAP）或者辅助服务器（例如DNS）收到响应。 　　注意：某些代理服务器在DNS查询超时时会返回400或者500错误</td></tr><tr><td><strong>505</strong></td><td>服务器不支持，或者拒绝支持在请求中使用的 HTTP 版本。这暗示着服务器不能或不愿使用与客户端相同的版本。响应中应当包含一个描述了为何版本不被支持以及服务器支持哪些协议的实体。</td></tr><tr><td><strong>506</strong></td><td>由《透明内容协商协议》（RFC 2295）扩展，代表服务器存在内部配置错误：被请求的协商变元资源被配置为在透明内容协商中使用自己，因此在一个协商处理中不是一个合适的重点。</td></tr><tr><td><strong>507</strong></td><td>服务器无法存储完成请求所必须的内容。这个状况被认为是临时的。WebDAV (RFC 4918)</td></tr><tr><td><strong>509</strong></td><td>服务器达到带宽限制。这不是一个官方的状态码，但是仍被广泛使用。</td></tr><tr><td><strong>510</strong></td><td>获取资源所需要的策略并没有没满足。（RFC 2774）</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;div style=&quot;width:50px;&quot;&gt;状态码&lt;/div&gt;&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;100&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;客户</summary>
      
    
    
    
    <category term="网络和通讯" scheme="https://zuitaibai.gitee.io/blog/categories/%E7%BD%91%E7%BB%9C%E5%92%8C%E9%80%9A%E8%AE%AF/"/>
    
    
    <category term="速查表" scheme="https://zuitaibai.gitee.io/blog/tags/%E9%80%9F%E6%9F%A5%E8%A1%A8/"/>
    
    <category term="HTTP状态码" scheme="https://zuitaibai.gitee.io/blog/tags/HTTP%E7%8A%B6%E6%80%81%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>手机网站的几点注意（转）</title>
    <link href="https://zuitaibai.gitee.io/blog/2016/06/13/%E7%A7%BB%E5%8A%A8%E7%AB%AF-2013-06-13-%E6%89%8B%E6%9C%BA%E7%BD%91%E7%AB%99%E7%9A%84%E5%87%A0%E7%82%B9%E6%B3%A8%E6%84%8F%EF%BC%88%E8%BD%AC%EF%BC%89/"/>
    <id>https://zuitaibai.gitee.io/blog/2016/06/13/%E7%A7%BB%E5%8A%A8%E7%AB%AF-2013-06-13-%E6%89%8B%E6%9C%BA%E7%BD%91%E7%AB%99%E7%9A%84%E5%87%A0%E7%82%B9%E6%B3%A8%E6%84%8F%EF%BC%88%E8%BD%AC%EF%BC%89/</id>
    <published>2016-06-13T03:23:58.000Z</published>
    <updated>2016-06-13T03:23:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>对于手机网站建设，总结了如下注意：</p><span id="more"></span><h1 id="安卓浏览器看背景图片，有些设备会模糊。"><a href="#安卓浏览器看背景图片，有些设备会模糊。" class="headerlink" title="安卓浏览器看背景图片，有些设备会模糊。"></a>安卓浏览器看背景图片，有些设备会模糊。</h1><p>用同等比例的图片在PC机上很清楚，但是手机上很模糊，原因是什么呢？<br>经过研究，是devicePixelRatio作怪，因为手机分辨率太小，如果按照分辨率来显示网页，这样字会非常小，所以苹果当初就把iPhone 4的960<em>640分辨率，在网页里只显示了480</em>320，这样devicePixelRatio＝2。现在android比较乱，有1.5的，有2的也有3的。<br>想让图片在手机里显示更为清晰，必须使用2x的背景图来代替img标签（一般情况都是用2倍）。例如一个div的宽高是100<em>100，背景图必须得200</em>200，然后background-size:contain;，这样显示出来的图片就比较清晰了。<br>代码可以如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">background:url(../images/icon/all.png) no-repeat center center;</span><br><span class="line">-webkit-background-size:50px 50px;</span><br><span class="line">background-size:50px 50px; display:inline-block; width:100%; height:50px;</span><br></pre></td></tr></table></figure><p>或者指定 background-size:contain; 都可以，大家试试！</p><h1 id="图片加载"><a href="#图片加载" class="headerlink" title="图片加载"></a>图片加载</h1><p>若您遇到图片加载很慢的问题，对这种情况，手机开发一般用canvas方法加载：<br>具体的canvas API 参见：<a href="http://javascript.ruanyifeng.com/htmlapi/canvas.html">http://javascript.ruanyifeng.com/htmlapi/canvas.html</a><br>下面举例说明一个canvas的例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;li&gt;&lt;canvas&gt;&lt;/canvas&gt;&lt;/li&gt;</span><br></pre></td></tr></table></figure><p>动态加载图片和li，总共举例17张图片！</p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> zWin=$(<span class="built_in">window</span>);</span><br><span class="line"><span class="keyword">var</span> render=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="keyword">var</span> padding=<span class="number">2</span>;</span><br><span class="line">   <span class="keyword">var</span> winWidth=zWin.width();</span><br><span class="line">   <span class="keyword">var</span> picWidth=&lt;<span class="regexp">/span&gt;&lt;span class=&quot;typ&quot;&gt;Math.floor((winWidth-padding*3)/</span><span class="number">4</span>);</span><br><span class="line">   <span class="keyword">var</span> tmpl =&lt;/span&gt;<span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;str&quot;</span>&gt;</span>&#x27;&#x27;;</span></span><br><span class="line"><span class="xml">   for (var i=1;i<span class="symbol">&amp;lt;</span>=totla;i++)&#123;</span></span><br><span class="line"><span class="xml">    var p=padding;</span></span><br><span class="line"><span class="xml">    var imgSrc=<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;str&quot;</span>&gt;</span>&#x27;img/&#x27;+i+<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;str&quot;</span>&gt;</span>&#x27;.jpg&#x27;;</span></span><br><span class="line"><span class="xml">    if(i%4==1)&#123;</span></span><br><span class="line"><span class="xml">      p=0;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    tmpl +=<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;str&quot;</span>&gt;</span>&#x27;<span class="symbol">&amp;lt;</span>li style=&quot;width:&#x27;+picWidth+<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;str&quot;</span>&gt;</span>&#x27;px;height:&#x27;+picWidth+<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;str&quot;</span>&gt;</span>&#x27;px;padding-left:&#x27;+p+<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;str&quot;</span>&gt;</span>&#x27;px;padding-top:&#x27;+padding+<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;str&quot;</span>&gt;</span>&#x27;px;&quot;<span class="symbol">&amp;gt;</span><span class="symbol">&amp;lt;</span>canvas id=&quot;cvs_&#x27;+i+<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;str&quot;</span>&gt;</span>&#x27;&quot;<span class="symbol">&amp;gt;</span><span class="symbol">&amp;lt;</span>/canvas<span class="symbol">&amp;gt;</span><span class="symbol">&amp;lt;</span>/li<span class="symbol">&amp;gt;</span>&#x27;;</span></span><br><span class="line"><span class="xml">    var imageObj = new <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;typ&quot;</span>&gt;</span>Image();</span></span><br><span class="line"><span class="xml">    imageObj.index = i;</span></span><br><span class="line"><span class="xml">    imageObj.onload = function()&#123;</span></span><br><span class="line"><span class="xml">       var cvs =$(<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;str&quot;</span>&gt;</span>&#x27;#cvs_&#x27;+this.index)[0].getContext(<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;str&quot;</span>&gt;</span>&#x27;2d&#x27;);</span></span><br><span class="line"><span class="xml">       cvs.width = this.width;</span></span><br><span class="line"><span class="xml">       cvs.height=this.height;</span></span><br><span class="line"><span class="xml">       cvs.drawImage(this,0,0);</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    imageObj.src=imgSrc;</span></span><br><span class="line"><span class="xml">   &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">render();</span></span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="防止手机中网页放大和缩小"><a href="#防止手机中网页放大和缩小" class="headerlink" title="防止手机中网页放大和缩小"></a>防止手机中网页放大和缩小</h1><p>这点是最基本的，最为手机网站开发者来说应该都知道的，就是设置meta中的viewport<br>还有就是，有些手机网站我们看到如下声明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html PUBLIC “-//WAPFORUM//DTD XHTML Mobile 1.0//EN” “http://www.wapforum.org/DTD/xhtml-mobile10.dtd&quot;&gt;</span><br></pre></td></tr></table></figure><p>设置了DTD的方式是XHTML的写法，假如我们页面运用的是html5，可以不用设置DTD,直接声明&lt;!DOCTYPE html&gt;。<br><strong>使用viewport使页面禁止缩放。 通常把user-scalable设置为0来关闭用户对页面视图缩放的行为。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=“viewport” content=“user-scalable=0” /&gt;</span><br></pre></td></tr></table></figure><p>但是为了更好的兼容，我们会使用完整的viewport设置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=“viewport” content=“width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=0” /&gt;</span><br></pre></td></tr></table></figure><p>当然，user-scalable=0,有的人也写成user-scalable=no，都可以的。</p><h1 id="apple-mobile-web-app-capable"><a href="#apple-mobile-web-app-capable" class="headerlink" title="apple-mobile-web-app-capable"></a>apple-mobile-web-app-capable</h1><p>apple-mobile-web-app-capable是设置Web应用是否以全屏模式运行。<br><strong>语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=“apple-mobile-web-app-capable” content=“yes”&gt;</span><br></pre></td></tr></table></figure><p><strong>说明：</strong><br>如果content设置为yes，Web应用会以全屏模式运行，反之，则不会。content的默认值是no，表示正常显示。你可以通过只读属性window.navigator.standalone来确定网页是否以全屏模式显示。<br><strong>兼容性：</strong><br>iOS 2.1 +</p><h1 id="format-detection"><a href="#format-detection" class="headerlink" title="format-detection"></a>format-detection</h1><p>format-detection 启动或禁用自动识别页面中的电话号码。<br><strong>语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=“format-detection” content=“telephone=no”&gt;</span><br></pre></td></tr></table></figure><p><strong>说明：</strong><br>默认情况下，设备会自动识别任何可能是电话号码的字符串。设置telephone=no可以禁用这项功能。<br><strong>兼容性</strong><br>iOS 1.0 +</p><h1 id="html5调用安卓或者ios的拨号功能"><a href="#html5调用安卓或者ios的拨号功能" class="headerlink" title="html5调用安卓或者ios的拨号功能"></a>html5调用安卓或者ios的拨号功能</h1><p>html5提供了自动调用拨号的标签，只要在a标签的href中添加tel:就可以了。<br>如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=“tel:4008106999,1034”&gt;400-810-6999 转 1034&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>拨打手机直接如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=“tel:15677776767”&gt;点击拨打15677776767&lt;/a&gt;</span><br></pre></td></tr></table></figure><h1 id="html5GPS定位功能"><a href="#html5GPS定位功能" class="headerlink" title="html5GPS定位功能"></a>html5GPS定位功能</h1><p>具体请看：<a href="http://www.haorooms.com/post/html5_GPS_getCurrentPosition">http://www.haorooms.com/post/html5_GPS_getCurrentPosition</a></p><h1 id="上下拉动滚动条时卡顿、慢"><a href="#上下拉动滚动条时卡顿、慢" class="headerlink" title="上下拉动滚动条时卡顿、慢"></a>上下拉动滚动条时卡顿、慢</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">    -webkit-overflow-scrolling: touch;</span><br><span class="line">    overflow-scrolling: touch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><p>Android3+和iOS5+支持CSS3的新属性为overflow-scrolling</p><h1 id="禁止复制、选中文本"><a href="#禁止复制、选中文本" class="headerlink" title="禁止复制、选中文本"></a>禁止复制、选中文本</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Element &#123;</span><br><span class="line">    -webkit-user-select: none;</span><br><span class="line">    -moz-user-select: none;</span><br><span class="line">    -khtml-user-select: none;</span><br><span class="line">     user-select: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><p>解决移动设备可选中页面文本(视产品需要而定)</p><h1 id="长时间按住页面出现闪退"><a href="#长时间按住页面出现闪退" class="headerlink" title="长时间按住页面出现闪退"></a>长时间按住页面出现闪退</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">element &#123;</span><br><span class="line">    -webkit-touch-callout: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="iphone及ipad下输入框默认内阴影"><a href="#iphone及ipad下输入框默认内阴影" class="headerlink" title="iphone及ipad下输入框默认内阴影"></a>iphone及ipad下输入框默认内阴影</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Element&#123;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ios和android下触摸元素时出现半透明灰色遮罩"><a href="#ios和android下触摸元素时出现半透明灰色遮罩" class="headerlink" title="ios和android下触摸元素时出现半透明灰色遮罩"></a>ios和android下触摸元素时出现半透明灰色遮罩</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Element &#123;</span><br><span class="line">    -webkit-tap-highlight-color:rgba(255,255,255,0)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置alpha值为0就可以去除半透明灰色遮罩，备注：transparent的属性值在android下无效。<br>后面一篇文章有详细介绍，地址：<a href="http://www.haorooms.com/post/phone_web_ysk">http://www.haorooms.com/post/phone_web_ysk</a></p><h1 id="active兼容处理-即-伪类-active-失效"><a href="#active兼容处理-即-伪类-active-失效" class="headerlink" title="active兼容处理 即 伪类 :active 失效"></a>active兼容处理 即 伪类 :active 失效</h1><p>方法一：body添加ontouchstart</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;body ontouchstart=&quot;&quot;&gt;</span><br></pre></td></tr></table></figure><p>方法二：js给 document 绑定 touchstart 或 touchend 事件</p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">a &#123;</span><br><span class="line">  color: #000;</span><br><span class="line">&#125;</span><br><span class="line">a:active &#123;</span><br><span class="line">  color: #fff;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;a herf=foo &gt;bar&lt;/a&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  document.addEventListener(‘touchstart’,function()&#123;&#125;,false);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="动画定义3D启用硬件加速"><a href="#动画定义3D启用硬件加速" class="headerlink" title="动画定义3D启用硬件加速"></a>动画定义3D启用硬件加速</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Element &#123;</span><br><span class="line">    -webkit-transform:translate3d(0, 0, 0)</span><br><span class="line">    transform: translate3d(0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><p>注意：3D变形会消耗更多的内存与功耗</p><h1 id="Retina屏的1px边框"><a href="#Retina屏的1px边框" class="headerlink" title="Retina屏的1px边框"></a>Retina屏的1px边框</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Element&#123;</span><br><span class="line">    border-width: thin;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="webkit-mask-兼容处理"><a href="#webkit-mask-兼容处理" class="headerlink" title="webkit mask 兼容处理"></a>webkit mask 兼容处理</h1><p>某些低端手机不支持css3 mask，可以选择性的降级处理。比如可以使用js判断来引用不同class：</p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if( ‘WebkitMask’ in document.documentElement.style)&#123;</span><br><span class="line">    alert(‘支持mask’);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    alert(‘不支持mask’);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="旋转屏幕时，字体大小调整的问题"><a href="#旋转屏幕时，字体大小调整的问题" class="headerlink" title="旋转屏幕时，字体大小调整的问题"></a>旋转屏幕时，字体大小调整的问题</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">html, body, form, fieldset, p, div, h1, h2, h3, h4, h5, h6 &#123;</span><br><span class="line">    -webkit-text-size-adjust:100%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="transition闪屏"><a href="#transition闪屏" class="headerlink" title="transition闪屏"></a>transition闪屏</h1><p><em>设置内嵌的元素在 3D 空间如何呈现：保留3D</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-webkit-transform-style: preserve-3d;</span><br></pre></td></tr></table></figure><p>*设置进行转换的元素的背面在面对用户时是否可见：隐藏 *</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-webkit-backface-visibility:hidden;</span><br></pre></td></tr></table></figure><h1 id="圆角bug"><a href="#圆角bug" class="headerlink" title="圆角bug"></a>圆角bug</h1><p>某些Android手机圆角失效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-clip: padding-box;</span><br></pre></td></tr></table></figure><h1 id="顶部状态栏背景色"><a href="#顶部状态栏背景色" class="headerlink" title="顶部状态栏背景色"></a>顶部状态栏背景色</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=“apple-mobile-web-app-status-bar-style” content=“black” /&gt;</span><br></pre></td></tr></table></figure><p><strong>说明：</strong><br>除非你先使用apple-mobile-web-app-capable指定全屏模式，否则这个meta标签不会起任何作用。<br>如果content设置为default，则状态栏正常显示。如果设置为blank，则状态栏会有一个黑色的背景。如果设置为blank-translucent，则状态栏显示为黑色半透明。如果设置为default或blank，则页面显示在状态栏的下方，即状态栏占据上方部分，页面占据下方部分，二者没有遮挡对方或被遮挡。如果设置为blank-translucent，则页面会充满屏幕，其中页面顶部会被状态栏遮盖住（会覆盖页面20px高度，而iphone4和itouch4的Retina屏幕为40px）。默认值是default。<br><strong>兼容性</strong><br>iOS 2.1 +</p><h1 id="设置缓存"><a href="#设置缓存" class="headerlink" title="设置缓存"></a>设置缓存</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=“Cache-Control” content=“no-cache” /&gt;</span><br></pre></td></tr></table></figure><p>手机页面通常在第一次加载后会进行缓存，然后每次刷新会使用缓存而不是去重新向服务器发送请求。如果不希望使用缓存可以设置no-cache。</p><h1 id="桌面图标"><a href="#桌面图标" class="headerlink" title="桌面图标"></a>桌面图标</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=“apple-touch-icon” href=“touch-icon-iphone.png” /&gt;</span><br><span class="line">&lt;link rel=“apple-touch-icon” sizes=“76x76” href=“touch-icon-ipad.png” /&gt;</span><br><span class="line">&lt;link rel=“apple-touch-icon” sizes=“120x120” href=“touch-icon-iphone-retina.png” /&gt;</span><br><span class="line">&lt;link rel=“apple-touch-icon” sizes=“152x152” href=“touch-icon-ipad-retina.png” /&gt;</span><br></pre></td></tr></table></figure>                </div>            </div><p>iOS下针对不同设备定义不同的桌面图标。如果不定义则以当前屏幕截图作为图标。<br>上面的写法可能大家会觉得会有默认光泽，下面这种设置方法可以去掉光泽效果，还原设计图的效果！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=“apple-touch-icon-precomposed” href=“touch-icon-iphone.png” /&gt;</span><br></pre></td></tr></table></figure><p>图片尺寸可以设定为57<em>57（px）或者Retina可以定为114</em>114（px），ipad尺寸为72*72（px)</p><h1 id="启动画面"><a href="#启动画面" class="headerlink" title="启动画面"></a>启动画面</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=“apple-touch-startup-image” href=“start.png”/&gt;</span><br></pre></td></tr></table></figure><p>iOS下页面启动加载时显示的画面图片，避免加载时的白屏。<br>可以通过madia来指定不同的大小：</p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!–iPhone–&gt;</span><br><span class="line">&lt;link href=“apple-touch-startup-image-320x460.png” media=“(device-width: 320px)” rel=“apple-touch-startup-image” /&gt;</span><br><span class="line">&lt;!– iPhone Retina –&gt;</span><br><span class="line">&lt;link href=“apple-touch-startup-image-640x920.png” media=“(device-width: 320px) and (-webkit-device-pixel-ratio: 2)” rel=“apple-touch-startup-image” /&gt;</span><br><span class="line">&lt;!– iPhone 5 –&gt;</span><br><span class="line">&lt;link rel=“apple-touch-startup-image” media=“(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)” href=“apple-touch-startup-image-640x1096.png”&gt;</span><br><span class="line">&lt;!– iPad portrait –&gt;</span><br><span class="line">&lt;link href=“apple-touch-startup-image-768x1004.png” media=“(device-width: 768px) and (orientation: portrait)” rel=“apple-touch-startup-image” /&gt;</span><br><span class="line">&lt;!– iPad landscape –&gt;</span><br><span class="line">&lt;link href=“apple-touch-startup-image-748x1024.png” media=“(device-width: 768px) and (orientation: landscape)” rel=“apple-touch-startup-image” /&gt;</span><br><span class="line">&lt;!– iPad Retina portrait –&gt;</span><br><span class="line">&lt;link href=“apple-touch-startup-image-1536x2008.png” media=“(device-width: 1536px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 2)” rel=“apple-touch-startup-image” /&gt;</span><br><span class="line"></span><br><span class="line">&lt;!– iPad Retina landscape –&gt;</span><br><span class="line">&lt;link href=“apple-touch-startup-image-1496x2048.png”media=“(device-width: 1536px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 2)”rel=“apple-touch-startup-image” /&gt;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="浏览器私有及其它meta"><a href="#浏览器私有及其它meta" class="headerlink" title="浏览器私有及其它meta"></a>浏览器私有及其它meta</h1><p>以下属性在项目中没有应用过，可以写一个demo测试以下！<br><strong>QQ浏览器私有</strong><br>全屏模式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=“x5-fullscreen” content=“true”&gt;</span><br></pre></td></tr></table></figure><p>强制竖屏</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=“x5-orientation” content=“portrait”&gt;</span><br></pre></td></tr></table></figure><p>强制横屏</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=“x5-orientation” content=“landscape”&gt;</span><br></pre></td></tr></table></figure><p>应用模式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=“x5-page-mode” content=“app”&gt;</span><br></pre></td></tr></table></figure><p><strong>UC浏览器私有</strong><br>全屏模式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=“full-screen” content=“yes”&gt;</span><br></pre></td></tr></table></figure><p>强制竖屏</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=“screen-orientation” content=“portrait”&gt;</span><br></pre></td></tr></table></figure><p>强制横屏</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=“screen-orientation” content=“landscape”&gt;</span><br></pre></td></tr></table></figure><p>应用模式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=“browsermode” content=“application”&gt;</span><br></pre></td></tr></table></figure><p><strong>其它</strong><br>针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=“HandheldFriendly” content=“true”&gt;</span><br></pre></td></tr></table></figure><p>微软的老式浏览器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=“MobileOptimized” content=“320”&gt;</span><br></pre></td></tr></table></figure><p>windows phone 点击无高光</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=“msapplication-tap-highlight” content=“no”&gt;</span><br></pre></td></tr></table></figure><h1 id="IOS中input键盘事件keyup、keydown、keypress支持不是很好"><a href="#IOS中input键盘事件keyup、keydown、keypress支持不是很好" class="headerlink" title="IOS中input键盘事件keyup、keydown、keypress支持不是很好"></a>IOS中input键盘事件keyup、keydown、keypress支持不是很好</h1><p>问题是这样的，用input search做模糊搜索的时候，在键盘里面输入关键词，会通过ajax后台查询，然后返回数据，然后再对返回的数据进行关键词标红。用input监听键盘keyup事件，在安卓手机浏览器中是可以的，但是在ios手机浏览器中变红很慢，用输入法输入之后，并未立刻相应keyup事件，只有在通过删除之后才能相应！<br><strong>解决办法：</strong><br>可以用html5的oninput事件去代替keyup</p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=“text” id=“testInput”&gt;</span><br><span class="line">&lt;script type=“text/javascript”&gt;</span><br><span class="line">    document.getElementById(‘testInput’).addEventListener(‘input’, function(e)&#123;</span><br><span class="line">        var value = e.target.value;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>                </div>            </div><p>然后就达到类似keyup的效果！</p><h1 id="h5网站input-设置为type-number的问题"><a href="#h5网站input-设置为type-number的问题" class="headerlink" title="h5网站input 设置为type=number的问题"></a>h5网站input 设置为type=number的问题</h1><p>h5网页input 的type设置为number一般会产生三个问题，一个问题是maxlength属性不好用了。另外一个是form提交的时候，默认给取整了。三是部分安卓手机出现样式问题。</p><p><strong>问题一解决，我目前用的是js。如下</strong></p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;number&quot;  oninput=&quot;checkTextLength(this ,10)&quot;&gt;</span><br><span class="line"></span><br><span class="line">function checkTextLength(obj, length) &#123;</span><br><span class="line">           if(obj.value.length &gt; length)   &#123;</span><br><span class="line">               obj.value = obj.value.substr(0, length);</span><br><span class="line">           &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><p><strong>问题二，是因为form提交默认做了表单验证，step默认是1,要设置step属性，假如保留2位小数，写法如下：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;number&quot; step=&quot;0.01&quot;  /&gt;</span><br></pre></td></tr></table></figure><p>关于step，我在这里做简单的介绍，input 中type=number，一般会自动生成一个上下箭头，点击上箭头默认增加一个step，点击下箭头默认会减少一个step。number中默认step是1。也就是step=0.01,可以允许输入2位小数，并且点击上下箭头分别增加0.01和减少0.01。<br>假如step和min一起使用，那么数值必须在min和max之间。<br>看下面的例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;number&quot; step=&quot;3.1&quot; min=&quot;1&quot; /&gt;</span><br></pre></td></tr></table></figure><p>输入框可以输入哪些数字？<br>首先，最小值是1，那么可以输入1.0，第二个是可以输入（1+3.1）那就是4.1,以此类推，每次点击上下箭头都会增加或者减少3.1，输入其他数字无效。这就是step的简单介绍。<br><strong>问题三，去除input默认样式</strong></p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">input[type=number] &#123;</span><br><span class="line">    -moz-appearance:textfield;</span><br><span class="line">&#125;</span><br><span class="line">input[type=number]::-webkit-inner-spin-button,</span><br><span class="line">input[type=number]::-webkit-outer-spin-button &#123;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">    margin: 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="ios-设置input-按钮样式会被默认样式覆盖"><a href="#ios-设置input-按钮样式会被默认样式覆盖" class="headerlink" title="ios 设置input 按钮样式会被默认样式覆盖"></a>ios 设置input 按钮样式会被默认样式覆盖</h1><p>解决方式如下：</p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">input,</span><br><span class="line">textarea &#123;</span><br><span class="line">    border: 0;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><p>设置默认样式为none</p><h1 id="IOS键盘字母输入，默认首字母大写"><a href="#IOS键盘字母输入，默认首字母大写" class="headerlink" title="IOS键盘字母输入，默认首字母大写"></a>IOS键盘字母输入，默认首字母大写</h1><p>解决方案，设置如下属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; autocapitalize=&quot;off&quot; /&gt;</span><br></pre></td></tr></table></figure><h1 id="select-下拉选择设置右对齐"><a href="#select-下拉选择设置右对齐" class="headerlink" title="select 下拉选择设置右对齐"></a>select 下拉选择设置右对齐</h1><p>设置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select option &#123;</span><br><span class="line">direction: rtl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="通过transform进行skew变形，rotate旋转会造成出现锯齿现象"><a href="#通过transform进行skew变形，rotate旋转会造成出现锯齿现象" class="headerlink" title="通过transform进行skew变形，rotate旋转会造成出现锯齿现象"></a>通过transform进行skew变形，rotate旋转会造成出现锯齿现象</h1><p>可以设置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-webkit-transform: rotate(-4deg) skew(10deg) translateZ(0);</span><br><span class="line">    transform: rotate(-4deg) skew(10deg) translateZ(0);</span><br><span class="line">    outline: 1px solid rgba(255,255,255,0)</span><br></pre></td></tr></table></figure><h2 id="移动端点击300ms延迟"><a href="#移动端点击300ms延迟" class="headerlink" title="移动端点击300ms延迟"></a>移动端点击300ms延迟</h2><p>300ms尚可接受，不过因为300ms产生的问题，我们必须要解决。300ms导致用户体验并不是很好，解决这个问题，我们一般在移动端用tap事件来取代click事件。<br>推荐两个js，一个是<a href="https://github.com/ftlabs/fastclick">fastclick</a>，一个是<a href="https://github.com/alexgibson/tap.js">tap.js</a><br>关于300ms延迟，具体请看：<a href="http://thx.github.io/mobile/300ms-click-delay/">http://thx.github.io/mobile/300ms-click-delay/</a></p><h2 id="移动端点透问题"><a href="#移动端点透问题" class="headerlink" title="移动端点透问题"></a>移动端点透问题</h2><p>案例如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;haorooms&quot;&gt;点头事件测试&lt;/div&gt;</span><br><span class="line">&lt;a href=&quot;www.haorooms.com&quot;&gt;www.haorooms.com&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>div是绝对定位的蒙层,并且z-index高于a。而a标签是页面中的一个链接，我们给div绑定tap事件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(&#x27;#haorooms&#x27;).on(&#x27;tap&#x27;,function()&#123;</span><br><span class="line">$(&#x27;#haorooms&#x27;).hide();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>我们点击蒙层时 div正常消失，但是当我们在a标签上点击蒙层时，发现a链接被触发，这就是所谓的点透事件。</p><p><strong>原因：</strong></p><blockquote><p>touchstart 早于 touchend 早于click。<br>亦即click的触发是有延迟的，这个时间大概在300ms左右，也就是说我们tap触发之后蒙层隐藏，<br>此时 click还没有触发，300ms之后由于蒙层隐藏，我们的click触发到了下面的a链接上。</p></blockquote><p><strong>解决：</strong></p><blockquote><p>1、 尽量都使用touch事件来替换click事件。例如用touchend事件(推荐)。<br>2、用fastclick，<a href="https://github.com/ftlabs/fastclick">https://github.com/ftlabs/fastclick</a><br>3 、用preventDefault阻止a标签的click<br>4、延迟一定的时间(300ms+)来处理事件 （不推荐）<br>5、以上一般都能解决，实在不行就换成click事件。</p></blockquote><p>下面介绍一下touchend事件，如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#haorooms&quot;).on(&quot;touchend&quot;, function (event) &#123;</span><br><span class="line">     event.preventDefault();</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><h1 id="消除-IE10-里面的那个叉号"><a href="#消除-IE10-里面的那个叉号" class="headerlink" title="消除 IE10 里面的那个叉号"></a>消除 IE10 里面的那个叉号</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">input:-ms-clear&#123;display:none;&#125;</span><br></pre></td></tr></table></figure><h1 id="关于-iOS-与-OS-X-端字体的优化-横竖屏会出现字体加粗不一致等"><a href="#关于-iOS-与-OS-X-端字体的优化-横竖屏会出现字体加粗不一致等" class="headerlink" title="关于 iOS 与 OS X 端字体的优化(横竖屏会出现字体加粗不一致等)"></a>关于 iOS 与 OS X 端字体的优化(横竖屏会出现字体加粗不一致等)</h1><p>iOS 浏览器横屏时会重置字体大小，设置 text-size-adjust 为 none 可以解决 iOS 上的问题，但桌面版 Safari 的字体缩放功能会失效，因此最佳方案是将 text-size-adjust 为 100% 。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-webkit-text-size-adjust: 100%;</span><br><span class="line">-ms-text-size-adjust: 100%;</span><br><span class="line">text-size-adjust: 100%;</span><br></pre></td></tr></table></figure><h1 id="关于-iOS-系统中，中文输入法输入英文时，字母之间可能会出现一个六分之一空格"><a href="#关于-iOS-系统中，中文输入法输入英文时，字母之间可能会出现一个六分之一空格" class="headerlink" title="关于 iOS 系统中，中文输入法输入英文时，字母之间可能会出现一个六分之一空格"></a>关于 iOS 系统中，中文输入法输入英文时，字母之间可能会出现一个六分之一空格</h1><p>可以通过正则去掉</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.value = this.value.replace(/\u2006/g, &#x27;&#x27;);</span><br></pre></td></tr></table></figure><h1 id="移动端-HTML5-audio-autoplay-失效问题"><a href="#移动端-HTML5-audio-autoplay-失效问题" class="headerlink" title="移动端 HTML5 audio autoplay 失效问题"></a>移动端 HTML5 audio autoplay 失效问题</h1><p>这个不是 BUG，由于自动播放网页中的音频或视频，会给用户带来一些困扰或者不必要的流量消耗，所以苹果系统和安卓系统通常都会禁止自动播放和使用 JS 的触发播放，必须由用户来触发才可以播放。<br>解决方法思路：先通过用户 touchstart 触碰，触发播放并暂停（音频开始加载，后面用 JS 再操作就没问题了）。<br>解决代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">document.addEventListener(&#x27;touchstart&#x27;, function () &#123;</span><br><span class="line">    document.getElementsByTagName(&#x27;audio&#x27;)[0].play();</span><br><span class="line">    document.getElementsByTagName(&#x27;audio&#x27;)[0].pause();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="移动端-HTML5-input-date-不支持-placeholder-问题"><a href="#移动端-HTML5-input-date-不支持-placeholder-问题" class="headerlink" title="移动端 HTML5 input date 不支持 placeholder 问题"></a>移动端 HTML5 input date 不支持 placeholder 问题</h1><p>这个我感觉没有什么好的解决方案，用如下方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input placeholder=&quot;Date&quot; class=&quot;textbox-n&quot; type=&quot;text&quot; onfocus=&quot;(this.type=&#x27;date&#x27;)&quot;  id=&quot;date&quot;&gt;</span><br></pre></td></tr></table></figure><p>有的浏览器可能要点击两遍！</p><h1 id="部分机型存在type为search的input，自带close按钮样式修改方法"><a href="#部分机型存在type为search的input，自带close按钮样式修改方法" class="headerlink" title="部分机型存在type为search的input，自带close按钮样式修改方法"></a>部分机型存在type为search的input，自带close按钮样式修改方法</h1><p>有些机型的搜索input控件会自带close按钮（一个伪元素），而通常为了兼容所有浏览器，我们会自己实现一个，此时去掉原生close按钮的方法为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#Search::-webkit-search-cancel-button&#123;</span><br><span class="line">    display: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果想使用原生close按钮，又想使其符合设计风格，可以对这个伪元素的样式进行修改。</p><p>美化的话，请看<a href="http://www.haorooms.com/post/qd_ghfx">http://www.haorooms.com/post/qd_ghfx</a> 这篇文章的第五条！</p><h1 id="唤起select的option展开"><a href="#唤起select的option展开" class="headerlink" title="唤起select的option展开"></a>唤起select的option展开</h1><p>zepto方式:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(sltElement).trrgger(&quot;mousedown&quot;);</span><br></pre></td></tr></table></figure><p>原生js方式:</p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function showDropdown(sltElement) &#123;</span><br><span class="line">    var event;</span><br><span class="line">    event = document.createEvent(&#x27;MouseEvents&#x27;);</span><br><span class="line">    event.initMouseEvent(&#x27;mousedown&#x27;, true, true, window);</span><br><span class="line">    sltElement.dispatchEvent(event);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="让Chrome支持小于12px的文字"><a href="#让Chrome支持小于12px的文字" class="headerlink" title="让Chrome支持小于12px的文字"></a>让Chrome支持小于12px的文字</h1><p>我们的做法是：针对谷歌浏览器内核，加webkit前缀，用transform:scale()这个属性进行缩放！</p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">p span&#123;font-size:10px;-webkit-transform:scale(0.8);display:block;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;p&gt;&lt;span&gt;haorooms博客测试10px&lt;/span&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="IOS手机浏览器字体齿轮"><a href="#IOS手机浏览器字体齿轮" class="headerlink" title="IOS手机浏览器字体齿轮"></a>IOS手机浏览器字体齿轮</h1><p>修改-webkit-font-smoothing属性，结果是：</p><blockquote><p>-webkit-font-smoothing: none: 无抗锯齿<br>-webkit-font-smoothing: antialiased | subpixel-antialiased | default: 灰度平滑</p></blockquote><h1 id="修改chrome记住密码后自动填充表单的黄色背景"><a href="#修改chrome记住密码后自动填充表单的黄色背景" class="headerlink" title="修改chrome记住密码后自动填充表单的黄色背景"></a>修改chrome记住密码后自动填充表单的黄色背景</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">input:-webkit-autofill &#123;</span><br><span class="line">background-color: #FAFFBD;</span><br><span class="line">background-image: none;</span><br><span class="line">color: #000;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="input-type-search-搜索框右侧小图标美化"><a href="#input-type-search-搜索框右侧小图标美化" class="headerlink" title="input [type=search] 搜索框右侧小图标美化"></a>input [type=search] 搜索框右侧小图标美化</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">input[type=&quot;search&quot;]::-webkit-search-cancel-button&#123;</span><br><span class="line">-webkit-appearance: none;height: 15px; width: 15px;border-radius: 8px;</span><br><span class="line">background:url(&quot;images/searchicon.png&quot;) no-repeat 0 0;background-size: 15px 15px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="iOS-safari阻止“橡皮筋效果”"><a href="#iOS-safari阻止“橡皮筋效果”" class="headerlink" title="iOS safari阻止“橡皮筋效果”"></a>iOS safari阻止“橡皮筋效果”</h1><p>可以参考一下知乎上的回答 <a href="https://www.zhihu.com/question/22256539">https://www.zhihu.com/question/22256539</a> 。</p><p>但是，我们遇到的问题不是这样，我是要解决弹跳导致弹出层（position:absolute）的覆盖层高度小于100%;<br>针对这个问题，我想到的解决方案如下：<br>方法一：<br>把position:absolute改成position:fixed，并在弹出层之后，设置body的高度是100%；overflow是hidden。<br>方法二：<br>思路是获取苹果浏览器导航栏的高度。然后滚动的时候，重新获取其高度。在导航栏高度变小的时候，给弹出层增加高度的百分比！<br>代码如下：</p><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//ios safari 伸缩判断</span><br><span class="line">      var topbarHeight=window.outerHeight-window.innerHeight,agent=navigator.userAgent,globleflag=true;</span><br><span class="line">        $(window).scroll(function () &#123;</span><br><span class="line">           if(agent.indexOf(&quot;iPhone&quot;)!=-1 || agent.indexOf(&quot;iPad&quot;)!=-1)&#123;</span><br><span class="line">                var topbarHeightNow=window.outerHeight-window.innerHeight;</span><br><span class="line">                if(topbarHeightNow&lt;topbarHeight)&#123;</span><br><span class="line">                    globleflag=false</span><br><span class="line">                     //此处写处理逻辑</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                 globleflag=true</span><br><span class="line">                    //此处写处理逻辑</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure>                </div>            </div><p>本文转载，原文地址：<a href="http://www.haorooms.com/post/touchweb_commonquestion">http://www.haorooms.com/post/touchweb_commonquestion</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;对于手机网站建设，总结了如下注意：&lt;/p&gt;</summary>
    
    
    
    <category term="移动端" scheme="https://zuitaibai.gitee.io/blog/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
    
    <category term="移动端" scheme="https://zuitaibai.gitee.io/blog/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>特殊符号</title>
    <link href="https://zuitaibai.gitee.io/blog/2016/06/12/Html-2016-06-12-%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7/"/>
    <id>https://zuitaibai.gitee.io/blog/2016/06/12/Html-2016-06-12-%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7/</id>
    <published>2016-06-12T08:39:43.000Z</published>
    <updated>2016-06-12T08:39:43.000Z</updated>
    
    <content type="html"><![CDATA[<p><font size="4">❤ ❥ 웃 유 ♋ ☮ ✌ ☏ ☢ ☠ ✔ ☑ ♚ ▲ ♪ ✈ ✞ ÷ ↑ ↓ ◆ ◇ ⊙ ■ □ △ ▽ ¿ ─ │ ♥ ❣ ♂ ♀ ☿ Ⓐ ✍ ✉ ☣ ☤ ✘ ☒ ♛ ▼ ♫ ⌘ ☪ ≈ ← → ◈ ◎ ☉ ★ ☆ ⊿ ※ ¡ ━ ┃ ♡ ღ ツ ☼ ☁ ❅ ♒ ✎ © ® ™ Σ ✪ ✯ ☭ ➳ 卐 √ ↖ ↗ ● ◐ Θ ◤ ◥ ︻ 〖 〗 ┄ ┆ ℃ ℉ ° ✿ ϟ ☃ ☂ ✄ ¢ € £ ∞ ✫ ★ ½ ✡ × ↙ ↘ ○ ◑ ⊕ ◣ ◢ ︼ 【 】 ┅ ┇ ☽ ☾ ✚ 〓 ▂ ▃ ▄ ▅ ▆ ▇ █ ▉ ▊ ▋ ▌ ▍ ▎ ▏ ↔ ↕ ☽ ☾ の • ▸ ◂ ▴ ▾ ┈ ┊ ① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ Ⅰ Ⅱ Ⅲ Ⅳ Ⅴ Ⅵ Ⅶ Ⅷ Ⅸ Ⅹ ㍿ ▓ ♨ ♛ ❖ ♓ ☪ ✙ ┉ ┋ ☹ ☺ ☻ ت ヅ ツ ッ シ Ü ϡ ﭢ ™ ℠ ℗ © ® ♥ ❤ ❥ ❣ ❦ ❧ ♡ ۵ 웃 유 ღ ♋ ♂ ♀ ☿ ☼ ☀ ☁ ☂ ☄ ☾ ☽ ❄ ☃ ☈ ⊙ ☉ ℃ ℉ ❅ ✺ ϟ ☇ ♤ ♧ ♡ ♢ ♠ ♣ ♥ ♦ ☜ ☞ ☝ ✍ ☚ ☛ ☟ ✌ ✽ ✾ ✿ ❁ ❃ ❋ ❀ ⚘ ☑ ✓ ✔ √ ☐ ☒ ✗ ✘ ㄨ ✕ ✖ ✖ ⋆ ✢ ✣ ✤ ✥ ❋ ✦ ✧ ✩ ✰ ✪ ✫ ✬ ✭ ✮ ✯ ❂ ✡ ★ ✱ ✲ ✳ ✴ ✵ ✶ ✷ ✸ ✹ ✺ ✻ ✼ ❄ ❅ ❆ ❇ ❈ ❉ ❊ † ☨ ✞ ✝ ☥ ☦ ☓ ☩ ☯ ☧ ☬ ☸ ✡ ♁ ✙ ♆ 。 ， 、 ＇ ： ∶ ； ? ‘ ’ “ ” 〝 〞 ˆ ˇ ﹕ ︰ ﹔ ﹖ ﹑ • ¨ … . ¸ ; ！ ´ ？ ！ ～ — ˉ ｜ ‖ ＂ 〃 ｀ @ ﹫ ¡ ¿ ﹏ ﹋ ﹌ ︴ 々 ﹟ # ﹩ $ ﹠ &amp; ﹪ % * ﹡ ﹢ ﹦ ﹤ ‐ ￣ ¯ ― ﹨ ˆ ˜ ﹍ ﹎ + = &lt; ＿ _ - \ ˇ ~ ﹉ ﹊ （ ） 〈 〉 ‹ › ﹛ ﹜ 『 』 〖 〗 ［ ］ 《 》 〔 〕 { } 「 」 【 】 ︵ ︷ ︿ ︹ ︽ _ ﹁ ﹃ ︻ ︶ ︸ ﹀ ︺ ︾ ˉ ﹂ ﹄ ︼ ☩ ☨ ☦ ✞ ✛ ✜ ✝ ✙ ✠ ✚ † ‡ ◉ ○ ◌ ◍ ◎ ● ◐ ◑ ◒ ◓ ◔ ◕ ◖ ◗ ❂ ☢ ⊗ ⊙ ◘ ◙ ◍ ⅟ ½ ⅓ ⅕ ⅙ ⅛ ⅔ ⅖ ⅚ ⅜ ¾ ⅗ ⅝ ⅞ ⅘ ≂ ≃ ≄ ≅ ≆ ≇ ≈ ≉ ≊ ≋ ≌ ≍ ≎ ≏ ≐ ≑ ≒ ≓ ≔ ≕ ≖ ≗ ≘ ≙ ≚ ≛ ≜ ≝ ≞ ≟ ≠ ≡ ≢ ≣ ≤ ≥ ≦ ≧ ≨ ≩ ⊰ ⊱ ⋛ ⋚ ∫ ∬ ∭ ∮ ∯ ∰ ∱ ∲ ∳ % ℅ ‰ ‱ ㊣ ㊎ ㊍ ㊌ ㊋ ㊏ ㊐ ㊊ ㊚ ㊛ ㊤ ㊥ ㊦ ㊧ ㊨ ㊒ ㊞ ㊑ ㊒ ㊓ ㊔ ㊕ ㊖ ㊗ ㊘ ㊜ ㊝ ㊟ ㊠ ㊡ ㊢ ㊩ ㊪ ㊫ ㊬ ㊭ ㊮ ㊯ ㊰ ㊙ ㉿ 囍 ♔ ♕ ♖ ♗ ♘ ♙ ♚ ♛ ♜ ♝ ♞ ♟ ℂ ℍ ℕ ℙ ℚ ℝ ℤ ℬ ℰ ℯ ℱ ℊ ℋ ℎ ℐ ℒ ℓ ℳ ℴ ℘ ℛ ℭ ℮ ℌ ℑ ℜ ℨ ♪ ♫ ♩ ♬ ♭ ♮ ♯ ° ø Ⓐ ☮ ✌ ☪ ✡ ☭ ✯ 卐 ✐ ✎ ✏ ✑ ✒ ✍ ✉ ✁ ✂ ✃ ✄ ✆ ✉ ☎ ☏ ➟ ➡ ➢ ➣ ➤ ➥ ➦ ➧ ➨ ➚ ➘ ➙ ➛ ➜ ➝ ➞ ➸ ♐ ➲ ➳ ⏎ ➴ ➵ ➶ ➷ ➸ ➹ ➺ ➻ ➼ ➽ ← ↑ → ↓ ↔ ↕ ↖ ↗ ↘ ↙ ↚ ↛ ↜ ↝ ↞ ↟ ↠ ↡ ↢ ↣ ↤ ↥ ↦ ↧ ↨ ➫ ➬ ➩ ➪ ➭ ➮ ➯ ➱ ↩ ↪ ↫ ↬ ↭ ↮ ↯ ↰ ↱ ↲ ↳ ↴ ↵ ↶ ↷ ↸ ↹ ↺ ↻ ↼ ↽ ↾ ↿ ⇀ ⇁ ⇂ ⇃ ⇄ ⇅ ⇆ ⇇ ⇈ ⇉ ⇊ ⇋ ⇌ ⇍ ⇎ ⇏ ⇐ ⇑ ⇒ ⇓ ⇔ ⇕ ⇖ ⇗ ⇘ ⇙ ⇚ ⇛ ⇜ ⇝ ⇞ ⇟ ⇠ ⇡ ⇢ ⇣ ⇤ ⇥ ⇦ ⇧ ⇨ ⇩ ⇪ ➀ ➁ ➂ ➃ ➄ ➅ ➆ ➇ ➈ ➉ ➊ ➋ ➌ ➍ ➎ ➏ ➐ ➑ ➒ ➓ ㊀ ㊁ ㊂ ㊃ ㊄ ㊅ ㊆ ㊇ ㊈ ㊉ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ Ⅰ Ⅱ Ⅲ Ⅳ Ⅴ Ⅵ Ⅶ Ⅷ Ⅸ Ⅹ Ⅺ Ⅻ Ⅼ Ⅽ Ⅾ Ⅿ ⅰ ⅱ ⅲ ⅳ ⅴ ⅵ ⅶ ⅷ ⅸ ⅹ ⅺ ⅻ ⅼ ⅽ ⅾ ⅿ ┌ ┍ ┎ ┏ ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟ ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯ ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿ ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏ ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟ ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ◤ ◥ ◄ ► ▶ ◀ ◣ ◢ ▲ ▼ ◥ ▸ ◂ ▴ ▾ △ ▽ ▷ ◁ ⊿ ▻ ◅  ▵ ▿ ▹ ◃ ❏ ❐ ❑ ❒ ▀ ▁▂▃▄▅▆▇▉▊▋█▌ ▍▎▏▐░▒▓▔▕■□▢▣▤▥▦▧▨▩ ▪ ▫ ▬ ▭ ▮ ▯ ㋀ ㋁ ㋂ ㋃ ㋄ ㋅ ㋆ ㋇ ㋈ ㋉ ㋊ ㋋ ㏠ ㏡ ㏢ ㏣ ㏤ ㏥ ㏦ ㏧ ㏨ ㏩ ㏪ ㏫ ㏬ ㏭ ㏮ ㏯ ㏰ ㏱ ㏲ ㏳ ㏴ ㏵ ㏶ ㏷ ㏸ ㏹ ㏺ ㏻ ㏼ ㏽ ㏾ ㍙ ㍚ ㍛ ㍜ ㍝ ㍞ ㍟ ㍠ ㍡ ㍢ ㍣ ㍤ ㍥ ㍦ ㍧ ㍨ ㍩ ㍪ ㍫ ㍬ ㍭ ㍮ ㍯ ㍰ ㍘ ☰ ☲ ☱ ☴ ☵ ☶ ☳ ☷ ☯</font></p><span id="more"></span><hr><h3 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h3><p><font size="4">♠ ♣ ♧ ♡ ♥ ❤ ❥ ❣ ♂ ♀ ✲ ☀ ☼ ☾ ☽ ◐ ◑ ☺ ☻ ☎ ☏ ✿ ❀ № ↑ ↓ ← → √ × ÷ ★ ℃ ℉ ° ◆ ◇ ⊙ ■ □ △ ▽ ¿ ½ ☯ ✡ ㍿ 卍 卐 ♂ ♀ ✚ 〓 ㎡ ♪ ♫ ♩ ♬ ㊚ ㊛ 囍 ㊒ ㊖ Φ ♀ ♂ ‖ $ @ * &amp; # ※ 卍 卐 Ψ ♫ ♬ ♭ ♩ ♪ ♯ ♮ ⌒ ¶ ∮ ‖ € ￡ ¥ $</font></p><h3 id="编号序号"><a href="#编号序号" class="headerlink" title="编号序号"></a>编号序号</h3><p><font size="4">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ⓪ ❶ ❷ ❸ ❹ ❺ ❻ ❼ ❽ ❾ ❿ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ㊀ ㊁ ㊂ ㊃ ㊄ ㊅ ㊆ ㊇ ㊈ ㊉ ㈠ ㈡ ㈢ ㈣ ㈤ ㈥ ㈦ ㈧ ㈨ ㈩ ⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ ⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ Ⅰ Ⅱ Ⅲ Ⅳ Ⅴ Ⅵ Ⅶ Ⅷ Ⅸ Ⅹ Ⅺ Ⅻ ⅰ ⅱ ⅲ ⅳ ⅴ ⅵ ⅶ ⅷ ⅸ ⅹ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵</font></p><h3 id="数学符号"><a href="#数学符号" class="headerlink" title="数学符号"></a>数学符号</h3><p><font size="4">﹢ ﹣ × ÷ ± / = ≌ ∽ ≦ ≧ ≒ ﹤ ﹥ ≈ ≡ ≠ = ≤ ≥ &lt; &gt; ≮ ≯ ∷ ∶ ∫ ∮ ∝ ∞ ∧ ∨ ∑ ∏ ∪ ∩ ∈ ∵ ∴ ⊥ ∥ ∠ ⌒ ⊙ √ ∟ ⊿ ㏒ ㏑ % ‰ ⅟ ½ ⅓ ⅕ ⅙ ⅛ ⅔ ⅖ ⅚ ⅜ ¾ ⅗ ⅝ ⅞ ⅘ ≂ ≃ ≄ ≅ ≆ ≇ ≈ ≉ ≊ ≋ ≌ ≍ ≎ ≏ ≐ ≑ ≒ ≓ ≔ ≕ ≖ ≗ ≘ ≙ ≚ ≛ ≜ ≝ ≞ ≟ ≠ ≡ ≢ ≣ ≤ ≥ ≦ ≧ ≨ ≩ ⊰ ⊱ ⋛ ⋚ ∫ ∬ ∭ ∮ ∯ ∰ ∱ ∲ ∳ % ℅ ‰ ‱ ø Øπ</font></p><h3 id="爱心符号"><a href="#爱心符号" class="headerlink" title="爱心符号"></a>爱心符号</h3><p><font size="4">♥ ❣ ღ ♠ ♡ ♤ ❤ ❥</font></p><h3 id="标点符号"><a href="#标点符号" class="headerlink" title="标点符号"></a>标点符号</h3><p><font size="4">。 ， 、 ＇ ： ∶ ； ? ‘ ’ “ ” 〝 〞 ˆ ˇ ﹕ ︰ ﹔ ﹖ ﹑ • ¨ … . ¸ ; ！ ´ ？ ！ ～ — ˉ ｜ ‖ ＂ 〃 ｀ @ ﹫ ¡ ¿ ﹏ ﹋ ﹌︴ 々 ﹟ # ﹩ $ ﹠ &amp; ﹪ % * ﹡ ﹢ ﹦ ﹤ ‐ ￣ ¯ ― ﹨ ˆ ˜ ﹍ ﹎ += &lt; ＿ _ - \ ˇ ~ ﹉﹊ （ ） 〈  〉 ‹ › ﹛ ﹜ 『 』 〖 〗 ［ ］ 《 》 〔 〕 { } 「 」 【 】 ︵ ︷ ︿ ︹ ︽ _ ﹁ ﹃ ︻ ︶ ︸ ﹀ ︺ ︾ ˉ ﹂ ﹄ ︼ ❝ ❞</font></p><h3 id="单位符号"><a href="#单位符号" class="headerlink" title="单位符号"></a>单位符号</h3><p><font size="4">° ′ ″ ＄ ￥ 〒 ￠ ￡ ％ ＠ ℃ ℉ ﹩ ﹪ ‰ ﹫ ㎡ ㏕ ㎜ ㎝ ㎞ ㏎ m³ ㎎ ㎏ ㏄ º ○ ¤ % $ º ¹ ² ³</font></p><h3 id="货币符号"><a href="#货币符号" class="headerlink" title="货币符号"></a>货币符号</h3><p><font size="4">€ £ Ұ ₴ $ ₰ ¢ ₤ ¥ ₳ ₲ ₪ ₵ 元 ₣ ₱ ฿ ¤ ₡ ₮ ₭ ₩ ރ 円 ₢ ₥ ₫ ₦ z ł ﷼ ₠ ₧ ₯ ₨ K č र ₹ ƒ ₸ ￠</font></p><h3 id="箭头符号"><a href="#箭头符号" class="headerlink" title="箭头符号"></a>箭头符号</h3><p><font size="4">↑ ↓ ← → ↖ ↗ ↘ ↙ ↔ ↕ ➻ ➼ ➽ ➸ ➳ ➺ ➻ ➴ ➵ ➶ ➷ ➹ ▶ ► ▷ ◁ ◀ ◄ « » ➩ ➪ ➫ ➬ ➭ ➮ ➯ ➱ ⏎ ➲ ➾ ➔ ➘ ➙ ➚ ➛ ➜ ➝ ➞ ➟ ➠ ➡ ➢ ➣ ➤ ➥ ➦ ➧ ➨ ↚ ↛ ↜ ↝ ↞ ↟ ↠ ↠ ↡ ↢ ↣ ↤ ↤ ↥ ↦ ↧ ↨ ⇄ ⇅ ⇆ ⇇ ⇈ ⇉ ⇊ ⇋ ⇌ ⇍ ⇎ ⇏ ⇐ ⇑ ⇒ ⇓ ⇔ ⇖ ⇗ ⇘ ⇙ ⇜ ↩ ↪ ↫ ↬ ↭ ↮ ↯ ↰ ↱ ↲ ↳ ↴ ↵ ↶ ↷ ↸ ↹ ☇ ☈ ↼ ↽ ↾ ↿ ⇀ ⇁  ⇂ ⇃ ⇞ ⇟ ⇠ ⇡ ⇢ ⇣ ⇤ ⇥ ⇦ ⇧ ⇨ ⇩ ⇪ ↺ ↻ ⇚ ⇛ ♐ </font></p><h3 id="符号图案"><a href="#符号图案" class="headerlink" title="符号图案"></a>符号图案</h3><p><font size="4">✐ ✎ ✏ ✑ ✒ ✍ ✉ ✁ ✂ ✃ ✄ ✆ ✉ ☎ ☏ ☑ ✓ ✔ √ ☐ ☒ ✗ ✘ ㄨ ✕ ✖ ✖ ☢ ☠ ☣ ✈ ★ ☆ ✡ 囍 ㍿ ☯ ☰ ☲ ☱ ☴ ☵ ☶ ☳ ☷ ☜ ☞ ☝ ✍ ☚ ☛ ☟ ✌ ♤ ♧ ♡ ♢ ♠ ♣ ♥ ♦ ☀ ☁ ☂ ❄ ☃ ♨ 웃 유 ❖ ☽ ☾ ☪ ✿ ♂ ♀ ✪ ✯ ☭ ➳ 卍 卐 √ × ■ ◆ ● ○ ◐ ◑ ✙ ☺ ☻ ❀ ⚘ ♔ ♕ ♖ ♗ ♘ ♙ ♚ ♛ ♜ ♝ ♞ ♟ ♧ ♡ ♂ ♀ ♠ ♣ ♥ ❤ ☜ ☞ ☎ ☏ ⊙ ◎ ☺ ☻ ☼ ▧ ▨ ♨ ◐ ◑ ↔ ↕ ▪ ▒ ◊ ◦ ▣ ▤ ▥ ▦ ▩ ◘ ◈ ◇ ♬ ♪ ♩ ♭ ♪ の ★ ☆ → あ ぃ ￡ Ю 〓 § ♤ ♥ ▶ ¤ ✲ ❈ ✿ ✲ ❈ ➹ ☀ ☂ ☁ 【 】 ┱ ┲ ❣ ✚ ✪ ✣ ✤ ✥ ✦ ❉ ❥ ❦ ❧ ❃ ❂ ❁ ❀ ✄ ☪ ☣ ☢ ☠ ☭ ღ ▶ ▷ ◀ ◁ ☀ ☁ ☂ ☃ ☄ ★ ☆ ☇ ☈ ⊙ ☊ ☋ ☌ ☍ ⓛ ⓞ ⓥ ⓔ ╬ 『 』 ∴ ☀ ♫ ♬ ♩ ♭ ♪ ☆ ∷ ﹌ の ★ ◎ ▶ ☺ ☻ ► ◄ ▧ ▨ ♨ ◐ ◑ ↔ ↕ ↘ ▀ ▄ █▌ ◦  ☼  ♪ の ☆ → ♧ ぃ ￡ ❤ ▒ ▬ ♦ ◊ ◦ ♠ ♣ ▣ ۰ • ❤ • ۰ ► ◄ ▧ ▨ ♨ ◐ ◑ ↔ ↕ ▪ ▫ ☼ ♦ ⊙ ● ○ ① ⊕ ◎ Θ ⊙ ¤ ㊣ ★ ☆ ♀ ◆ ◇ ◣ ◢ ◥ ▲ ▼ △ ▽ ⊿ ◤ ◥ ✐ ✌ ✍ ✡ ✓ ✔ ✕ ✖ ♂ ♀ ♥ ♡ ☜ ☞ ☎ ☏ ⊙ ◎ ☺ ☻ ► ◄ ▧ ▨ ♨ ◐ ◑ ↔ ↕ ♥ ♡ ▪ ▫ ☼ ♦ ▀ ▄█▌▐░▒▬ ♦ ◊ ◘◙ ◦ ☼ ♠ ♣ ▣ ▤ ▥ ▦ ▩ ◘ ◙ ◈ ♫ ♬ ♪ ♩ ♭ ♪ ✄ ☪ ☣ ☢ ☠ ♯ ♩ ♪ ♫ ♬ ♭ ♮ ☎ ☏ ☪ ♈ º º ₪ ¤ 큐 « » ™ ♂ ✿ ♥ 　 ◕‿- ｡ 　｡ ◕‿◕ ｡</font></p><h3 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h3><p><font size="4">Α Β Γ Δ Ε Ζ Η Θ Ι Κ Λ Μ Ν Ξ Ο Π Ρ Σ Τ Υ Φ Χ Ψ Ω α β γ δ ε ζ ν ξ ο π ρ σ η θ ι κ λ μ τ υ φ χ ψ ω</font></p><h3 id="俄语字母"><a href="#俄语字母" class="headerlink" title="俄语字母"></a>俄语字母</h3><p><font size="4">А Б В Г Д Е Ё Ж З И Й К Л М Н О П Р С Т У Ф Х Ц Ч Ш Щ Ъ Ы Ь Э Ю Я а б в г д е ё ж з и й к л м н о п р с т у ф х ц ч ш щ ъ ы ь э ю я</font></p><h3 id="汉语拼音"><a href="#汉语拼音" class="headerlink" title="汉语拼音"></a>汉语拼音</h3><p><font size="4">ā á ǎ à ō ó ǒ ò ē é ě è ī í ǐ ì ū ú ǔ ù ǖ ǘ ǚ ǜ ü ê ɑ  ń ň  ɡ ㄅ ㄆ ㄇ ㄈ ㄉ ㄊ ㄋ ㄌ ㄍ ㄎ ㄏ ㄐ ㄑ ㄒ ㄓ ㄔ ㄕ ㄖ ㄗ ㄘ ㄙ ㄚ ㄛ ㄜ ㄝ ㄞ ㄟ ㄠ ㄡ ㄢ ㄣ ㄤ ㄥ ㄦ ㄧ ㄨ ㄩ</font></p><h3 id="中文字符"><a href="#中文字符" class="headerlink" title="中文字符"></a>中文字符</h3><p><font size="4">零 壹 贰 叁 肆 伍 陆 柒 捌 玖 拾 佰 仟 万 亿 吉 太 拍 艾 分 厘 毫 微 卍 卐 卄 巜 弍 弎 弐 朤 氺 曱 甴 囍 兀 々 〆 の ぁ 〡 〢 〣 〤 〥 〦 〧 〨 〩 ㊎ ㊍ ㊌ ㊋ ㊏ ㊚ ㊛ ㊐ ㊊ ㊣ ㊤ ㊥ ㊦ ㊧ ㊨ ㊒ ㊫ ㊑ ㊓ ㊔ ㊕ ㊖ ㊗ ㊘ ㊜ ㊝ ㊞ ㊟ ㊠ ㊡ ㊢ ㊩ ㊪ ㊬ ㊭ ㊮ ㊯ ㊰ ㊀ ㊁ ㊂ ㊃ ㊄ ㊅ ㊆ ㊇ ㊈ ㊉</font></p><h3 id="日文平假名片假名"><a href="#日文平假名片假名" class="headerlink" title="日文平假名片假名"></a>日文平假名片假名</h3><p><font size="4">ぁ あ ぃ い  ぅ う ぇ え ぉ お か が き ぎ く ぐ け げ こ ご さ ざ し じ す ず せ ぜ そ ぞ た だ ち ぢ っ つ づ て で と ど な に ぬ ね の は ば ぱ ひ び ぴ ふ ぶ ぷ へ べ ぺ ほ ぼ ぽ ま み む め も ゃ や ゅ ゆ ょ よ ら り る れ ろ ゎ わ ゐ ゑ を ん ゔ ゕ ゖ ァ ア ィ イ ゥ ウ ェ エ ォ オ カ ガ キ ギ ク グ ケ ゲ コ ゴ サ ザ シ ジ ス ズ セ ゼ ソ ゾ タ ダ チ ヂ ッ ツ ヅ テ デ ト ド ナ ニ ヌ ネ ノ ハ バ パ ヒ ビ ピ フ ブ プ ヘ ベ ペ ホ ボ ポ マ ミ ム メ モ ャ ヤ ュ ユ ョ ヨ ラ リ ル レ ロ ヮ ワ ヰ ヱ ヲ ン ヴ ヵ ヶ ヷ ヸ ヹ ヺ ・ ー ヽ ヾ ヿ ゠ ㇰ ㇱ ㇲ ㇳ ㇴ ㇵ ㇶ ㇷ ㇸ ㇹ ㇺ ㇻ ㇼ ㇽ ㇾ ㇿ</font></p><h3 id="制表符"><a href="#制表符" class="headerlink" title="制表符"></a>制表符</h3><p><font size="4">─ ━│┃╌╍╎╏┄ ┅┆┇┈ ┉┊┋┌┍┎┏┐┑┒┓└ ┕┖┗ ┘┙┚┛├┝┞┟┠┡┢┣ ┤┥┦┧┨┩┪┫┬ ┭ ┮ ┯ ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻┼ ┽ ┾ ┿ ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╪ ╫ ╬═║╒╓╔ ╕╖╗╘╙╚ ╛╜╝╞╟╠ ╡╢╣╤ ╥ ╦ ╧ ╨ ╩ ╳╔ ╗╝╚ ╬ ═ ╓ ╩ ┠ ┨┯ ┷┏ ┓┗ ┛┳ ⊥ ﹃ ﹄┌ ╮ ╭ ╯╰</font></p><h3 id="皇冠符号"><a href="#皇冠符号" class="headerlink" title="皇冠符号"></a>皇冠符号</h3><p><font size="4">♚　♛　♝　♞　♜　♟　♔　♕　♗　♘　♖　♟</font></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;font size=&quot;4&quot;&gt;❤ ❥ 웃 유 ♋ ☮ ✌ ☏ ☢ ☠ ✔ ☑ ♚ ▲ ♪ ✈ ✞ ÷ ↑ ↓ ◆ ◇ ⊙ ■ □ △ ▽ ¿ ─ │ ♥ ❣ ♂ ♀ ☿ Ⓐ ✍ ✉ ☣ ☤ ✘ ☒ ♛ ▼ ♫ ⌘ ☪ ≈ ← → ◈ ◎ ☉ ★ ☆ ⊿ ※ ¡ ━ ┃ ♡ ღ ツ ☼ ☁ ❅ ♒ ✎ © ® ™ Σ ✪ ✯ ☭ ➳ 卐 √ ↖ ↗ ● ◐ Θ ◤ ◥ ︻ 〖 〗 ┄ ┆ ℃ ℉ ° ✿ ϟ ☃ ☂ ✄ ¢ € £ ∞ ✫ ★ ½ ✡ × ↙ ↘ ○ ◑ ⊕ ◣ ◢ ︼ 【 】 ┅ ┇ ☽ ☾ ✚ 〓 ▂ ▃ ▄ ▅ ▆ ▇ █ ▉ ▊ ▋ ▌ ▍ ▎ ▏ ↔ ↕ ☽ ☾ の • ▸ ◂ ▴ ▾ ┈ ┊ ① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ Ⅰ Ⅱ Ⅲ Ⅳ Ⅴ Ⅵ Ⅶ Ⅷ Ⅸ Ⅹ ㍿ ▓ ♨ ♛ ❖ ♓ ☪ ✙ ┉ ┋ ☹ ☺ ☻ ت ヅ ツ ッ シ Ü ϡ ﭢ ™ ℠ ℗ © ® ♥ ❤ ❥ ❣ ❦ ❧ ♡ ۵ 웃 유 ღ ♋ ♂ ♀ ☿ ☼ ☀ ☁ ☂ ☄ ☾ ☽ ❄ ☃ ☈ ⊙ ☉ ℃ ℉ ❅ ✺ ϟ ☇ ♤ ♧ ♡ ♢ ♠ ♣ ♥ ♦ ☜ ☞ ☝ ✍ ☚ ☛ ☟ ✌ ✽ ✾ ✿ ❁ ❃ ❋ ❀ ⚘ ☑ ✓ ✔ √ ☐ ☒ ✗ ✘ ㄨ ✕ ✖ ✖ ⋆ ✢ ✣ ✤ ✥ ❋ ✦ ✧ ✩ ✰ ✪ ✫ ✬ ✭ ✮ ✯ ❂ ✡ ★ ✱ ✲ ✳ ✴ ✵ ✶ ✷ ✸ ✹ ✺ ✻ ✼ ❄ ❅ ❆ ❇ ❈ ❉ ❊ † ☨ ✞ ✝ ☥ ☦ ☓ ☩ ☯ ☧ ☬ ☸ ✡ ♁ ✙ ♆ 。 ， 、 ＇ ： ∶ ； ? ‘ ’ “ ” 〝 〞 ˆ ˇ ﹕ ︰ ﹔ ﹖ ﹑ • ¨ … . ¸ ; ！ ´ ？ ！ ～ — ˉ ｜ ‖ ＂ 〃 ｀ @ ﹫ ¡ ¿ ﹏ ﹋ ﹌ ︴ 々 ﹟ # ﹩ $ ﹠ &amp;amp; ﹪ % * ﹡ ﹢ ﹦ ﹤ ‐ ￣ ¯ ― ﹨ ˆ ˜ ﹍ ﹎ + = &amp;lt; ＿ _ - \ ˇ ~ ﹉ ﹊ （ ） 〈 〉 ‹ › ﹛ ﹜ 『 』 〖 〗 ［ ］ 《 》 〔 〕 { } 「 」 【 】 ︵ ︷ ︿ ︹ ︽ _ ﹁ ﹃ ︻ ︶ ︸ ﹀ ︺ ︾ ˉ ﹂ ﹄ ︼ ☩ ☨ ☦ ✞ ✛ ✜ ✝ ✙ ✠ ✚ † ‡ ◉ ○ ◌ ◍ ◎ ● ◐ ◑ ◒ ◓ ◔ ◕ ◖ ◗ ❂ ☢ ⊗ ⊙ ◘ ◙ ◍ ⅟ ½ ⅓ ⅕ ⅙ ⅛ ⅔ ⅖ ⅚ ⅜ ¾ ⅗ ⅝ ⅞ ⅘ ≂ ≃ ≄ ≅ ≆ ≇ ≈ ≉ ≊ ≋ ≌ ≍ ≎ ≏ ≐ ≑ ≒ ≓ ≔ ≕ ≖ ≗ ≘ ≙ ≚ ≛ ≜ ≝ ≞ ≟ ≠ ≡ ≢ ≣ ≤ ≥ ≦ ≧ ≨ ≩ ⊰ ⊱ ⋛ ⋚ ∫ ∬ ∭ ∮ ∯ ∰ ∱ ∲ ∳ % ℅ ‰ ‱ ㊣ ㊎ ㊍ ㊌ ㊋ ㊏ ㊐ ㊊ ㊚ ㊛ ㊤ ㊥ ㊦ ㊧ ㊨ ㊒ ㊞ ㊑ ㊒ ㊓ ㊔ ㊕ ㊖ ㊗ ㊘ ㊜ ㊝ ㊟ ㊠ ㊡ ㊢ ㊩ ㊪ ㊫ ㊬ ㊭ ㊮ ㊯ ㊰ ㊙ ㉿ 囍 ♔ ♕ ♖ ♗ ♘ ♙ ♚ ♛ ♜ ♝ ♞ ♟ ℂ ℍ ℕ ℙ ℚ ℝ ℤ ℬ ℰ ℯ ℱ ℊ ℋ ℎ ℐ ℒ ℓ ℳ ℴ ℘ ℛ ℭ ℮ ℌ ℑ ℜ ℨ ♪ ♫ ♩ ♬ ♭ ♮ ♯ ° ø Ⓐ ☮ ✌ ☪ ✡ ☭ ✯ 卐 ✐ ✎ ✏ ✑ ✒ ✍ ✉ ✁ ✂ ✃ ✄ ✆ ✉ ☎ ☏ ➟ ➡ ➢ ➣ ➤ ➥ ➦ ➧ ➨ ➚ ➘ ➙ ➛ ➜ ➝ ➞ ➸ ♐ ➲ ➳ ⏎ ➴ ➵ ➶ ➷ ➸ ➹ ➺ ➻ ➼ ➽ ← ↑ → ↓ ↔ ↕ ↖ ↗ ↘ ↙ ↚ ↛ ↜ ↝ ↞ ↟ ↠ ↡ ↢ ↣ ↤ ↥ ↦ ↧ ↨ ➫ ➬ ➩ ➪ ➭ ➮ ➯ ➱ ↩ ↪ ↫ ↬ ↭ ↮ ↯ ↰ ↱ ↲ ↳ ↴ ↵ ↶ ↷ ↸ ↹ ↺ ↻ ↼ ↽ ↾ ↿ ⇀ ⇁ ⇂ ⇃ ⇄ ⇅ ⇆ ⇇ ⇈ ⇉ ⇊ ⇋ ⇌ ⇍ ⇎ ⇏ ⇐ ⇑ ⇒ ⇓ ⇔ ⇕ ⇖ ⇗ ⇘ ⇙ ⇚ ⇛ ⇜ ⇝ ⇞ ⇟ ⇠ ⇡ ⇢ ⇣ ⇤ ⇥ ⇦ ⇧ ⇨ ⇩ ⇪ ➀ ➁ ➂ ➃ ➄ ➅ ➆ ➇ ➈ ➉ ➊ ➋ ➌ ➍ ➎ ➏ ➐ ➑ ➒ ➓ ㊀ ㊁ ㊂ ㊃ ㊄ ㊅ ㊆ ㊇ ㊈ ㊉ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ Ⅰ Ⅱ Ⅲ Ⅳ Ⅴ Ⅵ Ⅶ Ⅷ Ⅸ Ⅹ Ⅺ Ⅻ Ⅼ Ⅽ Ⅾ Ⅿ ⅰ ⅱ ⅲ ⅳ ⅴ ⅵ ⅶ ⅷ ⅸ ⅹ ⅺ ⅻ ⅼ ⅽ ⅾ ⅿ ┌ ┍ ┎ ┏ ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟ ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯ ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿ ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏ ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟ ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ◤ ◥ ◄ ► ▶ ◀ ◣ ◢ ▲ ▼ ◥ ▸ ◂ ▴ ▾ △ ▽ ▷ ◁ ⊿ ▻ ◅  ▵ ▿ ▹ ◃ ❏ ❐ ❑ ❒ ▀ ▁▂▃▄▅▆▇▉▊▋█▌ ▍▎▏▐░▒▓▔▕■□▢▣▤▥▦▧▨▩ ▪ ▫ ▬ ▭ ▮ ▯ ㋀ ㋁ ㋂ ㋃ ㋄ ㋅ ㋆ ㋇ ㋈ ㋉ ㋊ ㋋ ㏠ ㏡ ㏢ ㏣ ㏤ ㏥ ㏦ ㏧ ㏨ ㏩ ㏪ ㏫ ㏬ ㏭ ㏮ ㏯ ㏰ ㏱ ㏲ ㏳ ㏴ ㏵ ㏶ ㏷ ㏸ ㏹ ㏺ ㏻ ㏼ ㏽ ㏾ ㍙ ㍚ ㍛ ㍜ ㍝ ㍞ ㍟ ㍠ ㍡ ㍢ ㍣ ㍤ ㍥ ㍦ ㍧ ㍨ ㍩ ㍪ ㍫ ㍬ ㍭ ㍮ ㍯ ㍰ ㍘ ☰ ☲ ☱ ☴ ☵ ☶ ☳ ☷ ☯&lt;/font&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Html" scheme="https://zuitaibai.gitee.io/blog/categories/Html/"/>
    
    
    <category term="特殊符号" scheme="https://zuitaibai.gitee.io/blog/tags/%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7/"/>
    
    <category term="速查表" scheme="https://zuitaibai.gitee.io/blog/tags/%E9%80%9F%E6%9F%A5%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>字符集和字符编码</title>
    <link href="https://zuitaibai.gitee.io/blog/2016/06/12/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80-%E7%BC%96%E7%A0%81-2016-06-12-%E5%AD%97%E7%AC%A6%E9%9B%86%E5%92%8C%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
    <id>https://zuitaibai.gitee.io/blog/2016/06/12/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80-%E7%BC%96%E7%A0%81-2016-06-12-%E5%AD%97%E7%AC%A6%E9%9B%86%E5%92%8C%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/</id>
    <published>2016-06-12T08:03:43.000Z</published>
    <updated>2016-06-12T08:03:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>在web开发中我们总会遇到这样那样的字符编码问题，例如，当我们在代码编辑器里可以好好显示的html文档在浏览器里却变成了乱码，有时候为了能让我们的页面正常显示我们可能要忙上一天都无法解决（我可是深有体会）。为了搞清楚字符编码的问题，今天我也花了很长时间去百度。这里我和大家分享一下我的感想，不对之处，欢迎指正。</p><p>首先要了解下什么是字符编码和字符集。</p><p><strong>字符集（Charset）</strong>：是一个系统支持的所有抽象字符的集合。字符是各种文字和符号的总称，包括各国家文字、标点符号、图形符号、数字等。</p><p>字符集的概念就是指一个集合，例如：26个英文字母就构成了一个英文字母字符集，还有繁体汉字字符集、日文汉字字符集等。</p><p><strong>字符编码（Character Encoding）</strong>：是一套法则，使用该法则能够对自然语言的字符的一个集合（如字母表或音节表），与其他东西的一个集合（如号码或电脉冲）进行配对。即在符号集合与数字系统之间建立对应关系，它是信息处理的一项基本技术。通常人们用符号集合（一般情况下就是文字）来表达信息。而以计算机为基础的信息处理系统则是利用元件（硬件）不同状态的组合来存储和处理信息的。元件不同状态的组合能代表数字系统的数字，因此字符编码就是将符号转换为计算机可以接受的数字系统的数，称为数字代码。</p><p>字符编码指一套规则，计算机只能处理由0,1构成的数据，计算机不能处理符号和字符，他只会处理0,1数据。为了能让计算机处理这些非数值数据，我们就把非数值数据根据一定的规则与一些二进制数据对应起来，例如在ASCLL编码中，我们用’0110 0001’来表示’a’,<a href="http://blog.csdn.net/macky0668/article/details/3958822">ASCLL对应表</a>, 大家可以去看看。总而言之，这些将字符集里的字符与二进制数据对应的法则的集合就是字符编码。</p><p>所以，一个字符集必然对应着一个一个字符编码。</p><p>常见的字符集&amp;字符编码。</p><p><strong>ASCLL字符集&amp;字符编码。</strong></p><p><strong>ASCII</strong>（<strong>A</strong>merican<strong>S</strong>tandard<strong>C</strong>ode for<strong>I</strong>nformation<strong>I</strong>nterchange，<strong>美国信息交换标准代码</strong>））是基于拉丁字母的一套电脑编码系统。它主要用于显示现代英语，而其扩展版本EASCII则可以勉强显示其他西欧语言。它是现今最通用的单字节编码系统（但是有被Unicode追上的迹象），并等同于国际标准ISO/IEC 646。<strong>ASCII字符集</strong>：主要包括控制字符（回车键、退格、换行键等）；可显示字符（英文大小写字符、阿拉伯数字和西文符号）。</p><p><strong>ASCII编码</strong>：将ASCII字符集转换为计算机可以接受的数字系统的数的规则。使用7位二进制（一个字节）表示一个字符，共128字符。后来，随这计算机的普及128个字符不够用了，于是就动用了剩下的哪一个二进制，形成了扩展的ASCLL编码，共有256个。</p><p>128的ASCLL编码表</p><p><img src="http://img.kuqin.com/upimg/allimg/141025/235013E33-0.png"></p><p>256的ASCLL编码表。</p><p><img src="http://img.kuqin.com/upimg/allimg/141025/23501310G-1.png"></p><p>ASCLL相对来说是一种比较古老的字符集&amp;字符编码，因为他表示的字符太少了，渐渐就产生了其他包含更多字符的字符集&amp;字符编码。</p><p><strong>GBXXXX字符集&amp;编码</strong></p><p><strong>BG—-国标</strong></p><p><strong><em>GB 2312__字符集&amp;编码</em></strong></p><p><strong>GB 2312字符集：</strong></p><p>GB 2312或GB 2312-80是中国国家标准<a href="http://baike.baidu.com/view/79493.htm">简体中文</a><a href="http://baike.baidu.com/view/51987.htm">字符集</a>，全称《信息交换用汉字编码字符集·基本集》，又称GB0，由中国国家标准总局发布，<a href="http://baike.baidu.com/view/286311.htm">1981年</a><a href="http://baike.baidu.com/view/164971.htm">5月1日实施。GB2312编码通行于</a><a href="http://baike.baidu.com/view/327945.htm">中国大陆</a>；<a href="http://baike.baidu.com/view/3593.htm">新加坡</a>等地也采用此编码。中国大陆几乎所有的中文系统和国际化的软件都支持GB 2312。</p><p><strong>GB 2312字符编码：</strong></p><p>一个小于127的字符的意义与原来相同，但两个大于127的字符连在一起时，就表示一个汉字，前面的一个字节（他称之为高字节）从0xA1用到 0xF7（176–247），后面一个字节（低字节）从0xA1到0xFE（160–254），这样我们就可以组合出大约6654多个简体汉字了。在这些编码里，还把数学符号、罗马希腊的 字母、日文的假名们都编进去了，连在ASCII里本来就有的数字、标点、字母都统统重新编了两个字节长的编码，这就是常说的”全角”字符，而原来在127号以下的那些就叫”半角”字符了。</p><p>GB2312字符集中删掉了扩展后的那部分ASCLL字符,也就是说一个字符的二进制大于127是没有在GB2312中定义的。GB2312 收录了%99的常用汉字，但对于一些偏僻的姓，少数名族的字符没有收录，这时候就有必要出现另一种扩充的编码方式，这就是GBK。</p><p><strong><em>GBK__字符集&amp;编码</em></strong></p><p><strong>GBK字符集</strong>_：_gbk字符集是GB2312的超集，同 GB2312一样，GBK也支持希腊字母、日文假名字母、俄语字母等字符，但不支持韩语中的表音字符（非汉字字符）。GBK还收录了GB2312不包含的 汉字部首符号、竖排标点符号等字符。</p><p><strong>GBK字符编码：</strong>为了能够表示更多的字符，GBK的制定者们扩充了表示字符的字节范围，规定：一个小于127的字符的意义与原来相同，当有一个大于127的字符出现时且这个大于127的字符的后面跟着一个字节范围是0x40-7E和0x80-0xFE（十进制：64—127和128—256）时，他就表示一个汉字，也就是说高字节范围是0×81-0xFE，低字节范围是0x40-7E和0x80-0xFE。从这一点可以看出，GBK完全兼容了GB2312，而他又进行了扩展，但这个扩展对程序员们造成了一些影响。在GBK中，当我们遍历一个字符串时，我们无法通过判断他的二进制码是否小于127来判断他是有特殊含义的ASCLL字符，因为他有可能是一个汉字的一半。所以，当我们想要在字符串中添加标识符时，我们最好选择小于64的字符来做，例如（!,@,#,$,%,^）.</p><p>有些系统中用0x40-0x7E中的字符（如”|”）做特殊符号，在定位这些符号时又没有判断这些符号是不是属于某个 GBK字符的低字节，这样就会造成错误判断。在支持GB2312的环境下就不存在这个问题。需要注意的是支持GBK的环境中小于0x80的某个字节未必就 是ASCII符号；另外就是最好选用小于0×40的ASCII符号做一些特殊符号，这样就可以快速定位，且不用担心是某个汉字的另一半。Big5编码中也存在相应问题。</p><p><strong><em>GB13080__字符集&amp;编码</em></strong></p><p><strong>GB13080字符集：</strong>全称：国家标准GB 18030-2005《信息技术 中文编码字符集》，是中华人民共和国现时最新的内码字集，是GB 18030-2000《信息技术 信息交换用汉字编码字符集 基本集的扩充》的修订版。与GB 2312-1980完全兼容，与GBK基本兼容，支持GB 13000及Unicode的全部统一汉字，共收录汉字70244个。</p><p><strong>GB13080字符编码：</strong>GBK和GB2312都是双字节等宽编码，如果算上和ASCII兼容所支持的单字节，也可以理解为是单字节和双字节混合的变长编码。GB18030编码是变长编码，有单字节、双字节和四字节三种方式。GB18030的单字节编码范围是0x00-0x7F，完全等同与ASCII；双字节编码的范围和GBK相同，高字节是0x81-0xFE，低字节 的编码范围是0x40-0x7E和0x80-FE；四字节编码中第一、三字节的编码范围是0x81-0xFE，二、四字节是0x30-0x39。</p><p><strong><em>BIG5__字符集&amp;编码</em></strong></p><p><strong>BIG5字符集：</strong>由于GB系列的字符集&amp;字符编码只收录了简体汉字而没有考虑台湾人民的感受，所以他们也推出了自己的字符集&amp;字符编码那就是大五码—BIG5，Big5收录的汉字只包括繁体汉字，不包括简体汉字，一些生僻的汉字也没有收录。GBK收录的日文假名字符、俄文字符BIG5也没有收录。Big5编码对应的字符集是GBK字符集的子集，也就是说Big5收录的字符是GBK收录字符的一部分，但相同字符的编码不同。</p><p><strong>BIG5字符编码：</strong>Big5是双字节编码，高字节编码范围是0x81-0xFE（128–255），低字节编码范围是0x40-0x7E和0xA1-0xFE。和GBK相比，少了低字节是0x80-0xA0的组合。0x8140-0xA0FE是保留区域，用于用户造字区。</p><p>因为Big5也占用了ASCII的编码空间（低字节所使用的0x40-0x7E），所以Big5编码在一些环境下存在和GBK编码相同的问题，即低字节范围为0x40-0x7E的字符有可能会被误处理，尤其是低字节是0x5C（”/“）和0x7C（”|”）的字符。可以参考GBK一节相应说明。</p><p>**<em>小结：</em>**在上述所例举的GB系列，BIG5，这些字符集他们都用一个小于127的字节来表示英文字符，用两个字节且第一个字节必须大于127的双字节来表示汉字。于是他们有了一个共同的名字—- “DBCS”（Double Byte Charecter Set 双字节字符集）。在DBCS系列标准里，最大的特点是两字节长的汉字字符和一字节长的英文字符并存于同一套编码方案里，因此他们写的程序为了支持中文处理，必须要注意字串里的每一个字节的值，如果这个值是大于127的，那么就认为一个双字节字符集里的字符出现了。</p><p><strong><em>伟大的UNICODE</em></strong></p><p>　因为当时各个国家都像中国这样搞出一套自己的编码标准，结果互相之间谁也不懂谁的编码，谁也不支持别人的编码，连大陆和台湾这样只相隔了150海里，使用 着同一种语言的兄弟地区，也分别采用了不同的 DBCS 编码方案。导致文件在不同的地区的传输出现了很大的问题，这时候一个伟大的创想产生了——Unicode（”Universal Multiple-Octet Coded Character Set”，简称 UCS, 俗称 “UNICODE”）。这个由一个叫 ISO（国际标谁化组织）的国际组织编制的字符集可以表示世界上所有的字符，它规定用4个字节来表示字符，每个数字代表唯一的至少在某种语言中使用的符号（并不是所有的数字都用上了，但是总数已经超过了65535，所以2个字节的数字是不够用的。）在UNICODE中，每个字符对应一个数字，每个数字对应一个字符。即不存在二义性。不再需要记录”模式”了。U+0041总是代表’A’，即使这种语言没有’A’这个字符。</p><p>在计算机科学领域中，Unicode（统一码、万国码、单一码、标准万国码）是业界的一种标准，它可以使电脑得以体现世界上数十种文字的系统。Unicode 是基于通用字符集（Universal Character Set）的标准来发展，并且同时也以书本的形式[1]对外发表。直至目前为止的第六版，Unicode 就已经包含了超过十万个字符（在2005年，Unicode 的第十万个字符被采纳且认可成为标准之一）、一组可用以作为视觉参考的代码图表、一套编码方法与一组标准字符编码、一套包含了上标字、下标字等字符特性的枚举等。Unicode 组织（The Unicode Consortium）是由一个非营利性的机构所运作，并主导 Unicode 的后续发展，其目标在于：将既有的字符编码方案以Unicode 编码方案来加以取代，特别是既有的方案在多语环境下，皆仅有有限的空间以及不兼容的问题。</p><p>UNICODE这种编码方式虽然形成了一种统一的字符集，世界上的人们终于能在同一种字符集下工作了。但是他也带来了一些问题。</p><p>例如汉字”严”的unicode是十六进制数4E25，转换成二进制数足足有15位（100111000100101），也就是说这个符号的表示至少需要2个字节。表示其他更大的符号，可能需要3个字节或者4个字节，甚至更多。而计算机不知道这两个字节是一个汉字，还是两个ASCLL字符。</p><p>用跟多的字节表示英文字符，这样浪费了大量的空间，老外们非常不高兴。</p><p>传输时的问题。</p><p>于是这个时候就有必要出现一种可以解决这个问题的全新的编码方式。于是就出现了UTF系列（utf-8,utf-16,utf-32）</p><p>（<strong>可以这样理解：Unicode是字符集，UTF-32/ UTF-16/ UTF-8是三种字符编码方案。</strong>）</p><p><strong>UTF-32编码方式：</strong></p><p>上述使用4字节的数字来表达每个字母、符号，或者表意文字(ideograph)，每个数字代表唯一的至少在某种语言中使用的符号的编码方案，称为UTF-32。UTF-32又称UCS-4是一种将Unicode字符编码的协定，对每个字符都使用4字节。就空间而言，是非常没有效率的。这种方法有其优点，最重要的一点就是可以在常数时间内定位字符串里的第N个字符，因为第N个字符从第4×Nth个字节开始。虽然每一个码位使用固定长定的字节看似方便，它并不如其它Unicode编码使用得广泛。</p><p><strong>UTF-16 编码方式</strong></p><p>尽管有Unicode字符非常多，但是实际上大多数人不会用到超过前65535个以外的字符。因此，就有了另外一种Unicode编码方式，叫做UTF-16(因为16位 = 2字节)。UTF-16将0–65535范围内的字符编码成2个字节，如果真的需要表达那些很少使用的”星芒层(astral plane)”内超过这65535范围的Unicode字符，则需要使用一些诡异的技巧来实现。这些诡异的技巧请自行百度。</p><p>**<em>小结：</em></p><p>对于UTF-32和UTF-16编码方式还有一些其他不明显的缺点。不同的计算机系统会以不同的顺序保存字节。这意味着字符U+4E2D在UTF-16编码方式下可能被保存为4E 2D或者2D 4E，这取决于该系统使用的是大尾端(big-endian)还是小尾端(little-endian)。这时候数据的传输就出了问题，为了解决这个问题，多字节的Unicode编码方式定义了一个”字节顺序标记(Byte Order Mark)”，它是一个特殊的非打印字符，你可以把它包含在文档的开头来指示你所使用的字节顺序。对于UTF-16，字节顺序标记是U+FEFF。如果收到一个以字节FF FE开头的UTF-16编码的文档，你就能确定它的字节顺序是单向的(one way)的了；如果它以FE FF开头，则可以确定字节顺序反向了。这就是我们在notepad++的格式选项里看到的UCS-2 BIG endian &amp; UCS-2 Little endian 的含义了。**</p><p><strong>UTF-8 编码方式</strong></p><p>互联网的普及，强烈要求出现一种统一的编码方式。UTF-8就是在互联网上使用最广的一种Unicode的实现方式，也是最重要的一种编码方式。</p><p>UTF-8（8-bit Unicode Transformation Format）是一种针对Unicode的可变长度字符编码（定长码），也是一种前缀码。它可以用来表示Unicode标准中的任何字符，且其编码中的第一个字节仍与ASCII兼容，这使得原来处理ASCII字符的软件无须或只须做少部份修改，即可继续使用。因此，它逐渐成为电子邮件、网页及其他存储或传送文字的应用中，优先采用的编码。互联网工程工作小组（IETF）要求所有互联网协议都必须支持UTF-8编码。UTF-8最大的一个特点，就是它是一种变长的编码方式。它可以使用1~4个字节表示一个符号，根据不同的符号而变化字节长度。</p><p>UTF-8的编码规则很简单，只有二条：</p><p>1）对于单字节的符号，字节的第一位设为0，后面7位为这个符号的unicode码。因此对于英语字母，UTF-8编码和ASCII码是相同的。</p><p>2）对于n字节的符号（n&gt;1），第一个字节的前n位都设为1，第n+1位设为0，后面字节的前两位一律设为10。剩下的没有提及的二进制位，全部为这个符号的unicode码。</p><p>下表总结了编码规则，字母x表示可用编码的位。</p><p>Unicode符号范围**|**UTF-8编码方式</p><p>(十六进制) | （二进制）</p><p>——————–+———————————————</p><p>0000 0000-0000 007F | 0xxxxxxx</p><p>0000 0080-0000 07FF | 110xxxxx 10xxxxxx</p><p>0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx</p><p>0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</p><p>下面，还是以汉字”严”为例，演示如何实现UTF-8编码。</p><p>已知”严”的unicode是4E25（100111000100101），根据上表，可以发现4E25处在第三行的范围内（0000 0800-0000 FFFF），因此”严”的UTF-8编码需要三个字节，即格式是”1110xxxx 10xxxxxx 10xxxxxx”。然后，从”严”的最后一个二进制位开始，依次从后向前填入格式中的x，多出的位补0。这样就得到了，”严”的UTF-8编码是”11100100 10111000 10100101”，转换成十六进制就是E4B8A5。</p><p>从上面的过程中我们可以看出在utf-8中 汉字大多是三个字节的而英文字母都是1个字节的，这样原来的英文文件就可以在不用修改的情况下来适应utf-8，也不用多余的占用空间。</p><p>UTF-8优点：</p><ol><li><p> UTF-8是ASCII的一个超集。因为一个纯ASCII字符串也是一个合法的UTF-8字符串，所以现存的ASCII文本不需要转换。为传统的扩展ASCII字符集设计的软件通常可以不经修改或很少修改就能与UTF-8一起使用。</p></li><li><p> UTF-8字符串可以由一个简单的算法可靠地识别出来。就是，一个字符串在任何其它编码中表现为合法的UTF-8的可能性很低，并随字符串长度增长而减小。</p></li></ol><p><strong>Utf-8 BOM 问题：</strong></p><p>前面提到过”字节顺序标记(Byte Order Mark)”—-BOM 这是用来表示UTF-16和UTF-32的字节顺许的，但UTF-8并不需要他，他在utf-8文件中被编译为”EF BB BF”，占三个字节。这就是我们用记事本创建一个utf-8文件时，它的起始大小为3字节，这三个字节来标识UTF-8编码。但这三个字节会常常造成一些问题。</p><p>例如：</p><ol><li><p> <em>当一个文件流是utf-8 BOM 形式编码的话，其在除IE10之外的IE中都会输出一个空行。这会导致一些页面的错乱。</em></p></li><li><p> <em>受COOKIE送出机制的限制，在这些文件开头已经有BOM的文件中，COOKIE无法送出（因为在COOKIE送出前PHP已经送出了<a href="http://wenwen.sogou.com/s/?sp=S%E6%96%87%E4%BB%B6%E5%A4%B4&amp;ch=w.search.yjjlink&amp;cid=w.search.yjjlink">文件头</a>），所以登入和登出功能失效。一切依赖COOKIE、SESSION实现的功能全部无效。</em></p></li></ol><p>解决办法：</p><p>使用notepad++编辑器打开文件，在”格式”选项中选择”转为UTF-8无BOM格式”。</p><p><strong>ANSI 是神马？？</strong></p><p>在notepad++中的”格式”选项中，我们可以看到”以ANSI编码”这个选项，那么，ANSI究竟是什么呢？？？</p><p><em>为使计算机支持更多语言，通常使用 0x80~0xFF 范围的 2 个字节来表示 1 个字符。比如：汉字 ‘中’ 在中文操作系统中，使用 [0xD6,0xD0] 这两个字节存储。不同的国家和地区制定了不同的标准，由此产生了 GB2312, BIG5, JIS 等各自的编码标准。这些使用 2 个字节来代表一个字符的各种汉字延伸编码方式，称为 ANSI 编码。在简体中文系统下，ANSI 编码代表 GB2312 编码，在日文操作系统下，ANSI 编码代表 JIS 编码。不同 ANSI 编码之间互不兼容，当信息在国际间交流时，无法将属于两种语言的文字，存储在同一段 ANSI 编码的文本中。</em></p><p>以上摘自百度百科。。。</p><p>ANSI 就是一种对双字节编码方式的总称，我们可以把它看做一个变量，在不同的地域，他的值是不同的。而这个地域的判断又是依赖于操作系统。在中国，ANSI=GB2312，在日本，ANSI=JIS。有的时候ANSI也被称为’本地编码’。事实上，ANSI的值取决于windows的’codepage’，你可以在命令行下输入”chcp”来查看你的codepage，一般为936，然后查看cmd的属性时，你会发现codepage时GBK。</p><p>说了半天，也就是在中国，你的ANSI就是GB2312。文本以ANSI的形式存储或处理时，就是以GB2312处理的。</p><p>举个例子：</p><p>比 如 一个用户在简体中文Windows下面用记事本输入一些汉字后保存，然后copy到另一台英文Windows上，尝试用记事本打开，就会发现出现的是一 些乱码。并不是copy的过程中出现了错误，而是因为在英文的Windows上打开文件时默认的ANSI编码是Wenstern European(Windows) – Codepage 1252，而在简体中文的Windows上保存打开时默认的编码格式是Chinese Simplified(GB2312) – Codepage 936。</p><p><strong>实验课</strong></p><p>新建5个txt文件分别命名为”utf-8.txt”,”gb2312.txt”,”ANSI.txt”,”Unicode big endian,txt”,”Unicode little endian.txt”，然后用notepad++打开，将其改变为名称对应的编码方式。然后在里面都输入’严’</p><p>然后，使用Ultraedit 打开，按下’ctrl+H’查看他们的十六进制码。</p><ul><li><p>  ANSI：文件的编码就是两个字节”D1 CF”，这正是”严”的GB2312编码。:</p></li><li><p>  Gb2312：文件的编码就是两个字节”D1 CF”，和ANSI一样。</p></li><li><p>  Unicode litte endian：编码是四个字节”FF FE 25 4E”，其中”FF FE”表明是小头方式存储，真正的编码是4E25。</p></li><li><p>  Unicode big endian：编码是四个字节”FE FF 4E 25”，其中”FE FF”表明是大头方式存储。</p></li><li><p>UTF-8：编码是六个字节”EF BB BF E4 B8 A5”，前三个字节”EF BB BF”表示这是UTF-8编码，后三个”E4B8A5”就是”严”的具体编码，它的存储顺序与编码顺序是一致的。</p><p>  参考资料及延伸阅读：</p><p>  <a href="http://blog.csdn.net/stilling2006/article/details/4129700">http://blog.csdn.net/stilling2006/article/details/4129700</a></p><p>  <a href="http://www.pconline.com.cn/pcedu/empolder/gj/other/0505/616631.html">http://www.pconline.com.cn/pcedu/empolder/gj/other/0505/616631.html</a></p><p>  <a href="http://www.joelonsoftware.com/articles/Unicode.html">http://www.joelonsoftware.com/articles/Unicode.html</a></p><p>  <a href="http://www.crifan.com/files/doc/docbook/char_encoding/release/webhelp/content/">http://www.crifan.com/files/doc/docbook/char_encoding/release/webhelp/content/</a></p><p>  <a href="http://huaichang.blogbus.com/logs/19602597.html">http://huaichang.blogbus.com/logs/19602597.html</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在web开发中我们总会遇到这样那样的字符编码问题，例如，当我们在代码编辑器里可以好好显示的html文档在浏览器里却变成了乱码，有时候为了能让我们的页面正常显示我们可能要忙上一天都无法解决（我可是深有体会）。为了搞清楚字符编码的问题，今天我也花了很长时间去百度。这里我和大家分</summary>
      
    
    
    
    <category term="计算机基础" scheme="https://zuitaibai.gitee.io/blog/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="编码" scheme="https://zuitaibai.gitee.io/blog/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BC%96%E7%A0%81/"/>
    
    
    <category term="字符集" scheme="https://zuitaibai.gitee.io/blog/tags/%E5%AD%97%E7%AC%A6%E9%9B%86/"/>
    
    <category term="字符编码" scheme="https://zuitaibai.gitee.io/blog/tags/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>nodejs简易server环境及简易接口路由写在一起（二）</title>
    <link href="https://zuitaibai.gitee.io/blog/2016/05/27/%E6%9C%8D%E5%8A%A1%E7%AB%AF-nodejs-2016-05-27-nodejs%E7%AE%80%E6%98%93server%E7%8E%AF%E5%A2%83%E5%8F%8A%E7%AE%80%E6%98%93%E6%8E%A5%E5%8F%A3%E8%B7%AF%E7%94%B1%E5%86%99%E5%9C%A8%E4%B8%80%E8%B5%B7%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://zuitaibai.gitee.io/blog/2016/05/27/%E6%9C%8D%E5%8A%A1%E7%AB%AF-nodejs-2016-05-27-nodejs%E7%AE%80%E6%98%93server%E7%8E%AF%E5%A2%83%E5%8F%8A%E7%AE%80%E6%98%93%E6%8E%A5%E5%8F%A3%E8%B7%AF%E7%94%B1%E5%86%99%E5%9C%A8%E4%B8%80%E8%B5%B7%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2016-05-27T06:31:49.000Z</published>
    <updated>2016-05-27T06:31:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>再来个带inclue功能的，nodejs简易server环境及简易接口路由 写在一起 (2)</p><blockquote><p><strong>grunt：搞定一些自动完成</strong><br><em>[ autoprefixer, browser-sync, contrib-cssmin, contrib-jshint, contrib-less, contrib-uglify, contrib-watch, ejs, node-dev ]</em><br><strong>node server.js：后台交互</strong></p></blockquote><span id="more"></span><h1 id="server-js"><a href="#server-js" class="headerlink" title="server.js"></a>server.js</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> PORT = <span class="number">1337</span>, DIR = <span class="string">&#x27;.&#x27;</span>; <span class="comment">//用于存放html的目录</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>), url = <span class="built_in">require</span>(<span class="string">&#x27;url&#x27;</span>), fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>), path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>), ejs = <span class="built_in">require</span>(<span class="string">&#x27;ejs&#x27;</span>);</span><br><span class="line">ejs.delimiter = <span class="string">&#x27;$$&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> mine = &#123;</span><br><span class="line">    <span class="string">&quot;css&quot;</span>: <span class="string">&quot;text/css&quot;</span>, <span class="string">&quot;gif&quot;</span>: <span class="string">&quot;image/gif&quot;</span>, <span class="string">&quot;html&quot;</span>: <span class="string">&quot;text/html&quot;</span>, <span class="string">&quot;ico&quot;</span>: <span class="string">&quot;image/x-icon&quot;</span>, <span class="string">&quot;xml&quot;</span>: <span class="string">&quot;text/xml&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jpeg&quot;</span>: <span class="string">&quot;image/jpeg&quot;</span>, <span class="string">&quot;jpg&quot;</span>: <span class="string">&quot;image/jpeg&quot;</span>, <span class="string">&quot;js&quot;</span>: <span class="string">&quot;text/javascript&quot;</span>, <span class="string">&quot;json&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pdf&quot;</span>: <span class="string">&quot;application/pdf&quot;</span>, <span class="string">&quot;png&quot;</span>: <span class="string">&quot;image/png&quot;</span>, <span class="string">&quot;svg&quot;</span>: <span class="string">&quot;image/svg+xml&quot;</span>, <span class="string">&quot;swf&quot;</span>: <span class="string">&quot;application/x-shockwave-flash&quot;</span>,</span><br><span class="line">    <span class="string">&quot;tiff&quot;</span>: <span class="string">&quot;image/tiff&quot;</span>, <span class="string">&quot;txt&quot;</span>: <span class="string">&quot;text/plain&quot;</span>, <span class="string">&quot;wav&quot;</span>: <span class="string">&quot;audio/x-wav&quot;</span>, <span class="string">&quot;wma&quot;</span>: <span class="string">&quot;audio/x-ms-wma&quot;</span>, <span class="string">&quot;wmv&quot;</span>: <span class="string">&quot;video/x-ms-wmv&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> pathname = url.parse(req.url).pathname;</span><br><span class="line">    <span class="keyword">var</span> realPath = path.join(DIR, pathname);</span><br><span class="line">    <span class="comment">//console.log(realPath);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> ext = path.extname(realPath);</span><br><span class="line">    ext = ext ? ext.slice(<span class="number">1</span>) : <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">    fs.exists(realPath, <span class="function"><span class="keyword">function</span> (<span class="params">exists</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!exists) &#123;</span><br><span class="line">            <span class="keyword">var</span> data=&#123;&#125;;</span><br><span class="line">            <span class="keyword">if</span>(req.url == <span class="string">&quot;/common/user/login&quot;</span>)&#123;</span><br><span class="line">                data=&#123;</span><br><span class="line">                    <span class="attr">rlt_code</span>:<span class="string">&#x27;HH0000&#x27;</span>,</span><br><span class="line">                    <span class="attr">rlt_msg</span>:<span class="string">&#x27;成功&#x27;</span>,</span><br><span class="line">                    <span class="attr">data</span>:&#123;</span><br><span class="line">                        <span class="attr">access_token</span>:<span class="string">&#x27;token_zjf&#x27;</span>,</span><br><span class="line">                        <span class="attr">open_id</span>:<span class="string">&#x27;open_id123&#x27;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line">                res.writeHead(<span class="number">200</span>, &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json;charset=UTF-8&quot;</span> &#125;);</span><br><span class="line">                res.end(<span class="built_in">JSON</span>.stringify(data));</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(req.url == <span class="string">&quot;/common/user/register&quot;</span>)&#123;</span><br><span class="line">                data=&#123;</span><br><span class="line">                    <span class="attr">rlt_code</span>:<span class="string">&#x27;HH0000&#x27;</span>,</span><br><span class="line">                    <span class="attr">rlt_msg</span>:<span class="string">&#x27;成功&#x27;</span></span><br><span class="line">                &#125;;</span><br><span class="line">                res.writeHead(<span class="number">200</span>, &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json;charset=UTF-8&quot;</span> &#125;);</span><br><span class="line">                res.end(<span class="built_in">JSON</span>.stringify(data));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                res.writeHead(<span class="number">404</span>, &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/plain&quot;</span> &#125;);</span><br><span class="line">                res.end(<span class="string">&quot;404 error! File not found.!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/*res.write(&quot;This request URL &quot; + pathname + &quot; was not found on this server.&quot;);</span></span><br><span class="line"><span class="comment">            res.end();*/</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(ext==<span class="string">&#x27;html&#x27;</span>)&#123;</span><br><span class="line"></span><br><span class="line">                fs.readFile(realPath, <span class="string">&quot;utf-8&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, file</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">/*</span></span><br><span class="line"><span class="comment">                    * ---</span></span><br><span class="line"><span class="comment">                    * ---&lt;*- /layout/footer.ejs |||| &#123;&quot;active&quot;:4&#125;  -*&gt;</span></span><br><span class="line"><span class="comment">                    * ---&lt;*- /layout/footer.ejs |||| &#123;&#125;  -*&gt;</span></span><br><span class="line"><span class="comment">                    * ---</span></span><br><span class="line"><span class="comment">                    */</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">/*</span></span><br><span class="line"><span class="comment">                    * ---   &lt;</span></span><br><span class="line"><span class="comment">                    if(typeof isPageLogin==&#x27;boolean&#x27;)&#123;</span></span><br><span class="line"><span class="comment">                    &gt;</span></span><br><span class="line"><span class="comment">                                        * ---       &lt;html class=&quot;reghtml&quot;&gt;</span></span><br><span class="line"><span class="comment">                                        * ---   &lt;</span></span><br><span class="line"><span class="comment">                    &#125;else&#123;</span></span><br><span class="line"><span class="comment">                    &gt;</span></span><br><span class="line"><span class="comment">                                        * ---       &lt;html&gt;</span></span><br><span class="line"><span class="comment">                                        * ---   &lt;</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">                    &gt;</span></span><br><span class="line"><span class="comment">                    */</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">var</span> flag=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">while</span> (flag)&#123;</span><br><span class="line">                        <span class="keyword">var</span> start=file.indexOf(<span class="string">&#x27;&lt;*-&#x27;</span>), end=<span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">if</span>(start&gt;=<span class="number">0</span>) &#123;</span><br><span class="line">                            end = file.indexOf(<span class="string">&#x27;-*&gt;&#x27;</span>);</span><br><span class="line">                            <span class="keyword">var</span> str = file.substring(start, end + <span class="number">3</span>);</span><br><span class="line">                            <span class="keyword">var</span> str2=str.substring(<span class="number">3</span>,str.length-<span class="number">3</span>);</span><br><span class="line">                            <span class="keyword">var</span> str2Arr=str2.split(<span class="string">&#x27;||||&#x27;</span>);</span><br><span class="line">                            str2Arr[<span class="number">0</span>]=str2Arr[<span class="number">0</span>].replace(<span class="regexp">/(^\s*)|(\s*$)/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                            str2Arr[<span class="number">1</span>]=str2Arr[<span class="number">1</span>].replace(<span class="regexp">/(^\s*)|(\s*$)/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                            <span class="comment">/**/</span></span><br><span class="line">                            <span class="keyword">var</span> str1=fs.readFileSync(__dirname + str2Arr[<span class="number">0</span>], <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">                            <span class="keyword">var</span> o=&#123;&#125;;</span><br><span class="line">                            <span class="keyword">try</span>&#123;</span><br><span class="line">                                o=<span class="built_in">JSON</span>.parse(str2Arr[<span class="number">1</span>]);</span><br><span class="line">                                <span class="keyword">var</span> returnStr=ejs.render(str1,o);</span><br><span class="line">                                file=file.replace(str,returnStr);</span><br><span class="line">                            &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">                                <span class="built_in">console</span>.log(<span class="string">&#x27;模板入参转换json出错&#x27;</span>);</span><br><span class="line">                                res.writeHead(<span class="number">200</span>, &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain; charset=utf-8&#x27;</span> &#125;);</span><br><span class="line">                                res.end(<span class="string">&#x27;模板入参转换json出错&#x27;</span>,<span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="comment">/**/</span></span><br><span class="line"></span><br><span class="line">                        &#125;<span class="keyword">else</span> flag=<span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//console.log(file);</span></span><br><span class="line">                    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                        res.writeHead(<span class="number">500</span>, &#123;</span><br><span class="line">                            <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain&#x27;</span></span><br><span class="line">                        &#125;);</span><br><span class="line">                        res.end(err);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">var</span> contentType = mine[ext] || <span class="string">&quot;text/plain&quot;</span>;</span><br><span class="line">                        res.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">                            <span class="string">&#x27;Content-Type&#x27;</span>: contentType</span><br><span class="line">                        &#125;);</span><br><span class="line">                        res.write(file, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                        res.end();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                fs.readFile(realPath, <span class="string">&quot;binary&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, file</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                        res.writeHead(<span class="number">500</span>, &#123;</span><br><span class="line">                            <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain&#x27;</span></span><br><span class="line">                        &#125;);</span><br><span class="line">                        res.end(err);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">var</span> contentType = mine[ext] || <span class="string">&quot;text/plain&quot;</span>;</span><br><span class="line">                        res.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">                            <span class="string">&#x27;Content-Type&#x27;</span>: contentType</span><br><span class="line">                        &#125;);</span><br><span class="line">                        res.write(file, <span class="string">&quot;binary&quot;</span>);</span><br><span class="line">                        res.end();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">server.listen(PORT);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;Server runing at port: &quot;</span> + PORT + <span class="string">&quot;.&quot;</span>);</span><br></pre></td></tr></table></figure>                </div>            </div>]]></content>
    
    
    <summary type="html">&lt;p&gt;再来个带inclue功能的，nodejs简易server环境及简易接口路由 写在一起 (2)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;grunt：搞定一些自动完成&lt;/strong&gt;&lt;br&gt;&lt;em&gt;[ autoprefixer, browser-sync, contrib-cssmin, contrib-jshint, contrib-less, contrib-uglify, contrib-watch, ejs, node-dev ]&lt;/em&gt;&lt;br&gt;&lt;strong&gt;node server.js：后台交互&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="服务端" scheme="https://zuitaibai.gitee.io/blog/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    <category term="nodejs" scheme="https://zuitaibai.gitee.io/blog/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/nodejs/"/>
    
    
    <category term="nodejs" scheme="https://zuitaibai.gitee.io/blog/tags/nodejs/"/>
    
    <category term="路由" scheme="https://zuitaibai.gitee.io/blog/tags/%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>nodejs简易server环境及简易接口路由写在一起</title>
    <link href="https://zuitaibai.gitee.io/blog/2016/05/27/%E6%9C%8D%E5%8A%A1%E7%AB%AF-nodejs-2016-05-27-nodejs%E7%AE%80%E6%98%93server%E7%8E%AF%E5%A2%83%E5%8F%8A%E7%AE%80%E6%98%93%E6%8E%A5%E5%8F%A3%E8%B7%AF%E7%94%B1%E5%86%99%E5%9C%A8%E4%B8%80%E8%B5%B7/"/>
    <id>https://zuitaibai.gitee.io/blog/2016/05/27/%E6%9C%8D%E5%8A%A1%E7%AB%AF-nodejs-2016-05-27-nodejs%E7%AE%80%E6%98%93server%E7%8E%AF%E5%A2%83%E5%8F%8A%E7%AE%80%E6%98%93%E6%8E%A5%E5%8F%A3%E8%B7%AF%E7%94%B1%E5%86%99%E5%9C%A8%E4%B8%80%E8%B5%B7/</id>
    <published>2016-05-27T03:14:36.000Z</published>
    <updated>2016-05-27T03:14:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>终于找到了门，再也不用install express一大坨了：<br>一段时间以来，把html加入server环境，同时调用后台接口数据这两个功能放在一块的一个简易实现，都是我想杜撰出的，今天ok了。<br>由于没有时间学习nodejs，匆忙使用时，还是拼出了前端开发html的node后端环境支持。。<br>这时就可以把html文件放入server环境，调用接口写假数据了。<br>如有大神看到，请帮我指正改成正宗的最好。。</p><blockquote><p>在不用fis的情况下，我的一个小流程是：<br> <strong>grunt：搞定一些自动完成</strong><br><em>[ autoprefixer, browser-sync, contrib-cssmin, contrib-jshint, contrib-less, contrib-uglify, contrib-watch ]</em><br><strong>node server.js：后台交互</strong><br>综目前全公司项目来说，目前已够用。</p></blockquote><span id="more"></span><h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> PORT = <span class="number">1337</span>, DIR = <span class="string">&#x27;.&#x27;</span>; <span class="comment">//用于存放html的目录</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>), url = <span class="built_in">require</span>(<span class="string">&#x27;url&#x27;</span>), fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>), path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> mine = &#123;</span><br><span class="line">    <span class="string">&quot;css&quot;</span>: <span class="string">&quot;text/css&quot;</span>,</span><br><span class="line">    <span class="string">&quot;gif&quot;</span>: <span class="string">&quot;image/gif&quot;</span>,</span><br><span class="line">    <span class="string">&quot;html&quot;</span>: <span class="string">&quot;text/html&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ico&quot;</span>: <span class="string">&quot;image/x-icon&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jpeg&quot;</span>: <span class="string">&quot;image/jpeg&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jpg&quot;</span>: <span class="string">&quot;image/jpeg&quot;</span>,</span><br><span class="line">    <span class="string">&quot;js&quot;</span>: <span class="string">&quot;text/javascript&quot;</span>,</span><br><span class="line">    <span class="string">&quot;json&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pdf&quot;</span>: <span class="string">&quot;application/pdf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;png&quot;</span>: <span class="string">&quot;image/png&quot;</span>,</span><br><span class="line">    <span class="string">&quot;svg&quot;</span>: <span class="string">&quot;image/svg+xml&quot;</span>,</span><br><span class="line">    <span class="string">&quot;swf&quot;</span>: <span class="string">&quot;application/x-shockwave-flash&quot;</span>,</span><br><span class="line">    <span class="string">&quot;tiff&quot;</span>: <span class="string">&quot;image/tiff&quot;</span>,</span><br><span class="line">    <span class="string">&quot;txt&quot;</span>: <span class="string">&quot;text/plain&quot;</span>,</span><br><span class="line">    <span class="string">&quot;wav&quot;</span>: <span class="string">&quot;audio/x-wav&quot;</span>,</span><br><span class="line">    <span class="string">&quot;wma&quot;</span>: <span class="string">&quot;audio/x-ms-wma&quot;</span>,</span><br><span class="line">    <span class="string">&quot;wmv&quot;</span>: <span class="string">&quot;video/x-ms-wmv&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xml&quot;</span>: <span class="string">&quot;text/xml&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> pathname = url.parse(req.url).pathname;</span><br><span class="line">    <span class="keyword">var</span> realPath = path.join(DIR, pathname);</span><br><span class="line">    <span class="comment">//console.log(realPath);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> ext = path.extname(realPath);</span><br><span class="line">    ext = ext ? ext.slice(<span class="number">1</span>) : <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">    fs.exists(realPath, <span class="function"><span class="keyword">function</span> (<span class="params">exists</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!exists) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(req.url == <span class="string">&quot;/common/user/login&quot;</span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> data=&#123;</span><br><span class="line">                    <span class="attr">rlt_code</span>:<span class="string">&#x27;HH0000&#x27;</span>,</span><br><span class="line">                    <span class="attr">rlt_msg</span>:<span class="string">&#x27;成功&#x27;</span>,</span><br><span class="line">                    <span class="attr">data</span>:&#123;</span><br><span class="line">                        <span class="attr">access_token</span>:<span class="string">&#x27;token_zjf&#x27;</span>,</span><br><span class="line">                        <span class="attr">open_id</span>:<span class="string">&#x27;open_id123&#x27;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line">                res.writeHead(<span class="number">200</span>, &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json;charset=UTF-8&quot;</span> &#125;);</span><br><span class="line">                res.end(<span class="built_in">JSON</span>.stringify(data));</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(req.url == <span class="string">&quot;/common/user/register&quot;</span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> data=&#123;</span><br><span class="line">                    <span class="attr">rlt_code</span>:<span class="string">&#x27;HH0000&#x27;</span>,</span><br><span class="line">                    <span class="attr">rlt_msg</span>:<span class="string">&#x27;成功&#x27;</span></span><br><span class="line">                &#125;;</span><br><span class="line">                res.writeHead(<span class="number">200</span>, &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json;charset=UTF-8&quot;</span> &#125;);</span><br><span class="line">                res.end(<span class="built_in">JSON</span>.stringify(data));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                res.writeHead(<span class="number">404</span>, &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/plain&quot;</span> &#125;);</span><br><span class="line">                res.end(<span class="string">&quot;404 error! File not found.!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            fs.readFile(realPath, <span class="string">&quot;binary&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, file</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                    res.writeHead(<span class="number">500</span>, &#123;</span><br><span class="line">                        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain&#x27;</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                    res.end(err);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">var</span> contentType = mine[ext] || <span class="string">&quot;text/plain&quot;</span>;</span><br><span class="line">                    res.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">                        <span class="string">&#x27;Content-Type&#x27;</span>: contentType</span><br><span class="line">                    &#125;);</span><br><span class="line">                    res.write(file, <span class="string">&quot;binary&quot;</span>);</span><br><span class="line">                    res.end();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">server.listen(PORT);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;Server runing at port: &quot;</span> + PORT + <span class="string">&quot;.&quot;</span>);</span><br></pre></td></tr></table></figure>                </div>            </div>]]></content>
    
    
    <summary type="html">&lt;p&gt;终于找到了门，再也不用install express一大坨了：&lt;br&gt;一段时间以来，把html加入server环境，同时调用后台接口数据这两个功能放在一块的一个简易实现，都是我想杜撰出的，今天ok了。&lt;br&gt;由于没有时间学习nodejs，匆忙使用时，还是拼出了前端开发html的node后端环境支持。。&lt;br&gt;这时就可以把html文件放入server环境，调用接口写假数据了。&lt;br&gt;如有大神看到，请帮我指正改成正宗的最好。。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在不用fis的情况下，我的一个小流程是：&lt;br&gt; &lt;strong&gt;grunt：搞定一些自动完成&lt;/strong&gt;&lt;br&gt;&lt;em&gt;[ autoprefixer, browser-sync, contrib-cssmin, contrib-jshint, contrib-less, contrib-uglify, contrib-watch ]&lt;/em&gt;&lt;br&gt;&lt;strong&gt;node server.js：后台交互&lt;/strong&gt;&lt;br&gt;综目前全公司项目来说，目前已够用。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="服务端" scheme="https://zuitaibai.gitee.io/blog/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    <category term="nodejs" scheme="https://zuitaibai.gitee.io/blog/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/nodejs/"/>
    
    
    <category term="nodejs" scheme="https://zuitaibai.gitee.io/blog/tags/nodejs/"/>
    
    <category term="路由" scheme="https://zuitaibai.gitee.io/blog/tags/%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>javascript动画实现（转）</title>
    <link href="https://zuitaibai.gitee.io/blog/2016/05/27/Ecmascript-2016-05-27-javascript%E5%8A%A8%E7%94%BB%E5%AE%9E%E7%8E%B0%EF%BC%88%E8%BD%AC%EF%BC%89/"/>
    <id>https://zuitaibai.gitee.io/blog/2016/05/27/Ecmascript-2016-05-27-javascript%E5%8A%A8%E7%94%BB%E5%AE%9E%E7%8E%B0%EF%BC%88%E8%BD%AC%EF%BC%89/</id>
    <published>2016-05-27T02:58:14.000Z</published>
    <updated>2016-05-27T02:58:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><span id="more"></span><h1 id="html-Code"><a href="#html-Code" class="headerlink" title="html Code"></a>html Code</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">&quot;-//W3C//DTD HTML 4.01//EN&quot;</span> <span class="string">&quot;http://www.w3.org/TR/html4/strict.dtd&quot;</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span>/&gt;</span><br><span class="line">    &lt;title&gt;动画组件&lt;/title&gt;</span><br><span class="line">    &lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;FX.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;style <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">        <span class="comment">#motion&#123;</span></span><br><span class="line">            background:<span class="comment">#ccc;</span></span><br><span class="line">            width:500px;</span><br><span class="line">            height:500px;</span><br><span class="line">            position:relative;</span><br><span class="line">            overflow:hidden;</span><br><span class="line">            <span class="built_in">float</span>:left;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#motion #ball&#123;</span></span><br><span class="line">            width:40px;</span><br><span class="line">            height:40px;</span><br><span class="line">            background:red;</span><br><span class="line">            position:absolute;</span><br><span class="line">            *font-size:0px;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#motion #flag&#123;</span></span><br><span class="line">            background:yellow;</span><br><span class="line">            width:4px;</span><br><span class="line">            height:4px;</span><br><span class="line">            position:absolute;</span><br><span class="line">            *font-size:0px;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#status&#123;</span></span><br><span class="line">            <span class="built_in">float</span>:left;</span><br><span class="line">            margin:0px 10px;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#status .item&#123;</span></span><br><span class="line">            margin:1em 0px;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#chart&#123;</span></span><br><span class="line">            *zoom:1;</span><br><span class="line">            margin:0px 20px 10px 0px;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#chart&#123;</span></span><br><span class="line">            position:relative;</span><br><span class="line">            width:250px;</span><br><span class="line">            height:250px;</span><br><span class="line">            background:<span class="comment">#eaeaea;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#chart div&#123;</span></span><br><span class="line">            width:4px;</span><br><span class="line">            height:4px;</span><br><span class="line">            cursor:pointer;</span><br><span class="line">            background:green;</span><br><span class="line">            position:absolute;</span><br><span class="line">            *font-size:0px;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#chart:selected&#123;</span></span><br><span class="line">            background:red;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;container&quot;</span>&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;motion&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;status&quot;</span>&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;item&quot;</span>&gt; 时长（毫秒）： &lt;select id=<span class="string">&quot;duration&quot;</span>&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;100&quot;</span>&gt;100&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;200&quot;</span>&gt;200&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;300&quot;</span> selected=<span class="string">&quot;selected&quot;</span>&gt;300&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;500&quot;</span>&gt;500&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;800&quot;</span>&gt;800&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;1000&quot;</span>&gt;1000&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;1200&quot;</span>&gt;1200&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;1500&quot;</span>&gt;1500&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;1800&quot;</span>&gt;1800&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;2000&quot;</span>&gt;2000&lt;/option&gt;</span><br><span class="line">        &lt;/select&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;item&quot;</span>&gt; FPS： &lt;select id=<span class="string">&quot;fps&quot;</span>&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;5&quot;</span>&gt;5&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;10&quot;</span>&gt;10&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;20&quot;</span>&gt;20&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;24&quot;</span> selected=<span class="string">&quot;selected&quot;</span>&gt;24&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;35&quot;</span>&gt;35&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;50&quot;</span>&gt;50&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;80&quot;</span>&gt;80&lt;/option&gt;</span><br><span class="line">        &lt;/select&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;item&quot;</span>&gt; 动画类型： &lt;select id=<span class="string">&quot;type&quot;</span>&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;simple&quot;</span>&gt;simple&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;regularEaseIn&quot;</span>&gt;regularEaseIn&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;regularEaseOut&quot;</span>&gt;regularEaseOut&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;regularEaseInOut&quot;</span>&gt;regularEaseInOut&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;backEaseIn&quot;</span>&gt;backEaseIn&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;backEaseOut&quot;</span>&gt;backEaseOut&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;backEaseInOut&quot;</span>&gt;backEaseInOut&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;bounceEaseOut&quot;</span>&gt;bounceEaseOut&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;bounceEaseIn&quot;</span>&gt;bounceEaseIn&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;bounceEaseInOut&quot;</span>&gt;bounceEaseInOut&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;strongEaseIn&quot;</span>&gt;strongEaseIn&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;strongEaseOut&quot;</span>&gt;strongEaseOut&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;strongEaseInOut&quot;</span>&gt;strongEaseInOut&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;elasticEaseIn&quot;</span>&gt;elasticEaseIn&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;elasticEaseOut&quot;</span>&gt;elasticEaseOut&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;elasticEaseInOut&quot;</span>&gt;elasticEaseInOut&lt;/option&gt;</span><br><span class="line">        &lt;/select&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;item&quot;</span>&gt;</span><br><span class="line">            &lt;div&gt;运动轨迹：&lt;/div&gt;</span><br><span class="line">            &lt;div id=<span class="string">&quot;chart&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;item&quot;</span>&gt;</span><br><span class="line">            &lt;div id=<span class="string">&quot;result&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    var motionContainer = document.getElementById(<span class="string">&#x27;motion&#x27;</span>);</span><br><span class="line">    var ball = document.createElement(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    var flag = document.createElement(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    var chart = document.getElementById(<span class="string">&#x27;chart&#x27;</span>);</span><br><span class="line">    var <span class="built_in">type</span> = document.getElementById(<span class="string">&#x27;type&#x27;</span>);</span><br><span class="line">    var duration = document.getElementById(<span class="string">&#x27;duration&#x27;</span>);</span><br><span class="line">    var fps = document.getElementById(<span class="string">&#x27;fps&#x27;</span>);</span><br><span class="line">    var result = document.getElementById(<span class="string">&#x27;result&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    type.options.length = 0;</span><br><span class="line">    /*</span><br><span class="line">     * QQ邮箱使用的为Cubic + easeOut/easeIn 200ms(展开收起文件夹)</span><br><span class="line">     * Sine + easeOut/easeIn 300ms 弹出框 from:-30 to 0</span><br><span class="line">     * fast:200ms slow:600ms</span><br><span class="line">     */</span><br><span class="line">    <span class="keyword">for</span> (var i <span class="keyword">in</span> Fx.transitions) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Fx.transitions.hasOwnProperty(i)) &#123;</span><br><span class="line">            var opt = document.createElement(<span class="string">&quot;option&quot;</span>);</span><br><span class="line">            opt.value = i;</span><br><span class="line">            opt.innerHTML = i;</span><br><span class="line">            type.appendChild(opt);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> setPosition(el, position) &#123;</span><br><span class="line">        el.style.left = position[0] + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        el.style.top = position[1] + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ;</span><br><span class="line"></span><br><span class="line">    ball.id = <span class="string">&quot;ball&quot;</span>;</span><br><span class="line">    flag.id = <span class="string">&quot;flag&quot;</span>;</span><br><span class="line">    motionContainer.appendChild(ball);</span><br><span class="line">    motionContainer.appendChild(flag);</span><br><span class="line"></span><br><span class="line">    var fx = null;</span><br><span class="line"></span><br><span class="line">    motionContainer.onclick = <span class="keyword">function</span> (ev) &#123;</span><br><span class="line">        ev = ev || window.event;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (fx) &#123;</span><br><span class="line">            fx.pause();</span><br><span class="line">        &#125;</span><br><span class="line">        var position = &#123;</span><br><span class="line">            <span class="string">&#x27;left&#x27;</span>: &#123;from: parseInt(ball.style.left) || 0, to: ev.clientX || ev.pageX&#125;,</span><br><span class="line">            <span class="string">&#x27;top&#x27;</span>: &#123;from: parseInt(ball.style.top) || 0, to: ev.clientY || ev.pageY&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        chart.innerHTML = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        setPosition(flag, [position.left.to, position.top.to]);</span><br><span class="line"></span><br><span class="line">        // 动画逻辑</span><br><span class="line">        var d = duration.options[duration.selectedIndex || 0].value / 1000;</span><br><span class="line">        var t = type.options[type.selectedIndex || 0].value;</span><br><span class="line"></span><br><span class="line">        fx = new Fx(ball, position, d, t);</span><br><span class="line">        //设置帧频</span><br><span class="line">        fx.setFrequency(fps.options[fps.selectedIndex || 0].value);</span><br><span class="line"></span><br><span class="line">        fx.onMotionStart = <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">            var res = [</span><br><span class="line">                <span class="string">&#x27;动画类型：&#x27;</span> + this._animateType,</span><br><span class="line">                <span class="string">&#x27;帧率为：：&#x27;</span> + this._freq,</span><br><span class="line">                <span class="string">&#x27;指定运行：&#x27;</span> + this._duration + <span class="string">&#x27;秒&#x27;</span></span><br><span class="line">            ];</span><br><span class="line">            result.innerHTML = res.join(<span class="string">&#x27;&lt;br /&gt;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            Chart.apply(this);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fx.onMotionStop = <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fx.onMotionChange = <span class="keyword">function</span> (time) &#123;</span><br><span class="line">            var dot = document.createElement(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">            var x = position.left, y = position.top;</span><br><span class="line">            var move = &#123;x: this._ease(x.from, x.to, time), y: this._ease(y.from, y.to, time)&#125;;</span><br><span class="line">            var dotx = move.x / motionContainer.clientWidth * chart.clientWidth;</span><br><span class="line">            var doty = move.y / motionContainer.clientHeight * chart.clientHeight;</span><br><span class="line">            setPosition(dot, [dotx, doty]);</span><br><span class="line">            chart.appendChild(dot);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fx.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">Chart</span></span>() &#123;</span><br><span class="line">        var iChart = 550;</span><br><span class="line"></span><br><span class="line">        var a = [];</span><br><span class="line">        <span class="keyword">for</span> (var i = 0; i &lt; iChart; i++) &#123;</span><br><span class="line">            a.push(<span class="string">&#x27;&lt;div style=&quot;background-color:#f60;font-size:0;width:3px;height:3px;position:absolute;left:&#x27;</span> + (i - 1) + <span class="string">&#x27;px;top:&#x27;</span> + (Math.ceil(this._func(i, 200, -200, iChart))) + <span class="string">&#x27;px;&quot;&gt;&lt;\/div&gt;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        document.getElementById(<span class="string">&quot;idChart&quot;</span>).innerHTML = a.join(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;idChart&quot;</span></span><br><span class="line">     style=<span class="string">&quot;border:1px solid #000;height:200px; width:550px; margin-top:20px; position:relative; clear:both; margin-top:10px;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="FX-js-Code"><a href="#FX-js-Code" class="headerlink" title="FX.js Code"></a>FX.js Code</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @author ZhangYi</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *</span><br><span class="line"> * @param &#123;HTMLElement|String&#125; el HTMLElement|DOM对象</span><br><span class="line"> * @param &#123;Object|null&#125; attributes 执行动画时需要更新的属性值</span><br><span class="line"> * @param &#123;Number&#125; duration 动画执行时间</span><br><span class="line"> * @param &#123;String|Null&#125; transition 动画算子函数</span><br><span class="line"> */</span><br><span class="line"><span class="keyword">function</span> Fx(el, attributes, duration, func) &#123;</span><br><span class="line">    this._obj = Fx.DOM.get(el);</span><br><span class="line">    this._attributes = attributes || &#123;&#125;;</span><br><span class="line">    this._duration = duration || 10;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!!func &amp;&amp; typeof(Fx.transitions[func]) === <span class="string">&quot;function&quot;</span>) &#123;</span><br><span class="line">        this._animateType = func;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        this._animateType = <span class="string">&quot;simple&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    this._func = Fx.transitions[this._animateType];</span><br><span class="line"></span><br><span class="line">    this.isPlayed = <span class="literal">false</span>;</span><br><span class="line">    this.isLoop = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    this._intervalTimer = null;</span><br><span class="line">    this._startTime = 0;</span><br><span class="line">    this._moveTime = 0;</span><br><span class="line"></span><br><span class="line">    //动画执行频率</span><br><span class="line">    this._freq = 24;</span><br><span class="line"></span><br><span class="line">    this.units = &#123;&#125;;</span><br><span class="line">    this.frame = &#123;&#125;;</span><br><span class="line">    this.endAttr = &#123;&#125;;</span><br><span class="line">    this.startAttr = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    //开始执行动画</span><br><span class="line">    this.onMotionStart = <span class="function"><span class="title">function</span></span>() &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    //动画正在执行</span><br><span class="line">    this.onMotionChange = <span class="function"><span class="title">function</span></span>() &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    //动画执行结束</span><br><span class="line">    this.onMotionStop = <span class="function"><span class="title">function</span></span>() &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> this;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Fx.prototype = &#123;</span><br><span class="line">    //启动定时器执行动画</span><br><span class="line">    _runTime : <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        clearInterval(this._intervalTimer);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (this.isPlayed) &#123;</span><br><span class="line">            this._moveTime = new Date().getTime() - this._startTime;</span><br><span class="line"></span><br><span class="line">            this._playTime( (this._moveTime) / 1000 );</span><br><span class="line"></span><br><span class="line">            var <span class="variable">$pointer</span> = this;</span><br><span class="line">            var delay = Math.floor(1000 / this._freq);</span><br><span class="line"></span><br><span class="line">            this._intervalTimer = setInterval(<span class="function"><span class="title">function</span></span>() &#123;<span class="variable">$pointer</span>._runTime.apply(<span class="variable">$pointer</span>);&#125;, delay);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    /**</span><br><span class="line">     * 定时器启动时执行的动画</span><br><span class="line">     * @param &#123;Number&#125; time</span><br><span class="line">     */</span><br><span class="line">    _playTime : <span class="keyword">function</span>(time) &#123;</span><br><span class="line">        var _isEnd = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (time &gt; this._duration) &#123;</span><br><span class="line">            time = this._duration;</span><br><span class="line">            _isEnd = <span class="literal">true</span>;</span><br><span class="line">            this.frame = Fx.objectClone(this.endAttr);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span>(attr <span class="keyword">in</span> this.startAttr)&#123;</span><br><span class="line">                <span class="keyword">if</span>( <span class="string">&#x27;[object Array]&#x27;</span> === Object.prototype.toString.apply(this.startAttr[attr]) )&#123;</span><br><span class="line">                    this.frame[attr] = [];</span><br><span class="line">                    <span class="keyword">for</span>(var i=0; i &lt; this.startAttr[attr].length; i++)&#123;</span><br><span class="line">                        this.frame[attr][i] = this._ease(this.startAttr[attr][i], this.endAttr[attr][i], time);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    this.frame[attr] = this._ease(this.startAttr[attr], this.endAttr[attr], time);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        this.setAttributes();</span><br><span class="line">        this.onMotionChange.apply(this, arguments);</span><br><span class="line"></span><br><span class="line">        // 判断是否播放结束</span><br><span class="line">        <span class="keyword">if</span> (_isEnd) &#123;</span><br><span class="line">            this.isPlayed = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            this.onMotionStop.apply(this);</span><br><span class="line"></span><br><span class="line">            // 循环播放</span><br><span class="line">            <span class="keyword">if</span> (this.isLoop) &#123;</span><br><span class="line">                this.isPlayed = <span class="literal">true</span>;</span><br><span class="line">                this.frame = Fx.objectClone(this.startAttr);</span><br><span class="line">                this._reloadTimer();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (window.CollectGarbage) &#123;</span><br><span class="line">                CollectGarbage();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    //重新计算动画开始时间</span><br><span class="line">    _reloadTimer : <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        this._startTime = +new Date();</span><br><span class="line">    &#125;,</span><br><span class="line">    /**</span><br><span class="line">     * 调用动画算子函数，返回执行结果</span><br><span class="line">     *</span><br><span class="line">     * @param &#123;Number&#125; start</span><br><span class="line">     * @param &#123;Number&#125; end</span><br><span class="line">     * @param &#123;Number&#125; time</span><br><span class="line">     */</span><br><span class="line">    _ease : <span class="keyword">function</span>(start, end, time) &#123;</span><br><span class="line">        <span class="built_in">return</span> this._func(time, start, end - start, this._duration);</span><br><span class="line">    &#125;,</span><br><span class="line">    /**</span><br><span class="line">     * 设置动画执行的频率 1秒执行多少次</span><br><span class="line">     */</span><br><span class="line">    setFrequency : <span class="keyword">function</span>(freq) &#123;</span><br><span class="line">        this._freq = freq;</span><br><span class="line">    &#125;,</span><br><span class="line">    /**</span><br><span class="line">     * 开始播放动画</span><br><span class="line">     * @param &#123;Boolean&#125; loop</span><br><span class="line">     */</span><br><span class="line">    start : <span class="keyword">function</span>(loop) &#123;</span><br><span class="line">        this.getAttributes();</span><br><span class="line">        this._reloadTimer();</span><br><span class="line"></span><br><span class="line">        this._start.apply(this, arguments);</span><br><span class="line">    &#125;,</span><br><span class="line">    /**</span><br><span class="line">     * 共用的开始执行动画函数</span><br><span class="line">     * @param &#123;Boolean&#125; loop</span><br><span class="line">     */</span><br><span class="line">    _start : <span class="keyword">function</span>(loop) &#123;</span><br><span class="line">        this.isPlayed = <span class="literal">true</span>;</span><br><span class="line">        this.isLoop = loop ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">        this._runTime();</span><br><span class="line">        this.onMotionStart.apply(this);</span><br><span class="line">    &#125;,</span><br><span class="line">    /**</span><br><span class="line">     * 继续播放</span><br><span class="line">     * @param &#123;Boolean&#125; loop</span><br><span class="line">     */</span><br><span class="line">    play : <span class="keyword">function</span>(loop) &#123;</span><br><span class="line">        this._startTime = +new Date() - this._moveTime;</span><br><span class="line"></span><br><span class="line">        this._start.apply(this, arguments);</span><br><span class="line">    &#125;,</span><br><span class="line">    /**</span><br><span class="line">     * 重新播放</span><br><span class="line">     * @param &#123;Boolean&#125; loop 是否循环播放动画</span><br><span class="line">     */</span><br><span class="line">    rePlay : <span class="keyword">function</span>(loop) &#123;</span><br><span class="line">        this._reloadTimer();</span><br><span class="line"></span><br><span class="line">        this._start.apply(this, arguments);</span><br><span class="line">    &#125;,</span><br><span class="line">    /**</span><br><span class="line">     * 暂停播放动画</span><br><span class="line">     */</span><br><span class="line">    pause : <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        this.isPlayed = <span class="literal">false</span>;</span><br><span class="line">        this.isLoop = <span class="literal">false</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    /**</span><br><span class="line">     * 停止播放动画</span><br><span class="line">     */</span><br><span class="line">    stop : <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        this.pause();</span><br><span class="line"></span><br><span class="line">        this._playTime(this._duration + 0.1);</span><br><span class="line">    &#125;,</span><br><span class="line">    getAttributes : <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        <span class="keyword">for</span>(var attr <span class="keyword">in</span> this._attributes) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!this._attributes.hasOwnProperty(attr)) &#123;</span><br><span class="line">                <span class="built_in">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            switch(attr)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;color&#x27;</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;borderColor&#x27;</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;border-color&#x27;</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;backgroundColor&#x27;</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;background-color&#x27;</span>:</span><br><span class="line">                    this.startAttr[attr] = Fx.parseColor(this._attributes[attr].from || Fx.DOM.getStyle(this._obj, attr));</span><br><span class="line">                    this.endAttr[attr] = Fx.parseColor(this._attributes[attr].to);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;scrollTop&#x27;</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;scrollLeft&#x27;</span>:</span><br><span class="line">                    var el = (this._obj === document.body) ? (/AppleWebKit/i.test(navigator.userAgent) ? document.body : document.documentElement) : this._obj;</span><br><span class="line"></span><br><span class="line">                    var start = this._attributes[attr].from || el[attr];</span><br><span class="line">                    var end = this._attributes[attr].to;</span><br><span class="line">                    <span class="keyword">if</span>(end &amp;&amp; /^([+-])(\d+)$/.<span class="built_in">test</span>(this._attributes[attr].to)) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="string">&quot;+&quot;</span> === RegExp[<span class="string">&#x27;$1&#x27;</span>]) &#123;</span><br><span class="line">                            end = start + RegExp[<span class="string">&#x27;$2&#x27;</span>]*1;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            end = start - RegExp[<span class="string">&#x27;$2&#x27;</span>]*1;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    this.startAttr[attr] = start;</span><br><span class="line">                    this.endAttr[attr] = end;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                default:</span><br><span class="line">                    var start = parseFloat(this._attributes[attr].from);</span><br><span class="line">                    var end = parseFloat(this._attributes[attr].to);</span><br><span class="line">                    var units = this._attributes[attr].units || <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(attr !== <span class="string">&quot;opacity&quot;</span> &amp;&amp; !units) &#123;</span><br><span class="line">                        units = <span class="string">&quot;px&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(!start) &#123;</span><br><span class="line">                        start = parseFloat(Fx.DOM.getStyle(this._obj, attr)) || 0;//会转换成px</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span>(units != <span class="string">&quot;px&quot;</span> &amp;&amp; document.defaultView)&#123;</span><br><span class="line">                            Fx.DOM.setStyle(this._obj, attr, start + units);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(end &amp;&amp; /^([+-])(\d+)$/.<span class="built_in">test</span>(this._attributes[attr].to)) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="string">&quot;+&quot;</span> === RegExp[<span class="string">&#x27;$1&#x27;</span>]) &#123;</span><br><span class="line">                            end = start + RegExp[<span class="string">&#x27;$2&#x27;</span>]*1;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            end = start - RegExp[<span class="string">&#x27;$2&#x27;</span>]*1;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    this.units[attr] = units;</span><br><span class="line">                    this.endAttr[attr] = end;</span><br><span class="line">                    this.startAttr[attr] = start;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    setAttributes : <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        <span class="keyword">for</span>(var attr <span class="keyword">in</span> this.frame)&#123;</span><br><span class="line">            switch(attr) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;opacity&#x27;</span>:</span><br><span class="line">                    Fx.DOM.setStyle(this._obj, attr, this.frame[attr]);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;scrollLeft&#x27;</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;scrollTop&#x27;</span>:</span><br><span class="line">                    var el = (this._obj === document.body) ? (/AppleWebKit/i.test(navigator.userAgent) ? document.body : document.documentElement) : this._obj;</span><br><span class="line">                    el[attr] = this.frame[attr];</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;color&#x27;</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;borderColor&#x27;</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;border-color&#x27;</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;backgroundColor&#x27;</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;background-color&#x27;</span>:</span><br><span class="line">                    var rgb = <span class="string">&#x27;rgb(&#x27;</span>+Math.floor(this.frame[attr][0])+<span class="string">&#x27;,&#x27;</span>+Math.floor(this.frame[attr][1])+<span class="string">&#x27;,&#x27;</span>+Math.floor(this.frame[attr][2])+<span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">                    Fx.DOM.setStyle(this._obj, attr, rgb);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                default:</span><br><span class="line">                    Fx.DOM.setStyle(this._obj, attr, this.frame[attr] + this.units[attr]);</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    //获取当前动画已经执行的百分比</span><br><span class="line">    getPercent : <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        var percent = this._moveTime/(this._duration*1000);</span><br><span class="line">        percent = Math.min(percent, 1);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> Math.floor(percent*100) + <span class="string">&quot;%&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Fx.DOM = &#123;</span><br><span class="line">    /**</span><br><span class="line">     * 获取DOM节点</span><br><span class="line">     * @param &#123;String&#125; 需要查找的元素的ID</span><br><span class="line">     * @<span class="built_in">return</span> &#123;Element&#125; 返回DOM对象</span><br><span class="line">     */</span><br><span class="line">    get: <span class="keyword">function</span>(id)&#123;</span><br><span class="line">        <span class="built_in">return</span> (typeof id === <span class="string">&quot;string&quot;</span>) ? document.getElementById(id) : id;</span><br><span class="line">    &#125;,</span><br><span class="line">    /**</span><br><span class="line">     * 获取元素的指定样式的属性</span><br><span class="line">     * @param &#123;Element&#125; el 目标元素</span><br><span class="line">     * @param &#123;String&#125; prop 属性名</span><br><span class="line">     * @<span class="built_in">return</span> &#123;Number&#125; 该元素的指定属性的属性值</span><br><span class="line">     */</span><br><span class="line">    getStyle: <span class="keyword">function</span>(el, prop)&#123;</span><br><span class="line">        prop = this.toCamelCase(prop);</span><br><span class="line">        var view = document.defaultView;</span><br><span class="line">        <span class="keyword">if</span>(view &amp;&amp; view.getComputedStyle)&#123;</span><br><span class="line">            <span class="built_in">return</span> view.getComputedStyle(el, <span class="string">&quot;&quot;</span>)[prop] || null;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(prop == <span class="string">&#x27;opacity&#x27;</span>)&#123;</span><br><span class="line">                var opacity = el.filters[<span class="string">&#x27;alpha&#x27;</span>] ? el.filters[<span class="string">&#x27;alpha&#x27;</span>][<span class="string">&#x27;opacity&#x27;</span>] : NaN;</span><br><span class="line">                <span class="built_in">return</span> isNaN(opacity) ? 1 : (opacity ? opacity / 100 : 0);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> el.currentStyle[prop] || null;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    /**</span><br><span class="line">     * 设置元素的样式属性</span><br><span class="line">     * @param &#123;Element&#125; el 目标元素</span><br><span class="line">     * @param &#123;String&#125; prop  属性名</span><br><span class="line">     * @param &#123;String&#125; value 属性值</span><br><span class="line">     */</span><br><span class="line">    setStyle: <span class="keyword">function</span>(el, prop, value)&#123;</span><br><span class="line">        <span class="keyword">if</span>(prop == <span class="string">&#x27;opacity&#x27;</span>)&#123;</span><br><span class="line">            el.style.filter = <span class="string">&quot;alpha(opacity=&quot;</span> + value * 100 + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">            el.style.opacity = value;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            prop = this.toCamelCase(prop);</span><br><span class="line">            <span class="keyword">if</span>(prop === <span class="string">&quot;height&quot;</span> || prop === <span class="string">&quot;width&quot;</span>) &#123;//避免出现负值</span><br><span class="line">                value = Math.max(0, parseInt(value, 10));</span><br><span class="line">            &#125;</span><br><span class="line">            el.style[prop] = value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    /**</span><br><span class="line">     * 将一个CSS属性转换为驼峰形式，例如(font-size --&gt; fontSize)</span><br><span class="line">     * @param &#123;String&#125; 需要转换的CSS属性</span><br><span class="line">     * @<span class="built_in">return</span> &#123;String&#125; 转换为驼峰式后的字符串</span><br><span class="line">     */</span><br><span class="line">    toCamelCase : (<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">        var cache = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> <span class="keyword">function</span>(str)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!cache[str])&#123;</span><br><span class="line">                var parts = str.split(<span class="string">&#x27;-&#x27;</span>), camel = parts[0];</span><br><span class="line">                <span class="keyword">if</span>(parts.length &gt; 1)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(var i=1, len=parts.length; i &lt; len; i++)&#123;</span><br><span class="line">                        camel += parts[i].charAt(0).toUpperCase() + parts[i].substring(1);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">return</span> cache[str] = camel;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">return</span> cache[str];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)()</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * 解析颜色值, 支持16进制与RGB颜色值(<span class="comment">#FFFFFF, #FFF, rgb(255, 0, 0))</span></span><br><span class="line"> * @param &#123;String&#125; 颜色值字符串</span><br><span class="line"> * @<span class="built_in">return</span> &#123;Array&#125; RGB的颜色数组，默认返白色</span><br><span class="line"> */</span><br><span class="line">Fx.parseColor = (<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    var hex6 = (/^<span class="comment">#?(\w&#123;2&#125;)(\w&#123;2&#125;)(\w&#123;2&#125;)$/);</span></span><br><span class="line">    var hex3 = (/^<span class="comment">#?(\w&#123;1&#125;)(\w&#123;1&#125;)(\w&#123;1&#125;)$/);</span></span><br><span class="line">    var rgb = (/^rgb\((\d&#123;1,3&#125;),\s*(\d&#123;1,3&#125;),\s*(\d&#123;1,3&#125;)\)$/);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> <span class="keyword">function</span>(str)&#123;</span><br><span class="line">        var color = str.match(hex6);</span><br><span class="line">        <span class="keyword">if</span>(color &amp;&amp; color.length == 4)&#123;</span><br><span class="line">            <span class="built_in">return</span> [parseInt(color[1], 16), parseInt(color[2], 16), parseInt(color[3], 16)];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        color = str.match(rgb);</span><br><span class="line">        <span class="keyword">if</span>(color &amp;&amp; color.length == 4)&#123;</span><br><span class="line">            <span class="built_in">return</span> [parseInt(color[1], 10), parseInt(color[2], 10), parseInt(color[3], 10)];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        color = str.match(hex3);</span><br><span class="line">        <span class="keyword">if</span>(color &amp;&amp; color.length == 4)&#123;</span><br><span class="line">            <span class="built_in">return</span> [parseInt(color[1] + color[1], 16), parseInt(color[2] + color[2], 16), parseInt(color[3] + color[3], 16)];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> [255, 255, 255];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 动画的算子函数</span><br><span class="line"> */</span><br><span class="line">Fx.transitions = &#123;</span><br><span class="line">    //linear</span><br><span class="line">    linearEase : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> c*t/d + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    simple : <span class="keyword">function</span>(time, startValue, changeValue, duration) &#123;</span><br><span class="line">        <span class="built_in">return</span> changeValue * time / duration + startValue;</span><br><span class="line">    &#125;,</span><br><span class="line">    //circ</span><br><span class="line">    circEaseIn : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> -c * (Math.sqrt(1 - (t/=d)*t) - 1) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    circEaseOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> c * Math.sqrt(1 - (t=t/d-1)*t) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    circEaseInOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((t/=d/2) &lt; 1) &#123;</span><br><span class="line">            <span class="built_in">return</span> -c/2 * (Math.sqrt(1 - t*t) - 1) + b;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> c/2 * (Math.sqrt(1 - (t-=2)*t) + 1) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    //cubic</span><br><span class="line">    cubicEaseIn : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> c*(t/=d)*t*t + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    cubicEaseOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> c*((t=t/d-1)*t*t + 1) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    cubicEaseInOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((t/=d/2) &lt; 1) &#123;</span><br><span class="line">            <span class="built_in">return</span> c/2*t*t*t + b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> c/2*((t-=2)*t*t + 2) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    //expo</span><br><span class="line">    expoEaseIn : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> (t==0) ? b : c * Math.pow(2, 10 * (t/d - 1)) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    expoEaseOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> (t==d) ? b+c : c * (-Math.pow(2, -10 * t/d) + 1) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    expoEaseInOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="keyword">if</span> (t==0) <span class="built_in">return</span> b;</span><br><span class="line">        <span class="keyword">if</span> (t==d) <span class="built_in">return</span> b+c;</span><br><span class="line">        <span class="keyword">if</span> ((t/=d/2) &lt; 1) <span class="built_in">return</span> c/2 * Math.pow(2, 10 * (t - 1)) + b;</span><br><span class="line">        <span class="built_in">return</span> c/2 * (-Math.pow(2, -10 * --t) + 2) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    //quad</span><br><span class="line">    quadEaseIn : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> c*(t/=d)*t + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    quadEaseOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> -c *(t/=d)*(t-2) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    quadEaseInOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((t/=d/2) &lt; 1) <span class="built_in">return</span> c/2*t*t + b;</span><br><span class="line">        <span class="built_in">return</span> -c/2 * ((--t)*(t-2) - 1) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    //quart</span><br><span class="line">    quartEaseIn : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> c*(t/=d)*t*t*t + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    quartEaseOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> -c * ((t=t/d-1)*t*t*t - 1) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    quartEaseInOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((t/=d/2) &lt; 1) <span class="built_in">return</span> c/2*t*t*t*t + b;</span><br><span class="line">        <span class="built_in">return</span> -c/2 * ((t-=2)*t*t*t - 2) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    //quint</span><br><span class="line">    quintEaseIn : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> c*(t/=d)*t*t*t*t + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    quintEaseOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> c*((t=t/d-1)*t*t*t*t + 1) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    quintEaseInOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((t/=d/2) &lt; 1) <span class="built_in">return</span> c/2*t*t*t*t*t + b;</span><br><span class="line">        <span class="built_in">return</span> c/2*((t-=2)*t*t*t*t + 2) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    //sine</span><br><span class="line">    sineEaseIn : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> -c * Math.cos(t/d * (Math.PI/2)) + c + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    sineEaseOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> c * Math.sin(t/d * (Math.PI/2)) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    sineEaseInOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> -c/2 * (Math.cos(Math.PI*t/d) - 1) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    //regular</span><br><span class="line">    regularEaseIn : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> c * (t /= d) * t + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    regularEaseOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> -c * (t /= d) * (t - 2) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    regularEaseInOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((t /= d / 2) &lt; 1) &#123;</span><br><span class="line">            <span class="built_in">return</span> c / 2 * t * t + b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> -c / 2 * ((--t) * (t - 2) - 1) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    //back</span><br><span class="line">    backEaseIn : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        var s = 1.70158;</span><br><span class="line">        <span class="built_in">return</span> c * (t /= d) * t * ((s + 1) * t - s) + b;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    backEaseOut : <span class="keyword">function</span>(t, b, c, d, a, p) &#123;</span><br><span class="line">        var s = 1.70158;</span><br><span class="line">        <span class="built_in">return</span> c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    backEaseInOut : <span class="keyword">function</span>(t, b, c, d, a, p) &#123;</span><br><span class="line">        var s = 1.70158;</span><br><span class="line">        <span class="keyword">if</span> ((t /= d / 2) &lt; 1) &#123;</span><br><span class="line">            <span class="built_in">return</span> c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    //bounce</span><br><span class="line">    bounceEaseOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((t /= d) &lt; (1 / 2.75)) &#123;</span><br><span class="line">            <span class="built_in">return</span> c * (7.5625 * t * t) + b;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &lt; (2 / 2.75)) &#123;</span><br><span class="line">            <span class="built_in">return</span> c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &lt; (2.5 / 2.75)) &#123;</span><br><span class="line">            <span class="built_in">return</span> c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">return</span> c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    bounceEaseIn : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> c - Fx.transitions.bounceEaseOut(d - t, 0, c, d) + b;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    bounceEaseInOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="keyword">if</span> (t &lt; d / 2) &#123;</span><br><span class="line">            <span class="built_in">return</span> Fx.transitions.bounceEaseIn(t * 2, 0, c, d) * 0.5 + b;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">return</span> Fx.transitions.bounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    //strong</span><br><span class="line">    strongEaseIn : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> c * (t /= d) * t * t * t * t + b;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    strongEaseOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="built_in">return</span> c * ((t = t / d - 1) * t * t * t * t + 1) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    strongEaseInOut : <span class="keyword">function</span>(t, b, c, d) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((t /= d / 2) &lt; 1) &#123;</span><br><span class="line">            <span class="built_in">return</span> c / 2 * t * t * t * t * t + b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> c / 2 * ((t -= 2) * t * t * t * t + 2) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    //elastic</span><br><span class="line">    elasticEaseIn : <span class="keyword">function</span>(t, b, c, d, a, p) &#123;</span><br><span class="line">        <span class="keyword">if</span> (t == 0)</span><br><span class="line">            <span class="built_in">return</span> b;</span><br><span class="line">        <span class="keyword">if</span> ((t /= d) == 1)</span><br><span class="line">            <span class="built_in">return</span> b + c;</span><br><span class="line">        <span class="keyword">if</span> (!p)</span><br><span class="line">            p = d * 0.3;</span><br><span class="line">        <span class="keyword">if</span> (!a || a &lt; Math.abs(c)) &#123;</span><br><span class="line">            a = c;</span><br><span class="line">            var s = p / 4;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            var s = p / (2 * Math.PI) * Math.asin(c / a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    elasticEaseOut : <span class="keyword">function</span>(t, b, c, d, a, p) &#123;</span><br><span class="line">        <span class="keyword">if</span> (t == 0)</span><br><span class="line">            <span class="built_in">return</span> b;</span><br><span class="line">        <span class="keyword">if</span> ((t /= d) == 1)</span><br><span class="line">            <span class="built_in">return</span> b + c;</span><br><span class="line">        <span class="keyword">if</span> (!p)</span><br><span class="line">            p = d * 0.3;</span><br><span class="line">        <span class="keyword">if</span> (!a || a &lt; Math.abs(c)) &#123;</span><br><span class="line">            a = c;</span><br><span class="line">            var s = p / 4;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            var s = p / (2 * Math.PI) * Math.asin(c / a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b);</span><br><span class="line">    &#125;,</span><br><span class="line">    elasticEaseInOut : <span class="keyword">function</span>(t, b, c, d, a, p) &#123;</span><br><span class="line">        <span class="keyword">if</span> (t == 0) &#123;</span><br><span class="line">            <span class="built_in">return</span> b;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((t /= d / 2) == 2) &#123;</span><br><span class="line">            <span class="built_in">return</span> b + c;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!p) &#123;</span><br><span class="line">            var p = d * (0.3 * 1.5);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!a || a &lt; Math.abs(c)) &#123;</span><br><span class="line">            var a = c;</span><br><span class="line">            var s = p / 4;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            var s = p / (2 * Math.PI) * Math.asin(c / a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (t &lt; 1) &#123;</span><br><span class="line">            <span class="built_in">return</span> -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * 深度复制对象</span><br><span class="line"> *</span><br><span class="line"> * @param &#123;Object&#125; obj  复制对象</span><br><span class="line"> * @param &#123;Property&#125; preventName 不需要进行复制的对象属性</span><br><span class="line"> */</span><br><span class="line">Fx.objectClone = <span class="keyword">function</span>(obj, preventName) &#123;</span><br><span class="line">    <span class="keyword">if</span> ((typeof obj) == <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">        var res = <span class="string">&#x27;[object Array]&#x27;</span> === Object.prototype.toString.apply(obj) ? [] : &#123;&#125;;</span><br><span class="line">        <span class="keyword">for</span> (var i <span class="keyword">in</span> obj) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i != preventName) res[i] = arguments.callee(obj[i], preventName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> res;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((typeof obj) == <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">        <span class="built_in">return</span> (new obj()).constructor;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> obj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>                </div>            </div><h1 id="记录动画进度html"><a href="#记录动画进度html" class="headerlink" title="记录动画进度html"></a>记录动画进度html</h1><div class="fold_hider-w">                <div class="fold_hider">                    <div class="hider_title">                        <span class="hider_title_zd">代码折叠</span>                        <span class="hider_title_zk">代码展开</span>                    </div>                </div>                <div class="fold">                <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">&quot;-//W3C//DTD HTML 4.01//EN&quot;</span> <span class="string">&quot;http://www.w3.org/TR/html4/strict.dtd&quot;</span>&gt;</span><br><span class="line">    &lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span><br><span class="line">        &lt;title&gt;动画测试&lt;/title&gt;</span><br><span class="line">        &lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;FX.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">        &lt;style <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">            button &#123;margin-left:20px;&#125;</span><br><span class="line">        &lt;/style&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;button onclick=<span class="string">&quot;clearTimer();animate()&quot;</span>&gt;开建执行动画&lt;/button&gt;</span><br><span class="line">    &lt;button onclick=<span class="string">&quot;clearTimer(); fx.pause();&quot;</span> disabled=<span class="literal">true</span>&gt;暂停&lt;/button&gt;</span><br><span class="line">    &lt;button onclick=<span class="string">&quot;clearTimer(); fx.play()&quot;</span> disabled=<span class="literal">true</span>&gt;继续播放&lt;/button&gt;</span><br><span class="line">    &lt;button onclick=<span class="string">&quot;clearTimer(); fx.rePlay();&quot;</span> disabled=<span class="literal">true</span>&gt;重新播放&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=<span class="string">&quot;margin-top:10px;&quot;</span>&gt;当前动画的执行的百分比:&lt;span id=<span class="string">&quot;animatePercent&quot;</span>&gt;&lt;/span&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=<span class="string">&quot;bar&quot;</span> style=<span class="string">&quot;width:10em; height:30%; position:absolute; border:1px solid red; margin-top:50px; left:50px;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div style=<span class="string">&quot;height:2800px;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">        <span class="keyword">function</span> rand(min,max)&#123;</span><br><span class="line">            <span class="built_in">return</span> Math.round(min+(Math.random()*(max-min)));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        var easing = [<span class="string">&#x27;simple&#x27;</span>, <span class="string">&#x27;regularEaseIn&#x27;</span>, <span class="string">&#x27;regularEaseOut&#x27;</span>, <span class="string">&#x27;regularEaseInOut&#x27;</span>, <span class="string">&#x27;backEaseIn&#x27;</span>, <span class="string">&#x27;backEaseOut&#x27;</span>, <span class="string">&#x27;backEaseInOut&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;bounceEaseOut&#x27;</span>, <span class="string">&#x27;bounceEaseIn&#x27;</span>, <span class="string">&#x27;bounceEaseInOut&#x27;</span>, <span class="string">&#x27;strongEaseIn&#x27;</span>, <span class="string">&#x27;strongEaseOut&#x27;</span>, <span class="string">&#x27;strongEaseInOut&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;elasticEaseIn&#x27;</span>, <span class="string">&#x27;elasticEaseOut&#x27;</span>, <span class="string">&#x27;elasticEaseInOut&#x27;</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        var fx = null;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> addEvent(el, fn, handler) &#123;</span><br><span class="line">            <span class="keyword">if</span>(el.attachEvent) &#123;</span><br><span class="line">                el.attachEvent(<span class="string">&quot;on&quot;</span> + fn, handler);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                el.addEventListener(fn, handler, <span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (/firefox/i.test(navigator.userAgent)) &#123;</span><br><span class="line">            document.addEventListener(<span class="string">&#x27;DOMMouseScroll&#x27;</span>, wheel, <span class="literal">false</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            document.onmousewheel = wheel;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> wheel(ev) &#123;</span><br><span class="line">            <span class="built_in">return</span> ;</span><br><span class="line">            ev = ev || window.event;</span><br><span class="line"></span><br><span class="line">            var delta = 0;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(ev.wheelDelta) &#123;//非FF</span><br><span class="line">                delta = ev.wheelDelta;// /120;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(ev.detail) &#123;//FF</span><br><span class="line">                delta = ev.detail;  // /3;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(ev.preventDefault) &#123;</span><br><span class="line">                ev.preventDefault();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ev.returnValue = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            var val = ev.wheelDelta || ev.detail;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(fx) &#123;</span><br><span class="line">                fx.stop();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            fx = new Fx(<span class="string">&quot;abcdefg&quot;</span>, &#123;</span><br><span class="line">                <span class="string">&#x27;scrollTop&#x27;</span> : &#123;to:val&gt;0?<span class="string">&quot;-&quot;</span> + val : <span class="string">&quot;+&quot;</span> + Math.abs(val)&#125;</span><br><span class="line">            &#125;, .3, <span class="string">&quot;easeInOut&quot;</span>);</span><br><span class="line"></span><br><span class="line">            setTimeout(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">                fx.start(<span class="literal">true</span>);</span><br><span class="line">            &#125;, 0)</span><br><span class="line"></span><br><span class="line">            alert(ev.wheelDelta + <span class="string">&quot;\n&quot;</span> + ev.detail);</span><br><span class="line">            <span class="keyword">if</span>(delta) &#123;</span><br><span class="line">                <span class="keyword">if</span>(delta &lt; 0) &#123;</span><br><span class="line">                    document.title = <span class="string">&quot;向下滚动的&quot;</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    document.title = <span class="string">&quot;向上滚动的&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="function"><span class="title">animate</span></span>() &#123;</span><br><span class="line">            <span class="keyword">if</span>(fx) &#123;</span><br><span class="line">                fx.pause();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                var btns = document.getElementsByTagName(<span class="string">&quot;button&quot;</span>);</span><br><span class="line">                <span class="keyword">for</span>(var i=1, len=btns.length; i&lt;len; i++) &#123;</span><br><span class="line">                    btns[i].disabled = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            fx = new Fx(<span class="string">&#x27;bar&#x27;</span>, &#123;</span><br><span class="line">                top: &#123;to: rand(10, 30)&#125;,</span><br><span class="line">                left: &#123;to: rand(20, 40), units: <span class="string">&#x27;ex&#x27;</span>&#125;,</span><br><span class="line">                width: &#123;to: rand(10, 40), units: <span class="string">&#x27;em&#x27;</span>&#125;,</span><br><span class="line">                height: &#123;to: rand(10, 260), units: <span class="string">&#x27;%&#x27;</span>&#125;,</span><br><span class="line">                opacity : &#123;from:rand(0, 1), to:(Math.min(rand(0, 1))+0.1, 1)&#125;,</span><br><span class="line">                backgroundColor: &#123;to: <span class="string">&quot;rgb(&quot;</span>+rand(0, 255)+<span class="string">&quot;, &quot;</span>+rand(0, 255)+<span class="string">&quot;, &quot;</span>+rand(0, 255)+<span class="string">&quot;)&quot;</span>&#125;</span><br><span class="line">            &#125;, 1, easing[rand(0, easing.length - 1)]);</span><br><span class="line"></span><br><span class="line">            fx.onMotionChange = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">                document.getElementById(<span class="string">&#x27;animatePercent&#x27;</span>).innerHTML = this.getPercent();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            fx.start();</span><br><span class="line"></span><br><span class="line">            fx.onMotionStop = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">                animateTimer = setTimeout(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">                    animate();</span><br><span class="line">                &#125;, 500);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        var animateTimer = null;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="function"><span class="title">clearTimer</span></span>() &#123;</span><br><span class="line">            <span class="keyword">if</span>(animateTimer) &#123;</span><br><span class="line">                clearTimeout(animateTimer);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">    &lt;/html&gt;</span><br></pre></td></tr></table></figure>                </div>            </div>]]></content>
    
    
    <summary type="html">&lt;p&gt;&amp;nbsp;&lt;/p&gt;</summary>
    
    
    
    <category term="Ecmascript" scheme="https://zuitaibai.gitee.io/blog/categories/Ecmascript/"/>
    
    
    <category term="js" scheme="https://zuitaibai.gitee.io/blog/tags/js/"/>
    
    <category term="动画" scheme="https://zuitaibai.gitee.io/blog/tags/%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
</feed>
